{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/status_page/public/status_page.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/status_page/public/status_page.js","mtime":1515552030000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _notify = require('ui/notify');\n\nrequire('ui/autoload/styles');\n\nrequire('plugins/status_page/status_page_metric');\n\nrequire('plugins/status_page/status_page.less');\n\nvar _modules = require('ui/modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar chrome = require('ui/chrome').setRootTemplate(require('plugins/status_page/status_page.html')).setRootController('ui', function ($http, buildNum, buildSha) {\n  var ui = this;\n  ui.loading = false;\n\n  ui.buildInfo = {\n    num: buildNum,\n    sha: buildSha.substr(0, 8)\n  };\n\n  ui.refresh = function () {\n    ui.loading = true;\n\n    // go ahead and get the info you want\n    return $http.get(chrome.addBasePath('/api/status')).then(function (resp) {\n\n      if (ui.fetchError) {\n        ui.fetchError.clear();\n        ui.fetchError = null;\n      }\n\n      var data = resp.data;\n      var metrics = data.metrics;\n      if (metrics) {\n        ui.metrics = [{\n          name: 'Heap Total',\n          value: _lodash2.default.get(metrics, 'process.mem.heap_max_in_bytes'),\n          type: 'byte'\n        }, {\n          name: 'Heap Used',\n          value: _lodash2.default.get(metrics, 'process.mem.heap_used_in_bytes'),\n          type: 'byte'\n        }, {\n          name: 'Load',\n          value: [_lodash2.default.get(metrics, 'os.cpu.load_average.1m'), _lodash2.default.get(metrics, 'os.cpu.load_average.5m'), _lodash2.default.get(metrics, 'os.cpu.load_average.15m')],\n          type: 'float'\n        }, {\n          name: 'Response Time Avg',\n          value: _lodash2.default.get(metrics, 'response_times.avg_in_millis'),\n          type: 'ms'\n        }, {\n          name: 'Response Time Max',\n          value: _lodash2.default.get(metrics, 'response_times.max_in_millis'),\n          type: 'ms'\n        }, {\n          name: 'Requests Per Second',\n          value: _lodash2.default.get(metrics, 'requests.total') * 1000 / _lodash2.default.get(metrics, 'collection_interval_in_millis')\n        }];\n      }\n\n      ui.name = data.name;\n      ui.statuses = data.status.statuses;\n\n      var overall = data.status.overall;\n      if (!ui.serverState || ui.serverState !== overall.state) {\n        ui.serverState = overall.state;\n        ui.serverStateMessage = overall.title;\n      }\n    }).catch(function () {\n      if (ui.fetchError) return;\n      ui.fetchError = _notify.notify.error('Failed to request server ui. Perhaps your server is down?');\n      ui.metrics = ui.statuses = ui.overall = null;\n    }).then(function () {\n      ui.loading = false;\n    });\n  };\n\n  ui.refresh();\n});\n\n_modules.uiModules.get('kibana').config(function (appSwitcherEnsureNavigationProvider) {\n  appSwitcherEnsureNavigationProvider.forceNavigation(true);\n});",null]}