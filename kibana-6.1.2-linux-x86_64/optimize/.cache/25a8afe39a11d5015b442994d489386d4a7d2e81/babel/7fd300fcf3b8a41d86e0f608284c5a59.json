{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/input_control_vis/public/control/filter_manager/range_filter_manager.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/input_control_vis/public/control/filter_manager/range_filter_manager.js","mtime":1515552027000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RangeFilterManager = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _filter_manager = require('./filter_manager.js');\n\nvar _range = require('ui/filter_manager/lib/range');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Convert slider value into ES range filter\nfunction toRange(sliderValue) {\n  return {\n    gte: sliderValue.min,\n    lt: sliderValue.max\n  };\n}\n\n// Convert ES range filter into slider value\nfunction fromRange(range) {\n  var sliderValue = {};\n  if (_lodash2.default.has(range, 'gte')) {\n    sliderValue.min = _lodash2.default.get(range, 'gte');\n  }\n  if (_lodash2.default.has(range, 'gt')) {\n    sliderValue.min = _lodash2.default.get(range, 'gt');\n  }\n  if (_lodash2.default.has(range, 'lte')) {\n    sliderValue.max = _lodash2.default.get(range, 'lte');\n  }\n  if (_lodash2.default.has(range, 'lt')) {\n    sliderValue.max = _lodash2.default.get(range, 'lt');\n  }\n  return sliderValue;\n}\n\nvar RangeFilterManager = exports.RangeFilterManager = function (_FilterManager) {\n  _inherits(RangeFilterManager, _FilterManager);\n\n  function RangeFilterManager() {\n    _classCallCheck(this, RangeFilterManager);\n\n    return _possibleConstructorReturn(this, (RangeFilterManager.__proto__ || Object.getPrototypeOf(RangeFilterManager)).apply(this, arguments));\n  }\n\n  _createClass(RangeFilterManager, [{\n    key: 'createFilter',\n\n    /**\n     * Convert slider value into filter\n     *\n     * @param {object} react-input-range value - POJO with `min` and `max` properties\n     * @return {object} range filter\n     */\n    value: function createFilter(value) {\n      var newFilter = (0, _range.buildRangeFilter)(this.indexPattern.fields.byName[this.fieldName], toRange(value), this.indexPattern);\n      newFilter.meta.controlledBy = this.controlId;\n      return newFilter;\n    }\n  }, {\n    key: 'getValueFromFilterBar',\n    value: function getValueFromFilterBar() {\n      var kbnFilters = this.findFilters();\n      if (kbnFilters.length === 0) {\n        return this.getUnsetValue();\n      } else {\n        var range = null;\n        if (_lodash2.default.has(kbnFilters[0], 'script')) {\n          range = _lodash2.default.get(kbnFilters[0], 'script.script.params');\n        } else {\n          range = _lodash2.default.get(kbnFilters[0], ['range', this.fieldName]);\n        }\n\n        return fromRange(range);\n      }\n    }\n  }]);\n\n  return RangeFilterManager;\n}(_filter_manager.FilterManager);",null]}