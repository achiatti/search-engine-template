{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/visualizations/components/annotation.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/visualizations/components/annotation.js","mtime":1515552030000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _reactcss = require('reactcss');\n\nvar _reactcss2 = _interopRequireDefault(_reactcss);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Annotation = function (_Component) {\n  _inherits(Annotation, _Component);\n\n  function Annotation(props) {\n    _classCallCheck(this, Annotation);\n\n    var _this = _possibleConstructorReturn(this, (Annotation.__proto__ || Object.getPrototypeOf(Annotation)).call(this, props));\n\n    _this.state = {\n      showTooltip: false\n    };\n    _this.handleMouseOut = _this.handleMouseOut.bind(_this);\n    _this.handleMouseOver = _this.handleMouseOver.bind(_this);\n    return _this;\n  }\n\n  _createClass(Annotation, [{\n    key: 'renderTooltip',\n    value: function renderTooltip() {\n      if (!this.state.showTooltip) return null;\n\n      var _props$series = _slicedToArray(this.props.series, 2),\n          timestamp = _props$series[0],\n          messageSource = _props$series[1];\n\n      var reversed = this.props.reversed ? '-reversed' : '';\n      var messages = messageSource.map(function (message, i) {\n        return _react2.default.createElement(\n          'div',\n          {\n            key: message + '-' + i,\n            className: 'annotation__message'\n          },\n          message\n        );\n      });\n      return _react2.default.createElement(\n        'div',\n        { className: 'annotation__tooltip' },\n        _react2.default.createElement(\n          'div',\n          { className: 'annotation__tooltip-body' + reversed },\n          _react2.default.createElement(\n            'div',\n            { className: 'annotation__timestamp' + reversed },\n            (0, _moment2.default)(timestamp).format('lll')\n          ),\n          messages\n        ),\n        _react2.default.createElement('div', { className: 'annotation__caret' + reversed })\n      );\n    }\n  }, {\n    key: 'handleMouseOver',\n    value: function handleMouseOver() {\n      this.setState({ showTooltip: true });\n    }\n  }, {\n    key: 'handleMouseOut',\n    value: function handleMouseOut() {\n      this.setState({ showTooltip: false });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          color = _props.color,\n          plot = _props.plot,\n          icon = _props.icon,\n          series = _props.series;\n\n      var offset = plot.pointOffset({ x: series[0], y: 0 });\n      var tooltip = this.renderTooltip();\n      var style = (0, _reactcss2.default)({\n        default: {\n          container: {\n            left: offset.left - 6,\n            bottom: 0,\n            top: 5\n          },\n          line: {\n            backgroundColor: color\n          },\n          icon: { color: color }\n        }\n      });\n      return _react2.default.createElement(\n        'div',\n        { className: 'annotation', style: style.container },\n        _react2.default.createElement('div', { className: 'annotation__line', style: style.line }),\n        _react2.default.createElement(\n          'div',\n          {\n            onFocus: this.handleMouseOver,\n            onBlur: this.handleMouseOut,\n            onMouseOver: this.handleMouseOver,\n            onMouseOut: this.handleMouseOut,\n            className: 'annotation__icon'\n          },\n          _react2.default.createElement('i', { className: 'fa ' + icon, style: style.icon }),\n          tooltip\n        )\n      );\n    }\n  }]);\n\n  return Annotation;\n}(_react.Component);\n\nAnnotation.propTypes = {\n  series: _propTypes2.default.array,\n  icon: _propTypes2.default.string,\n  color: _propTypes2.default.string,\n  plot: _propTypes2.default.object,\n  reversed: _propTypes2.default.bool\n};\n\nexports.default = Annotation;\nmodule.exports = exports['default'];",null]}