{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_types/param_types/optioned.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_types/param_types/optioned.js","mtime":1515552034000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptionedParamTypeProvider = OptionedParamTypeProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _indexed_array = require('ui/indexed_array');\n\nvar _base = require('./base');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction OptionedParamTypeProvider(Private) {\n\n  var BaseParamType = Private(_base.BaseParamTypeProvider);\n\n  _lodash2.default.class(OptionedParamType).inherits(BaseParamType);\n  function OptionedParamType(config) {\n    OptionedParamType.Super.call(this, config);\n\n    this.options = new _indexed_array.IndexedArray({\n      index: ['val'],\n      immutable: true,\n      initialSet: this.options\n    });\n  }\n\n  /**\n   * Serialize a selection to be stored in the database\n   * @param  {object} selected - the option that was selected\n   * @return {any}\n   */\n  OptionedParamType.prototype.serialize = function (selected) {\n    return selected.val;\n  };\n\n  /**\n   * Take a value that was serialized to the database and\n   * return the option that is represents\n   *\n   * @param  {any} val - the value that was saved\n   * @return {object}\n   */\n  OptionedParamType.prototype.deserialize = function (val) {\n    return this.options.byVal[val];\n  };\n\n  /**\n   * Write the aggregation parameter.\n   *\n   * @param  {AggConfig} aggConfig - the entire configuration for this agg\n   * @param  {object} output - the result of calling write on all of the aggregations\n   *                         parameters.\n   * @param  {object} output.params - the final object that will be included as the params\n   *                               for the agg\n   * @return {undefined}\n   */\n  OptionedParamType.prototype.write = function (aggConfig, output) {\n    output.params[this.name] = aggConfig.params[this.name].val;\n  };\n\n  return OptionedParamType;\n}",null]}