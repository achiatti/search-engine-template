{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/components/panel_config/metric.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/components/panel_config/metric.js","mtime":1515552029000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _series_editor = require('../series_editor');\n\nvar _series_editor2 = _interopRequireDefault(_series_editor);\n\nvar _index_pattern = require('../index_pattern');\n\nvar _create_text_handler = require('../lib/create_text_handler');\n\nvar _create_text_handler2 = _interopRequireDefault(_create_text_handler);\n\nvar _color_rules = require('../color_rules');\n\nvar _color_rules2 = _interopRequireDefault(_color_rules);\n\nvar _yes_no = require('../yes_no');\n\nvar _yes_no2 = _interopRequireDefault(_yes_no);\n\nvar _uuid = require('uuid');\n\nvar _uuid2 = _interopRequireDefault(_uuid);\n\nvar _services = require('ui_framework/services');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MetricPanelConfig = function (_Component) {\n  _inherits(MetricPanelConfig, _Component);\n\n  function MetricPanelConfig(props) {\n    _classCallCheck(this, MetricPanelConfig);\n\n    var _this = _possibleConstructorReturn(this, (MetricPanelConfig.__proto__ || Object.getPrototypeOf(MetricPanelConfig)).call(this, props));\n\n    _this.state = { selectedTab: 'data' };\n    return _this;\n  }\n\n  _createClass(MetricPanelConfig, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var model = this.props.model;\n\n      if (!model.background_color_rules || model.background_color_rules && model.background_color_rules.length === 0) {\n        this.props.onChange({\n          background_color_rules: [{ id: _uuid2.default.v1() }]\n        });\n      }\n    }\n  }, {\n    key: 'switchTab',\n    value: function switchTab(selectedTab) {\n      this.setState({ selectedTab: selectedTab });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var selectedTab = this.state.selectedTab;\n\n      var defaults = { filter: '' };\n      var model = _extends({}, defaults, this.props.model);\n      var htmlId = (0, _services.htmlIdGenerator)();\n      var handleTextChange = (0, _create_text_handler2.default)(this.props.onChange);\n      var view = void 0;\n      if (selectedTab === 'data') {\n        view = _react2.default.createElement(_series_editor2.default, {\n          colorPicker: false,\n          fields: this.props.fields,\n          limit: 2,\n          model: this.props.model,\n          name: this.props.name,\n          onChange: this.props.onChange\n        });\n      } else {\n        view = _react2.default.createElement(\n          'div',\n          { className: 'vis_editor__container' },\n          _react2.default.createElement(_index_pattern.IndexPattern, {\n            fields: this.props.fields,\n            model: this.props.model,\n            onChange: this.props.onChange\n          }),\n          _react2.default.createElement(\n            'div',\n            { className: 'vis_editor__vis_config-row' },\n            _react2.default.createElement(\n              'label',\n              { className: 'vis_editor__label', htmlFor: htmlId('panelFilter') },\n              'Panel Filter'\n            ),\n            _react2.default.createElement('input', {\n              id: htmlId('panelFilter'),\n              className: 'vis_editor__input-grows',\n              type: 'text',\n              onChange: handleTextChange('filter'),\n              value: model.filter\n            }),\n            _react2.default.createElement(\n              'div',\n              { className: 'vis_editor__label' },\n              'Ignore Global Filter'\n            ),\n            _react2.default.createElement(_yes_no2.default, {\n              value: model.ignore_global_filter,\n              name: 'ignore_global_filter',\n              onChange: this.props.onChange\n            })\n          ),\n          _react2.default.createElement(\n            'div',\n            null,\n            _react2.default.createElement(\n              'div',\n              { className: 'vis_editor__label' },\n              'Color Rules'\n            )\n          ),\n          _react2.default.createElement(\n            'div',\n            { className: 'vis_editor__vis_config-row' },\n            _react2.default.createElement(_color_rules2.default, {\n              model: model,\n              onChange: this.props.onChange,\n              name: 'background_color_rules'\n            })\n          )\n        );\n      }\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          'div',\n          { className: 'kbnTabs', role: 'tablist' },\n          _react2.default.createElement(\n            'button',\n            {\n              role: 'tab',\n              'aria-selected': selectedTab === 'data',\n              className: 'kbnTabs__tab' + (selectedTab === 'data' && '-active' || ''),\n              onClick: function onClick() {\n                return _this2.switchTab('data');\n              }\n            },\n            'Data'\n          ),\n          _react2.default.createElement(\n            'button',\n            {\n              role: 'tab',\n              'aria-selected': selectedTab === 'options',\n              className: 'kbnTabs__tab' + (selectedTab === 'options' && '-active' || ''),\n              onClick: function onClick() {\n                return _this2.switchTab('options');\n              }\n            },\n            'Panel Options'\n          )\n        ),\n        view\n      );\n    }\n  }]);\n\n  return MetricPanelConfig;\n}(_react.Component);\n\nMetricPanelConfig.propTypes = {\n  fields: _propTypes2.default.object,\n  model: _propTypes2.default.object,\n  onChange: _propTypes2.default.func,\n  visData: _propTypes2.default.object\n};\n\nexports.default = MetricPanelConfig;\nmodule.exports = exports['default'];",null]}