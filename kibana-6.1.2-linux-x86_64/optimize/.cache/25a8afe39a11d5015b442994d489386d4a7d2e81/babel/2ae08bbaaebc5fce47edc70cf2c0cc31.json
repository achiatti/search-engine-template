{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_response/geo_json/geo_json.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_response/geo_json/geo_json.js","mtime":1515552033000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AggResponseGeoJsonProvider = AggResponseGeoJsonProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _rows_to_features = require('ui/agg_response/geo_json/rows_to_features');\n\nvar _tooltip_formatter = require('ui/agg_response/geo_json/_tooltip_formatter');\n\nvar _grid_dimensions = require('./grid_dimensions');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction AggResponseGeoJsonProvider(Private) {\n\n  var tooltipFormatter = Private(_tooltip_formatter.TileMapTooltipFormatterProvider);\n\n  return function (vis, table) {\n\n    function columnIndex(schema) {\n      return _lodash2.default.findIndex(table.columns, function (col) {\n        return col.aggConfig.schema.name === schema;\n      });\n    }\n\n    var geoI = columnIndex('segment');\n    var metricI = columnIndex('metric');\n    var centroidI = _lodash2.default.findIndex(table.columns, function (col) {\n      return col.aggConfig.type.name === 'geo_centroid';\n    });\n\n    var geoAgg = _lodash2.default.get(table.columns, [geoI, 'aggConfig']);\n    var metricAgg = _lodash2.default.get(table.columns, [metricI, 'aggConfig']);\n\n    var features = (0, _rows_to_features.convertRowsToFeatures)(table, geoI, metricI, centroidI);\n    var values = features.map(function (feature) {\n      return feature.properties.value;\n    });\n\n    return {\n      title: table.title(),\n      valueFormatter: metricAgg && metricAgg.fieldFormatter(),\n      tooltipFormatter: tooltipFormatter,\n      geohashGridAgg: geoAgg,\n      geoJson: {\n        type: 'FeatureCollection',\n        features: features,\n        properties: {\n          min: _lodash2.default.min(values),\n          max: _lodash2.default.max(values),\n          zoom: geoAgg && geoAgg.vis.uiStateVal('mapZoom'),\n          center: geoAgg && geoAgg.vis.uiStateVal('mapCenter'),\n          geohashPrecision: geoAgg && geoAgg.params.precision,\n          geohashGridDimensionsAtEquator: geoAgg && (0, _grid_dimensions.gridDimensions)(geoAgg.params.precision)\n        }\n      }\n    };\n  };\n}",null]}