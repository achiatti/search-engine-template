{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/utils/lodash-mixins/lang.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/utils/lodash-mixins/lang.js","mtime":1515552038000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lodashLangMixin = lodashLangMixin;\nfunction lodashLangMixin(_) {\n  _.mixin(_, {\n\n    /**\n     * Checks to see if an input value is number-like, this\n     * includes strings that parse into valid numbers and objects\n     * that don't have a type of number but still parse properly\n     * via-some sort of valueOf magic\n     *\n     * @param  {any} v - the value to check\n     * @return {Boolean}\n     */\n    isNumeric: function isNumeric(v) {\n      return !_.isNaN(v) && (typeof v === 'number' || !Array.isArray(v) && !_.isNaN(parseFloat(v)));\n    }\n\n  });\n}",null]}