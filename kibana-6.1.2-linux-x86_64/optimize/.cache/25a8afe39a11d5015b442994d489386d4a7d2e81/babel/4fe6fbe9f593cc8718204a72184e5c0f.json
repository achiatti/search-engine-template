{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/visualize/listing/visualize_listing.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/visualize/listing/visualize_listing.js","mtime":1515552029000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VisualizeListingController = VisualizeListingController;\n\nvar _saved_object_registry = require('ui/saved_objects/saved_object_registry');\n\nrequire('ui/pager_control');\n\nrequire('ui/pager');\n\nvar _modules = require('ui/modules');\n\nvar _visualize_listing_table = require('./visualize_listing_table');\n\nvar app = _modules.uiModules.get('app/visualize', ['ngRoute', 'react']);\napp.directive('visualizeListingTable', function (reactDirective) {\n  return reactDirective(_visualize_listing_table.VisualizeListingTable);\n});\n\nfunction VisualizeListingController($injector) {\n  var _this = this;\n\n  var Notifier = $injector.get('Notifier');\n  var Private = $injector.get('Private');\n  var timefilter = $injector.get('timefilter');\n  var config = $injector.get('config');\n\n  timefilter.enabled = false;\n\n  // TODO: Extract this into an external service.\n  var services = Private(_saved_object_registry.SavedObjectRegistryProvider).byLoaderPropertiesName;\n  var visualizationService = services.visualizations;\n  var notify = new Notifier({ location: 'Visualize' });\n\n  this.fetchItems = function (filter) {\n    var isLabsEnabled = config.get('visualize:enableLabs');\n    return visualizationService.find(filter, config.get('savedObjects:listingLimit')).then(function (result) {\n      _this.totalItems = result.total;\n      _this.showLimitError = result.total > config.get('savedObjects:listingLimit');\n      _this.listingLimit = config.get('savedObjects:listingLimit');\n      return result.hits.filter(function (result) {\n        return isLabsEnabled || result.type.stage !== 'lab';\n      });\n    });\n  };\n\n  this.deleteSelectedItems = function deleteSelectedItems(selectedIds) {\n    return visualizationService.delete(selectedIds).catch(function (error) {\n      return notify.error(error);\n    });\n  };\n}",null]}