{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/query_bar/directive/query_bar.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/query_bar/directive/query_bar.js","mtime":1515552037000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _modules = require('ui/modules');\n\nvar _compat = require('ui/compat');\n\nvar _query_bar = require('./query_bar.html');\n\nvar _query_bar2 = _interopRequireDefault(_query_bar);\n\nvar _queryLanguages = require('../lib/queryLanguages');\n\nrequire('../../directives/documentation_href');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = _modules.uiModules.get('kibana');\n\n_module.directive('queryBar', function () {\n\n  return {\n    restrict: 'E',\n    template: _query_bar2.default,\n    scope: {\n      query: '=',\n      appName: '=?',\n      onSubmit: '&',\n      disableAutoFocus: '='\n    },\n    controllerAs: 'queryBar',\n    bindToController: true,\n    controller: (0, _compat.callAfterBindingsWorkaround)(function ($scope, config) {\n      var _this = this;\n\n      this.appName = this.appName || 'global';\n      this.availableQueryLanguages = _queryLanguages.queryLanguages;\n      this.showLanguageSwitcher = config.get('search:queryLanguage:switcher:enable');\n      this.typeaheadKey = function () {\n        return _this.appName + '-' + _this.query.language;\n      };\n\n      this.submit = function () {\n        _this.onSubmit({ $query: _this.localQuery });\n      };\n\n      this.selectLanguage = function () {\n        _this.localQuery.query = '';\n        _this.submit();\n      };\n\n      $scope.$watch('queryBar.query', function (newQuery) {\n        _this.localQuery = _extends({}, newQuery);\n      }, true);\n    })\n  };\n});",null]}