{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_response/point_series/_get_point.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_response/point_series/_get_point.js","mtime":1515552033000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PointSeriesGetPointProvider = PointSeriesGetPointProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction PointSeriesGetPointProvider() {\n  function unwrap(aggConfigResult, def) {\n    return aggConfigResult ? aggConfigResult.value : def;\n  }\n\n  return function getPoint(x, series, yScale, row, y, z) {\n    var zRow = z && row[z.i];\n    var xRow = row[x.i];\n\n    var point = {\n      x: unwrap(xRow, '_all'),\n      xi: xRow && xRow.$order,\n      y: unwrap(row[y.i]),\n      z: zRow && unwrap(zRow),\n      aggConfigResult: row[y.i],\n      extraMetrics: _lodash2.default.compact([zRow]),\n      yScale: yScale\n    };\n\n    if (point.y === 'NaN') {\n      // filter out NaN from stats\n      // from metrics that are not based at zero\n      return;\n    }\n\n    if (series) {\n      point.aggConfig = series.agg;\n      point.series = series.agg.fieldFormatter()(unwrap(row[series.i]));\n    } else if (y) {\n      // If the data is not split up with a series aspect, then\n      // each point's \"series\" becomes the y-agg that produced it\n      point.aggConfig = y.col.aggConfig;\n      point.series = y.col.title;\n    }\n\n    if (yScale) {\n      point.y *= yScale;\n    }\n\n    return point;\n  };\n}",null]}