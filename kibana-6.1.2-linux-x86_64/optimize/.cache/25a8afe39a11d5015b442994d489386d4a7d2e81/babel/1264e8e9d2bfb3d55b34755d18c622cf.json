{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/utils/modify_url.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/utils/modify_url.js","mtime":1515552212791},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.modifyUrl = modifyUrl;\n\nvar _url = require('url');\n\n/**\n *  Takes a URL and a function that takes the meaningful parts\n *  of the URL as a key-value object, modifies some or all of\n *  the parts, and returns the modified parts formatted again\n *  as a url.\n *\n *  Url Parts sent:\n *    - protocol\n *    - slashes (does the url have the //)\n *    - auth\n *    - hostname (just the name of the host, no port or auth information)\n *    - port\n *    - pathmame (the path after the hostname, no query or hash, starts\n *        with a slash if there was a path)\n *    - query (always an object, even when no query on original url)\n *    - hash\n *\n *  Why?\n *    - The default url library in node produces several conflicting\n *      properties on the \"parsed\" output. Modifying any of these might\n *      lead to the modifications being ignored (depending on which\n *      property was modified)\n *    - It's not always clear wither to use path/pathname, host/hostname,\n *      so this trys to add helpful constraints\n *\n *  @param  {String} url - the url to parse\n *  @param  {Function<Object|undefined>} block - a function that will modify the parsed url, or return a new one\n *  @return {String} the modified and reformatted url\n */\nfunction modifyUrl(url, block) {\n  if (typeof block !== 'function') {\n    throw new TypeError('You must pass a block to define the modifications desired');\n  }\n\n  var parsed = (0, _url.parse)(url, true);\n\n  // copy over the most specific version of each\n  // property. By default, the parsed url includes\n  // several conflicting properties (like path and\n  // pathname + search, or search and query) and keeping\n  // track of which property is actually used when they\n  // are formatted is harder than necessary\n  var meaningfulParts = {\n    protocol: parsed.protocol,\n    slashes: parsed.slashes,\n    auth: parsed.auth,\n    hostname: parsed.hostname,\n    port: parsed.port,\n    pathname: parsed.pathname,\n    query: parsed.query || {},\n    hash: parsed.hash\n  };\n\n  // the block modifies the meaningfulParts object, or returns a new one\n  var modifiedParts = block(meaningfulParts) || meaningfulParts;\n\n  // format the modified/replaced meaningfulParts back into a url\n  return (0, _url.format)({\n    protocol: modifiedParts.protocol,\n    slashes: modifiedParts.slashes,\n    auth: modifiedParts.auth,\n    hostname: modifiedParts.hostname,\n    port: modifiedParts.port,\n    pathname: modifiedParts.pathname,\n    query: modifiedParts.query,\n    hash: modifiedParts.hash\n  });\n}",null]}