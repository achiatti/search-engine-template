{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/utils/brush_event.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/utils/brush_event.js","mtime":1515552038000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UtilsBrushEventProvider = UtilsBrushEventProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _range = require('ui/filter_manager/lib/range');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction UtilsBrushEventProvider(timefilter) {\n  return function ($state) {\n    return function (event) {\n      if (!event.data.xAxisField) {\n        return;\n      }\n\n      var isDate = event.data.xAxisField.type === 'date';\n      var isNumber = event.data.xAxisField.type === 'number';\n\n      if (isDate && event.data.xAxisField.name === event.data.indexPattern.timeFieldName) {\n        setTimefilter();\n      } else if (isDate || isNumber) {\n        setRange();\n      }\n\n      function setTimefilter() {\n        var from = (0, _moment2.default)(event.range[0]);\n        var to = (0, _moment2.default)(event.range[1]);\n\n        if (to - from === 0) return;\n\n        timefilter.time.from = from;\n        timefilter.time.to = to;\n        timefilter.time.mode = 'absolute';\n      }\n\n      function setRange() {\n        if (event.range.length <= 1) return;\n\n        var existingFilter = $state.filters.find(function (filter) {\n          return filter.meta && filter.meta.key === event.data.xAxisField.name;\n        });\n\n        var min = event.range[0];\n        var max = event.range[event.range.length - 1];\n        var range = void 0;\n        if (isDate) {\n          range = {\n            gte: (0, _moment2.default)(min).valueOf(),\n            lt: (0, _moment2.default)(max).valueOf(),\n            format: 'epoch_millis'\n          };\n        } else {\n          range = {\n            gte: min,\n            lt: max\n          };\n        }\n\n        if (_lodash2.default.has(existingFilter, 'range')) {\n          existingFilter.range[event.data.xAxisField.name] = range;\n        } else if (_lodash2.default.has(existingFilter, 'script.script.params.gte') && _lodash2.default.has(existingFilter, 'script.script.params.lt')) {\n          existingFilter.script.script.params.gte = min;\n          existingFilter.script.script.params.lt = max;\n        } else {\n          var newFilter = (0, _range.buildRangeFilter)(event.data.xAxisField, range, event.data.indexPattern, event.data.xAxisFormatter);\n          $state.$newFilters = [newFilter];\n        }\n      }\n    };\n  };\n}",null]}