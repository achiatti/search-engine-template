{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/indexed_array/inflector.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/indexed_array/inflector.js","mtime":1515552036000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.inflector = inflector;\n\nfunction upFirst(str, total) {\n  return str.charAt(0).toUpperCase() + (total ? str.substr(1).toLowerCase() : str.substr(1));\n}\n\nfunction startsWith(str, test) {\n  return str.substr(0, test.length).toLowerCase() === test.toLowerCase();\n}\n\nfunction endsWith(str, test) {\n  var tooShort = str.length < test.length;\n  if (tooShort) return;\n\n  return str.substr(str.length - test.length).toLowerCase() === test.toLowerCase();\n}\n\nfunction inflector(prefix, postfix) {\n  return function inflect(key) {\n    var inflected = void 0;\n\n    if (key.indexOf('.') !== -1) {\n      inflected = key.split('.').map(function (step, i) {\n        return i === 0 ? step : upFirst(step, true);\n      }).join('');\n    } else {\n      inflected = key;\n    }\n\n    if (prefix && !startsWith(key, prefix)) {\n      inflected = prefix + upFirst(inflected);\n    }\n\n    if (postfix && !endsWith(key, postfix)) {\n      inflected = inflected + postfix;\n    }\n\n    return inflected;\n  };\n}",null]}