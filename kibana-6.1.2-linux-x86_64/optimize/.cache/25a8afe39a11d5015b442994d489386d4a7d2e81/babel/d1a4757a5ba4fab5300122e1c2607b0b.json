{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/utils/cidr_mask.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/utils/cidr_mask.js","mtime":1515552038000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CidrMask = CidrMask;\n\nvar _ipv4_address = require('ui/utils/ipv4_address');\n\nvar _ipv4_address2 = _interopRequireDefault(_ipv4_address);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NUM_BITS = 32;\n\nfunction throwError(mask) {\n  throw Error('Invalid CIDR mask: ' + mask);\n}\n\nfunction CidrMask(mask) {\n  var splits = mask.split('\\/');\n  if (splits.length !== 2) throwError(mask);\n  this.initialAddress = new _ipv4_address2.default(splits[0]);\n  this.prefixLength = Number(splits[1]);\n  if (this.prefixLength < 1 || this.prefixLength > NUM_BITS) throwError(mask);\n}\n\nCidrMask.prototype.getRange = function () {\n  var variableBits = NUM_BITS - this.prefixLength;\n  var fromAddress = this.initialAddress.valueOf() >> variableBits << variableBits >>> 0; // >>> 0 coerces to unsigned\n  var numAddresses = Math.pow(2, variableBits);\n  return {\n    from: new _ipv4_address2.default(fromAddress).toString(),\n    to: new _ipv4_address2.default(fromAddress + numAddresses - 1).toString()\n  };\n};\n\nCidrMask.prototype.toString = function () {\n  return this.initialAddress.toString() + '/' + this.prefixLength;\n};",null]}