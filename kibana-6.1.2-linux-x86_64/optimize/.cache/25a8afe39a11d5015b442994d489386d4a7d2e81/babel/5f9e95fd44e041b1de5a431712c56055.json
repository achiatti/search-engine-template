{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_table/agg_table_group.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_table/agg_table_group.js","mtime":1515552034000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nrequire('ui/compile_recursive_directive');\n\nrequire('ui/agg_table');\n\nvar _modules = require('ui/modules');\n\nvar _agg_table_group = require('ui/agg_table/agg_table_group.html');\n\nvar _agg_table_group2 = _interopRequireDefault(_agg_table_group);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_modules.uiModules.get('kibana').directive('kbnAggTableGroup', function (compileRecursiveDirective) {\n  return {\n    restrict: 'E',\n    template: _agg_table_group2.default,\n    scope: {\n      group: '=',\n      perPage: '=?',\n      sort: '=?',\n      exportTitle: '=?',\n      showTotal: '=',\n      totalFunc: '='\n    },\n    compile: function compile($el) {\n      // Use the compile function from the RecursionHelper,\n      // And return the linking function(s) which it returns\n      return compileRecursiveDirective.compile($el, {\n        post: function post($scope) {\n          $scope.$watch('group', function (group) {\n            // clear the previous \"state\"\n            $scope.rows = $scope.columns = false;\n\n            if (!group || !group.tables.length) return;\n\n            var firstTable = group.tables[0];\n            var params = firstTable.aggConfig && firstTable.aggConfig.params;\n            // render groups that have Table children as if they were rows, because iteration is cleaner\n            var childLayout = params && !params.row ? 'columns' : 'rows';\n\n            $scope[childLayout] = group.tables;\n          });\n        }\n      });\n    }\n  };\n});",null]}