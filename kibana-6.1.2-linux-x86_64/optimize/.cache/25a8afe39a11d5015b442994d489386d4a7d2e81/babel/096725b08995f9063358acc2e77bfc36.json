{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/common/agg_lookup.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/common/agg_lookup.js","mtime":1515552207048},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isBasicAgg = isBasicAgg;\nexports.createOptions = createOptions;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nvar lookup = {\n  'count': 'Count',\n  'calculation': 'Bucket Script',\n  'std_deviation': 'Std. Deviation',\n  'variance': 'Variance',\n  'sum_of_squares': 'Sum of Sq.',\n  'avg': 'Average',\n  'max': 'Max',\n  'min': 'Min',\n  'sum': 'Sum',\n  'percentile': 'Percentile',\n  'percentile_rank': 'Percentile Rank',\n  'cardinality': 'Cardinality',\n  'value_count': 'Value Count',\n  'derivative': 'Derivative',\n  'cumulative_sum': 'Cumulative Sum',\n  'moving_average': 'Moving Average',\n  'avg_bucket': 'Overall Average',\n  'min_bucket': 'Overall Min',\n  'max_bucket': 'Overall Max',\n  'sum_bucket': 'Overall Sum',\n  'variance_bucket': 'Overall Variance',\n  'sum_of_squares_bucket': 'Overall Sum of Sq.',\n  'std_deviation_bucket': 'Overall Std. Deviation',\n  'series_agg': 'Series Agg',\n  'math': 'Math',\n  'serial_diff': 'Serial Difference',\n  'filter_ratio': 'Filter Ratio',\n  'positive_only': 'Positive Only',\n  'static': 'Static Value'\n};\n\nvar pipeline = ['calculation', 'derivative', 'cumulative_sum', 'moving_average', 'avg_bucket', 'min_bucket', 'max_bucket', 'sum_bucket', 'variance_bucket', 'sum_of_squares_bucket', 'std_deviation_bucket', 'series_agg', 'math', 'serial_diff', 'positive_only'];\n\nvar byType = {\n  _all: lookup,\n  pipeline: pipeline,\n  basic: _lodash2.default.omit(lookup, pipeline),\n  metrics: _lodash2.default.pick(lookup, ['count', 'avg', 'min', 'max', 'sum', 'cardinality', 'value_count'])\n};\n\nfunction isBasicAgg(item) {\n  return _lodash2.default.includes(Object.keys(byType.basic), item.type);\n}\n\nfunction createOptions() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '_all';\n  var siblings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var aggs = byType[type];\n  if (!aggs) aggs = byType._all;\n  var enablePipelines = siblings.some(isBasicAgg);\n  if (siblings.length <= 1) enablePipelines = false;\n  return (0, _lodash2.default)(aggs).map(function (label, value) {\n    var disabled = _lodash2.default.includes(pipeline, value) ? !enablePipelines : false;\n    return {\n      label: disabled ? label + ' (use the \"+\" button to add this pipeline agg)' : label,\n      value: value,\n      disabled: disabled\n    };\n  }).value();\n}\n\nexports.default = lookup;",null]}