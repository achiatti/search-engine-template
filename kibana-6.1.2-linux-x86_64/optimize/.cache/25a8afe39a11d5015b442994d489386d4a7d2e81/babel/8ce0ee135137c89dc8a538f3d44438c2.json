{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/management/sections/indices/index.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/management/sections/indices/index.js","mtime":1515552028000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nvar _management = require('ui/management');\n\nrequire('./create_index_pattern_wizard');\n\nrequire('./edit_index_pattern');\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _modules = require('ui/modules');\n\nvar _index = require('plugins/kibana/management/sections/indices/index.html');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _saved_objects = require('ui/saved_objects');\n\nvar _feature_catalogue = require('ui/registry/feature_catalogue');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar indexPatternsResolutions = {\n  indexPatterns: function indexPatterns(Private) {\n    var savedObjectsClient = Private(_saved_objects.SavedObjectsClientProvider);\n\n    return savedObjectsClient.find({\n      type: 'index-pattern',\n      fields: ['title'],\n      perPage: 10000\n    }).then(function (response) {\n      return response.savedObjects;\n    });\n  }\n};\n\n// add a dependency to all of the subsection routes\n_routes2.default.defaults(/management\\/kibana\\/indices/, {\n  resolve: indexPatternsResolutions\n});\n\n_routes2.default.defaults(/management\\/kibana\\/index/, {\n  resolve: indexPatternsResolutions\n});\n\n// wrapper directive, which sets some global stuff up like the left nav\n_modules.uiModules.get('apps/management').directive('kbnManagementIndices', function ($route, config, kbnUrl) {\n  return {\n    restrict: 'E',\n    transclude: true,\n    template: _index2.default,\n    link: function link($scope) {\n      $scope.editingId = $route.current.params.indexPatternId;\n      config.bindToScope($scope, 'defaultIndex');\n\n      $scope.$watch('defaultIndex', function () {\n        $scope.indexPatternList = $route.current.locals.indexPatterns.map(function (pattern) {\n          var id = pattern.id;\n\n          return {\n            id: id,\n            title: pattern.get('title'),\n            url: kbnUrl.eval('#/management/kibana/indices/{{id}}', { id: id }),\n            class: 'sidebar-item-title ' + ($scope.editingId === id ? 'active' : ''),\n            default: $scope.defaultIndex === id\n          };\n        });\n      });\n    }\n  };\n});\n\n_management.management.getSection('kibana').register('indices', {\n  display: 'Index Patterns',\n  order: 0,\n  url: '#/management/kibana/indices/'\n});\n\n_feature_catalogue.FeatureCatalogueRegistryProvider.register(function () {\n  return {\n    id: 'index_patterns',\n    title: 'Index Patterns',\n    description: 'Manage the index patterns that help retrieve your data from Elasticsearch.',\n    icon: '/plugins/kibana/assets/app_index_pattern.svg',\n    path: '/app/kibana#/management/kibana/indices',\n    showOnHomePage: true,\n    category: _feature_catalogue.FeatureCatalogueCategory.ADMIN\n  };\n});",null]}