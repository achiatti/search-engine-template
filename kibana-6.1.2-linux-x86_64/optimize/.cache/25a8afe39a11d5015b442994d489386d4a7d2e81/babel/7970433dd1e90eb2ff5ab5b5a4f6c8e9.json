{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/console/public/src/output.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/console/public/src/output.js","mtime":1515552026000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initializeOutput = initializeOutput;\nexports.default = getOutput;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ace = require('ace');\nvar settings = require('./settings');\nvar OutputMode = require('./sense_editor/mode/output');\nvar smartResize = require('./smart_resize');\n\nvar output = void 0;\nfunction initializeOutput($el) {\n  output = ace.require('ace/ace').edit($el[0]);\n\n  var outputMode = new OutputMode.Mode();\n\n  output.resize = smartResize(output);\n  output.update = function (val, mode, cb) {\n    if (typeof mode === 'function') {\n      cb = mode;\n      mode = void 0;\n    }\n\n    var session = output.getSession();\n\n    session.setMode(val ? mode || outputMode : 'ace/mode/text');\n    session.setValue(val);\n    if (typeof cb === 'function') {\n      setTimeout(cb);\n    }\n  };\n\n  output.append = function (val, fold_previous, cb) {\n    if (typeof fold_previous === 'function') {\n      cb = fold_previous;\n      fold_previous = true;\n    }\n    if (_lodash2.default.isUndefined(fold_previous)) {\n      fold_previous = true;\n    }\n    var session = output.getSession();\n    var lastLine = session.getLength();\n    if (fold_previous) {\n      output.moveCursorTo(Math.max(0, lastLine - 1), 0);\n      session.toggleFold(false);\n    }\n    session.insert({ row: lastLine, column: 0 }, \"\\n\" + val);\n    output.moveCursorTo(lastLine + 1, 0);\n    if (typeof cb === 'function') {\n      setTimeout(cb);\n    }\n  };\n\n  output.$el = $el;\n\n  (function (session) {\n    session.setMode(\"ace/mode/text\");\n    session.setFoldStyle('markbeginend');\n    session.setTabSize(2);\n    session.setUseWrapMode(true);\n  })(output.getSession());\n\n  output.setShowPrintMargin(false);\n  output.setReadOnly(true);\n\n  if (settings) {\n    settings.applyCurrentSettings(output);\n  }\n\n  return output;\n}\n\nfunction getOutput() {\n  return output;\n}",null]}