{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_types/metrics/lib/parent_pipeline_agg_helper.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_types/metrics/lib/parent_pipeline_agg_helper.js","mtime":1515552034000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParentPipelineAggHelperProvider = undefined;\n\nvar _sub_agg = require('ui/agg_types/controls/sub_agg.html');\n\nvar _sub_agg2 = _interopRequireDefault(_sub_agg);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _agg_config = require('ui/vis/agg_config');\n\nvar _schemas = require('ui/vis/editors/default/schemas');\n\nvar _parent_pipeline_agg_controller = require('./parent_pipeline_agg_controller');\n\nvar _parent_pipeline_agg_writter = require('./parent_pipeline_agg_writter');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ParentPipelineAggHelperProvider = exports.ParentPipelineAggHelperProvider = function ParentPipelineAggHelperProvider(Private) {\n\n  var AggConfig = Private(_agg_config.VisAggConfigProvider);\n  var Schemas = Private(_schemas.VisSchemasProvider);\n\n  var metricAggFilter = ['!top_hits', '!percentiles', '!percentile_ranks', '!median', '!std_dev'];\n  var metricAggSchema = new Schemas([{\n    group: 'none',\n    name: 'metricAgg',\n    title: 'Metric Agg',\n    hideCustomLabel: true,\n    aggFilter: metricAggFilter\n  }]).all[0];\n\n  return {\n    subtype: 'Parent Pipeline Aggregations',\n    params: function params() {\n      return [{\n        name: 'customMetric',\n        type: AggConfig,\n        default: null,\n        serialize: function serialize(customMetric) {\n          return customMetric.toJSON();\n        },\n        deserialize: function deserialize(state, agg) {\n          return this.makeAgg(agg, state);\n        },\n        makeAgg: function makeAgg(termsAgg, state) {\n          state = state || { type: 'count' };\n          state.schema = metricAggSchema;\n          var metricAgg = new AggConfig(termsAgg.vis, state);\n          metricAgg.id = termsAgg.id + '-metric';\n          return metricAgg;\n        },\n        write: _lodash2.default.noop\n      }, {\n        name: 'buckets_path',\n        write: _lodash2.default.noop\n      }, {\n        name: 'metricAgg',\n        editor: _sub_agg2.default,\n        default: 'custom',\n        controller: _parent_pipeline_agg_controller.parentPipelineAggController,\n        write: _parent_pipeline_agg_writter.parentPipelineAggWritter\n      }];\n    },\n    getFormat: function getFormat(agg) {\n      var subAgg = void 0;\n      if (agg.params.customMetric) {\n        subAgg = agg.params.customMetric;\n      } else {\n        subAgg = agg.vis.getAggConfig().byId[agg.params.metricAgg];\n      }\n      return subAgg.type.getFormat(subAgg);\n    }\n  };\n};",null]}