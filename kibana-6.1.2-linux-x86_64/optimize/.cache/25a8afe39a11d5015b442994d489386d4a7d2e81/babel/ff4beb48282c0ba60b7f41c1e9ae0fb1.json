{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/modals/confirm_modal_promise.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/modals/confirm_modal_promise.js","mtime":1515552036000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nvar _modules = require('ui/modules');\n\nrequire('ui/modals');\n\nvar _module = _modules.uiModules.get('kibana');\n\n/**\n * @typedef {Object} PromisifiedConfirmOptions\n * @property {String} confirmButtonText\n * @property {String=} cancelButtonText\n */\n\n/**\n * A \"promisified\" version of ConfirmModal that binds onCancel and onConfirm to\n * Resolve and Reject methods.\n */\n_module.factory('confirmModalPromise', function (Promise, confirmModal) {\n  /**\n   * @param {String} message\n   * @param {PromisifiedConfirmOptions} customOptions\n   */\n  return function (message, customOptions) {\n    return new Promise(function (resolve, reject) {\n      var defaultOptions = {\n        onConfirm: resolve,\n        onCancel: reject\n      };\n      var confirmOptions = Object.assign(defaultOptions, customOptions);\n      confirmModal(message, confirmOptions);\n    });\n  };\n});",null]}