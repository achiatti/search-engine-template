{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/timepicker/time_navigation.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/timepicker/time_navigation.js","mtime":1515552038000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.timeNavigation = undefined;\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar timeNavigation = exports.timeNavigation = {\n  // travel forward in time based on the interval between from and to\n  stepForward: function stepForward(_ref) {\n    var min = _ref.min,\n        max = _ref.max;\n\n    var diff = max.diff(min);\n    return {\n      from: (0, _moment2.default)(max).add(1, 'ms').toISOString(),\n      to: (0, _moment2.default)(max).add(diff + 1, 'ms').toISOString(),\n      mode: 'absolute'\n    };\n  },\n\n\n  // travel backwards in time based on the interval between from and to\n  stepBackward: function stepBackward(_ref2) {\n    var min = _ref2.min,\n        max = _ref2.max;\n\n    var diff = max.diff(min);\n    return {\n      from: (0, _moment2.default)(min).subtract(diff + 1, 'ms').toISOString(),\n      to: (0, _moment2.default)(min).subtract(1, 'ms').toISOString(),\n      mode: 'absolute'\n    };\n  },\n\n\n  // zoom out, doubling the difference between start and end, keeping the same time range center\n  zoomOut: function zoomOut(_ref3) {\n    var min = _ref3.min,\n        max = _ref3.max;\n\n    var diff = max.diff(min);\n    return {\n      from: (0, _moment2.default)(min).subtract(diff / 2, 'ms').toISOString(),\n      to: (0, _moment2.default)(max).add(diff / 2, 'ms').toISOString(),\n      mode: 'absolute'\n    };\n  },\n\n\n  // zoom in, halving the difference between start and end, keeping the same time range center\n  zoomIn: function zoomIn(_ref4) {\n    var min = _ref4.min,\n        max = _ref4.max;\n\n    var diff = max.diff(min);\n    return {\n      from: (0, _moment2.default)(min).add(diff / 4, 'ms').toISOString(),\n      to: (0, _moment2.default)(max).subtract(diff / 4, 'ms').toISOString(),\n      mode: 'absolute'\n    };\n  }\n};",null]}