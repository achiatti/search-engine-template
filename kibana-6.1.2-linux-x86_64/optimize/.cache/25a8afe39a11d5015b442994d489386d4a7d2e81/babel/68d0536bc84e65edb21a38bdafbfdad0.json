{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/index_patterns/route_setup/load_default.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/index_patterns/route_setup/load_default.js","mtime":1515552036000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (opts) {\n  opts = opts || {};\n  var whenMissingRedirectTo = opts.whenMissingRedirectTo || null;\n\n  _routes2.default.addSetupWork(function loadDefaultIndexPattern(Private, Promise, $route, config) {\n    var getIds = Private(_get.IndexPatternsGetProvider)('id');\n    var route = _lodash2.default.get($route, 'current.$$route');\n\n    return getIds().then(function (patterns) {\n      var defaultId = config.get('defaultIndex');\n      var defined = !!defaultId;\n      var exists = _lodash2.default.contains(patterns, defaultId);\n\n      if (defined && !exists) {\n        config.remove('defaultIndex');\n        defaultId = defined = false;\n      }\n\n      if (!defined && route.requireDefaultIndex) {\n        // If there is only one index pattern, set it as default\n        if (patterns.length === 1) {\n          defaultId = patterns[0];\n          config.set('defaultIndex', defaultId);\n        } else {\n          throw new _errors.NoDefaultIndexPattern();\n        }\n      }\n    });\n  }).afterWork(\n  // success\n  null,\n\n  // failure\n  function (err, kbnUrl) {\n    var hasDefault = !(err instanceof _errors.NoDefaultIndexPattern);\n    if (hasDefault || !whenMissingRedirectTo) throw err; // rethrow\n\n    kbnUrl.change(whenMissingRedirectTo);\n\n    // Avoid being hostile to new users who don't have an index pattern setup yet\n    // give them a friendly info message instead of a terse error message\n    notify.info(NO_DEFAULT_INDEX_PATTERN_MSG, { lifetime: 15000 });\n  });\n};\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _notifier = require('ui/notify/notifier');\n\nvar _errors = require('ui/errors');\n\nvar _get = require('../_get');\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar notify = new _notifier.Notifier({\n  location: 'Index Patterns'\n});\n\nvar NO_DEFAULT_INDEX_PATTERN_MSG = '\\nIn order to visualize and explore data in Kibana,\\nyou\\'ll need to create an index pattern to retrieve data from Elasticsearch.\\n';\n\n// eslint-disable-next-line @elastic/kibana-custom/no-default-export\nmodule.exports = exports['default'];",null]}