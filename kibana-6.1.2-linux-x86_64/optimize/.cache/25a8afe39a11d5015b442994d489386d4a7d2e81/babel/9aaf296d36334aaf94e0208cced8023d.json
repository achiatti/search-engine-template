{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/kuery/ast/ast.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/kuery/ast/ast.js","mtime":1515552036000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.fromKueryExpression = fromKueryExpression;\nexports.toKueryExpression = toKueryExpression;\nexports.toElasticsearchQuery = toElasticsearchQuery;\n\nvar _kuery = require('raw-loader!./kuery.peg');\n\nvar _kuery2 = _interopRequireDefault(_kuery);\n\nvar _pegjs = require('pegjs');\n\nvar _pegjs2 = _interopRequireDefault(_pegjs);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _index = require('../node_types/index');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar kueryParser = _pegjs2.default.buildParser(_kuery2.default);\n\nfunction fromKueryExpression(expression) {\n  var parseOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_lodash2.default.isUndefined(expression)) {\n    throw new Error('expression must be a string, got undefined instead');\n  }\n\n  parseOptions = _extends({}, parseOptions, {\n    helpers: { nodeTypes: _index.nodeTypes }\n  });\n\n  return kueryParser.parse(expression, parseOptions);\n}\n\nfunction toKueryExpression(node) {\n  if (!node || !node.type || !_index.nodeTypes[node.type]) {\n    return '';\n  }\n\n  return _index.nodeTypes[node.type].toKueryExpression(node);\n}\n\nfunction toElasticsearchQuery(node, indexPattern) {\n  if (!node || !node.type || !_index.nodeTypes[node.type]) {\n    return toElasticsearchQuery(_index.nodeTypes.function.buildNode('and', []));\n  }\n\n  return _index.nodeTypes[node.type].toElasticsearchQuery(node, indexPattern);\n}",null]}