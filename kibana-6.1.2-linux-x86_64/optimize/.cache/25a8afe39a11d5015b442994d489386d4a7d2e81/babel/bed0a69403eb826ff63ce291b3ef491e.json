{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/dashboard/top_nav/get_top_nav_config.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/dashboard/top_nav/get_top_nav_config.js","mtime":1515552028000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTopNavConfig = getTopNavConfig;\n\nvar _dashboard_view_mode = require('../dashboard_view_mode');\n\nvar _top_nav_ids = require('./top_nav_ids');\n\n/**\n * @param {DashboardMode} dashboardMode.\n * @param actions {Object} - A mapping of TopNavIds to an action function that should run when the\n * corresponding top nav is clicked.\n * @param hideWriteControls {boolean} if true, does not include any controls that allow editing or creating objects.\n * @return {Array<kbnTopNavConfig>} - Returns an array of objects for a top nav configuration, based on the\n * mode.\n */\nfunction getTopNavConfig(dashboardMode, actions, hideWriteControls) {\n  switch (dashboardMode) {\n    case _dashboard_view_mode.DashboardViewMode.VIEW:\n      return hideWriteControls ? [getFullScreenConfig(actions[_top_nav_ids.TopNavIds.FULL_SCREEN])] : [getFullScreenConfig(actions[_top_nav_ids.TopNavIds.FULL_SCREEN]), getShareConfig(), getCloneConfig(actions[_top_nav_ids.TopNavIds.CLONE]), getEditConfig(actions[_top_nav_ids.TopNavIds.ENTER_EDIT_MODE])];\n    case _dashboard_view_mode.DashboardViewMode.EDIT:\n      return [getSaveConfig(), getViewConfig(actions[_top_nav_ids.TopNavIds.EXIT_EDIT_MODE]), getAddConfig(), getOptionsConfig(), getShareConfig()];\n    default:\n      return [];\n  }\n}\n\nfunction getFullScreenConfig(action) {\n  return {\n    key: 'full screen',\n    description: 'Full Screen Mode',\n    testId: 'dashboardFullScreenMode',\n    run: action\n  };\n}\n\n/**\n * @returns {kbnTopNavConfig}\n */\nfunction getEditConfig(action) {\n  return {\n    key: 'edit',\n    description: 'Switch to edit mode',\n    testId: 'dashboardEditMode',\n    run: action\n  };\n}\n\n/**\n * @returns {kbnTopNavConfig}\n */\nfunction getSaveConfig() {\n  return {\n    key: 'save',\n    description: 'Save your dashboard',\n    testId: 'dashboardSaveMenuItem',\n    template: require('plugins/kibana/dashboard/top_nav/save.html')\n  };\n}\n\n/**\n * @returns {kbnTopNavConfig}\n */\nfunction getViewConfig(action) {\n  return {\n    key: 'cancel',\n    description: 'Cancel editing and switch to view-only mode',\n    testId: 'dashboardViewOnlyMode',\n    run: action\n  };\n}\n\n/**\n * @returns {kbnTopNavConfig}\n */\nfunction getCloneConfig(action) {\n  return {\n    key: 'clone',\n    description: 'Create a copy of your dashboard',\n    testId: 'dashboardClone',\n    run: action\n  };\n}\n\n/**\n * @returns {kbnTopNavConfig}\n */\nfunction getAddConfig() {\n  return {\n    key: _top_nav_ids.TopNavIds.ADD,\n    description: 'Add a panel to the dashboard',\n    testId: 'dashboardAddPanelButton',\n    template: require('plugins/kibana/dashboard/top_nav/add_panel.html')\n  };\n}\n\n/**\n * @returns {kbnTopNavConfig}\n */\nfunction getShareConfig() {\n  return {\n    key: _top_nav_ids.TopNavIds.SHARE,\n    description: 'Share Dashboard',\n    testId: 'dashboardShareButton',\n    template: require('plugins/kibana/dashboard/top_nav/share.html')\n  };\n}\n\n/**\n * @returns {kbnTopNavConfig}\n */\nfunction getOptionsConfig() {\n  return {\n    key: _top_nav_ids.TopNavIds.OPTIONS,\n    description: 'Options',\n    testId: 'dashboardOptionsButton',\n    template: require('plugins/kibana/dashboard/top_nav/options.html')\n  };\n}",null]}