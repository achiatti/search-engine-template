{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/directives/paginated_selectable_list.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/directives/paginated_selectable_list.js","mtime":1515552035000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _modules = require('ui/modules');\n\nvar _paginated_selectable_list = require('ui/partials/paginated_selectable_list.html');\n\nvar _paginated_selectable_list2 = _interopRequireDefault(_paginated_selectable_list);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = _modules.uiModules.get('kibana');\n\nfunction throwError(message) {\n  throw new Error(message);\n}\n\n_module.directive('paginatedSelectableList', function () {\n\n  return {\n    restrict: 'E',\n    scope: {\n      perPage: '=?',\n      list: '=',\n      listProperty: '@',\n      userMakeUrl: '=?',\n      userOnSelect: '=?',\n      disableAutoFocus: '='\n    },\n    template: _paginated_selectable_list2.default,\n    controller: function controller($scope) {\n      // Should specify either user-make-url or user-on-select\n      if (!$scope.userMakeUrl && !$scope.userOnSelect) {\n        throwError('paginatedSelectableList directive expects a makeUrl or onSelect function');\n      }\n\n      // Should specify either user-make-url or user-on-select, but not both.\n      if ($scope.userMakeUrl && $scope.userOnSelect) {\n        throwError('paginatedSelectableList directive expects a makeUrl or onSelect attribute but not both');\n      }\n\n      $scope.perPage = $scope.perPage || 10;\n      $scope.hits = $scope.list = _lodash2.default.sortBy($scope.list, $scope.accessor);\n      $scope.hitCount = $scope.hits.length;\n\n      /**\n       * Boolean that keeps track of whether hits are sorted ascending (true)\n       * or descending (false)\n       * * @type {Boolean}\n       */\n      $scope.isAscending = true;\n\n      /**\n       * Sorts saved object finder hits either ascending or descending\n       * @param  {Array} hits Array of saved finder object hits\n       * @return {Array} Array sorted either ascending or descending\n       */\n      $scope.sortHits = function (hits) {\n        var sortedList = _lodash2.default.sortBy(hits, $scope.accessor);\n\n        $scope.isAscending = !$scope.isAscending;\n        $scope.hits = $scope.isAscending ? sortedList : sortedList.reverse();\n      };\n\n      $scope.makeUrl = function (hit) {\n        return $scope.userMakeUrl(hit);\n      };\n\n      $scope.onSelect = function (hit, $event) {\n        return $scope.userOnSelect(hit, $event);\n      };\n\n      $scope.accessor = function (val) {\n        var prop = $scope.listProperty;\n        return prop ? _lodash2.default.get(val, prop) : val;\n      };\n    }\n  };\n});",null]}