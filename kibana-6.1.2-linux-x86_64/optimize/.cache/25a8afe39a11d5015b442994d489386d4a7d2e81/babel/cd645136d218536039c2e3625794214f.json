{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/crypto/sha256.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/crypto/sha256.js","mtime":1515552035000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// ported from https://github.com/spalger/sha.js/blob/6557630d508873e262e94bff70c50bdd797c1df7/sha256.js\n// and https://github.com/spalger/sha.js/blob/6557630d508873e262e94bff70c50bdd797c1df7/hash.js\n\n/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n * Copyright (c) 2013-2014 sha.js contributors\n *\n * Permission is hereby granted, free of charge,\n * to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify,\n * merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom\n * the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice\n * shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR\n * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nvar K = [0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2];\n\nvar W = new Array(64);\n\nvar Sha256 = exports.Sha256 = function () {\n  function Sha256() {\n    _classCallCheck(this, Sha256);\n\n    this.init();\n\n    this._w = W; // new Array(64)\n\n    var blockSize = 64;\n    var finalSize = 56;\n    this._block = new Buffer(blockSize);\n    this._finalSize = finalSize;\n    this._blockSize = blockSize;\n    this._len = 0;\n    this._s = 0;\n  }\n\n  _createClass(Sha256, [{\n    key: 'init',\n    value: function init() {\n      this._a = 0x6a09e667;\n      this._b = 0xbb67ae85;\n      this._c = 0x3c6ef372;\n      this._d = 0xa54ff53a;\n      this._e = 0x510e527f;\n      this._f = 0x9b05688c;\n      this._g = 0x1f83d9ab;\n      this._h = 0x5be0cd19;\n\n      return this;\n    }\n  }, {\n    key: 'update',\n    value: function update(data, enc) {\n      if (typeof data === 'string') {\n        enc = enc || 'utf8';\n        data = new Buffer(data, enc);\n      }\n\n      var l = this._len += data.length;\n      var s = this._s || 0;\n      var f = 0;\n      var buffer = this._block;\n\n      while (s < l) {\n        var t = Math.min(data.length, f + this._blockSize - s % this._blockSize);\n        var _ch = t - f;\n\n        for (var i = 0; i < _ch; i++) {\n          buffer[s % this._blockSize + i] = data[i + f];\n        }\n\n        s += _ch;\n        f += _ch;\n\n        if (s % this._blockSize === 0) {\n          this._update(buffer);\n        }\n      }\n      this._s = s;\n\n      return this;\n    }\n  }, {\n    key: 'digest',\n    value: function digest(enc) {\n      // Suppose the length of the message M, in bits, is l\n      var l = this._len * 8;\n\n      // Append the bit 1 to the end of the message\n      this._block[this._len % this._blockSize] = 0x80;\n\n      // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize\n      this._block.fill(0, this._len % this._blockSize + 1);\n\n      if (l % (this._blockSize * 8) >= this._finalSize * 8) {\n        this._update(this._block);\n        this._block.fill(0);\n      }\n\n      // to this append the block which is equal to the number l written in binary\n      // TODO: handle case where l is > Math.pow(2, 29)\n      this._block.writeInt32BE(l, this._blockSize - 4);\n\n      var hash = this._update(this._block) || this._hash();\n\n      return enc ? hash.toString(enc) : hash;\n    }\n  }, {\n    key: '_update',\n    value: function _update(M) {\n      var W = this._w;\n\n      var a = this._a | 0;\n      var b = this._b | 0;\n      var c = this._c | 0;\n      var d = this._d | 0;\n      var e = this._e | 0;\n      var f = this._f | 0;\n      var g = this._g | 0;\n      var h = this._h | 0;\n\n      var i = void 0;\n      for (i = 0; i < 16; ++i) {\n        W[i] = M.readInt32BE(i * 4);\n      }for (; i < 64; ++i) {\n        W[i] = gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16] | 0;\n      }for (var j = 0; j < 64; ++j) {\n        var T1 = h + sigma1(e) + ch(e, f, g) + K[j] + W[j] | 0;\n        var T2 = sigma0(a) + maj(a, b, c) | 0;\n\n        h = g;\n        g = f;\n        f = e;\n        e = d + T1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = T1 + T2 | 0;\n      }\n\n      this._a = a + this._a | 0;\n      this._b = b + this._b | 0;\n      this._c = c + this._c | 0;\n      this._d = d + this._d | 0;\n      this._e = e + this._e | 0;\n      this._f = f + this._f | 0;\n      this._g = g + this._g | 0;\n      this._h = h + this._h | 0;\n    }\n  }, {\n    key: '_hash',\n    value: function _hash() {\n      var H = new Buffer(32);\n\n      H.writeInt32BE(this._a, 0);\n      H.writeInt32BE(this._b, 4);\n      H.writeInt32BE(this._c, 8);\n      H.writeInt32BE(this._d, 12);\n      H.writeInt32BE(this._e, 16);\n      H.writeInt32BE(this._f, 20);\n      H.writeInt32BE(this._g, 24);\n      H.writeInt32BE(this._h, 28);\n\n      return H;\n    }\n  }]);\n\n  return Sha256;\n}();\n\nfunction ch(x, y, z) {\n  return z ^ x & (y ^ z);\n}\n\nfunction maj(x, y, z) {\n  return x & y | z & (x | y);\n}\n\nfunction sigma0(x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10);\n}\n\nfunction sigma1(x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7);\n}\n\nfunction gamma0(x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ x >>> 3;\n}\n\nfunction gamma1(x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ x >>> 10;\n}",null]}