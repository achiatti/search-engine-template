{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/doc_table/lib/get_sort.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/doc_table/lib/get_sort.js","mtime":1515552035000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSort = getSort;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Take a sorting array and make it into an object\n * @param {array} 2 item array [fieldToSort, directionToSort]\n * @param {object} indexPattern used for determining default sort\n * @returns {object} a sort object suitable for returning to elasticsearch\n */\nfunction getSort(sort, indexPattern) {\n  var defaultSortOrder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'desc';\n\n  var sortObj = {};\n  var field = void 0;\n  var direction = void 0;\n\n  function isSortable(field) {\n    return indexPattern.fields.byName[field] && indexPattern.fields.byName[field].sortable;\n  }\n\n  if (Array.isArray(sort) && sort.length === 2 && isSortable(sort[0])) {\n    // At some point we need to refact the sorting logic, this array sucks.\n    field = sort[0];\n    direction = sort[1];\n  } else if (indexPattern.timeFieldName && isSortable(indexPattern.timeFieldName)) {\n    field = indexPattern.timeFieldName;\n    direction = defaultSortOrder;\n  }\n\n  if (field) {\n    sortObj[field] = direction;\n  } else {\n    sortObj._score = 'desc';\n  }\n\n  return sortObj;\n}\n\ngetSort.array = function (sort, indexPattern, defaultSortOrder) {\n  return (0, _lodash2.default)(getSort(sort, indexPattern, defaultSortOrder)).pairs().pop();\n};",null]}