{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/chrome/api/angular.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/chrome/api/angular.js","mtime":1515552034000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initAngularApi = initAngularApi;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _url = require('url');\n\nvar _modules = require('ui/modules');\n\nvar _notifier = require('ui/notify/notifier');\n\nvar _error_url_overflow = require('../../error_url_overflow');\n\nvar _directives = require('../directives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar URL_LIMIT_WARN_WITHIN = 1000;\n\nfunction initAngularApi(chrome, internals) {\n  chrome.getFirstPathSegment = _lodash2.default.noop;\n\n  chrome.setupAngular = function () {\n    var kibana = _modules.uiModules.get('kibana');\n\n    _lodash2.default.forOwn(chrome.getInjected(), function (val, name) {\n      kibana.value(name, val);\n    });\n\n    kibana.value('kbnVersion', internals.version).value('buildNum', internals.buildNum).value('buildSha', internals.buildSha).value('serverName', internals.serverName).value('uiSettings', internals.uiSettings).value('sessionId', Date.now()).value('chrome', chrome).value('esUrl', function () {\n      var a = document.createElement('a');\n      a.href = chrome.addBasePath('/elasticsearch');\n      return a.href;\n    }()).config(chrome.$setupXsrfRequestInterceptor).config(function ($compileProvider, $locationProvider) {\n      if (!internals.devMode) {\n        $compileProvider.debugInfoEnabled(false);\n      }\n\n      $locationProvider.hashPrefix('');\n    }).run(function ($location, $rootScope, Private, config) {\n      chrome.getFirstPathSegment = function () {\n        return $location.path().split('/')[1];\n      };\n\n      var notify = new _notifier.Notifier();\n      var urlOverflow = Private(_error_url_overflow.UrlOverflowServiceProvider);\n      var check = function check() {\n        // disable long url checks when storing state in session storage\n        if (config.get('state:storeInSessionStorage')) return;\n        if ($location.path() === '/error/url-overflow') return;\n\n        try {\n          if (urlOverflow.check($location.absUrl()) <= URL_LIMIT_WARN_WITHIN) {\n            notify.directive({\n              template: '\\n                <p>\\n                  The URL has gotten big and may cause Kibana\\n                  to stop working. Please either enable the\\n                  <code>state:storeInSessionStorage</code>\\n                  option in the <a href=\"#/management/kibana/settings\">advanced\\n                  settings</a> or simplify the onscreen visuals.\\n                </p>\\n              '\n            }, {\n              type: 'error',\n              actions: [{ text: 'close' }]\n            });\n          }\n        } catch (e) {\n          var _parseUrl = (0, _url.parse)(window.location.href),\n              host = _parseUrl.host,\n              path = _parseUrl.path,\n              search = _parseUrl.search,\n              protocol = _parseUrl.protocol;\n          // rewrite the entire url to force the browser to reload and\n          // discard any potentially unstable state from before\n\n\n          window.location.href = (0, _url.format)({ host: host, path: path, search: search, protocol: protocol, hash: '#/error/url-overflow' });\n        }\n      };\n\n      $rootScope.$on('$routeUpdate', check);\n      $rootScope.$on('$routeChangeStart', check);\n    });\n\n    (0, _directives.directivesProvider)(chrome, internals);\n\n    _modules.uiModules.link(kibana);\n  };\n}",null]}