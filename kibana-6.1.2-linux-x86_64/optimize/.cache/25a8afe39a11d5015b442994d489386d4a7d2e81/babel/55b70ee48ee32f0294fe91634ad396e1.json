{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/routes/wrap_route_with_prep.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/routes/wrap_route_with_prep.js","mtime":1515552037000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapRouteWithPrep = wrapRouteWithPrep;\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _work_queue = require('ui/routes/work_queue');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction wrapRouteWithPrep(route, setup) {\n  if (!route.resolve && route.redirectTo) return;\n\n  var userWork = new _work_queue.WorkQueue();\n  // the point at which we will consider the queue \"full\"\n  userWork.limit = _lodash2.default.keys(route.resolve).length;\n\n  var resolve = {\n    __prep__: function __prep__($injector) {\n      return $injector.invoke(setup.doWork, setup, { userWork: userWork });\n    }\n  };\n\n  // send each user resolve to the userWork queue, which will prevent it from running before the\n  // prep is complete\n  _lodash2.default.forOwn(route.resolve || {}, function (expr, name) {\n    resolve[name] = function ($injector, Promise) {\n      var defer = Promise.defer();\n      userWork.push(defer);\n      return defer.promise.then(function () {\n        return $injector[_angular2.default.isString(expr) ? 'get' : 'invoke'](expr);\n      });\n    };\n  });\n\n  // we're copied everything over so now overwrite\n  route.resolve = resolve;\n}",null]}