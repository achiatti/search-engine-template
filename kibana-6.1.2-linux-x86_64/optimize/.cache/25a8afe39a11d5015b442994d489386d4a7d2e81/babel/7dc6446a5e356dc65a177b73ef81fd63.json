{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/vis/request_handlers/courier.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/vis/request_handlers/courier.js","mtime":1515552039000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CourierRequestHandlerProvider = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _vis_request_handlers = require('ui/registry/vis_request_handlers');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CourierRequestHandlerProvider = function CourierRequestHandlerProvider(Private, courier, timefilter) {\n  return {\n    name: 'courier',\n    handler: function handler(vis, appState, uiState, queryFilter, searchSource) {\n\n      if (queryFilter && vis.editorMode) {\n        searchSource.set('filter', queryFilter.getFilters());\n        searchSource.set('query', appState.query);\n      }\n\n      var shouldQuery = function shouldQuery() {\n        if (!searchSource.lastQuery || vis.reload) return true;\n        if (!_lodash2.default.isEqual(_lodash2.default.cloneDeep(searchSource.get('filter')), searchSource.lastQuery.filter)) return true;\n        if (!_lodash2.default.isEqual(_lodash2.default.cloneDeep(searchSource.get('query')), searchSource.lastQuery.query)) return true;\n        if (!_lodash2.default.isEqual(_lodash2.default.cloneDeep(searchSource.get('aggs')()), searchSource.lastQuery.aggs)) return true;\n        if (!_lodash2.default.isEqual(_lodash2.default.cloneDeep(timefilter.time), searchSource.lastQuery.time)) return true;\n\n        return false;\n      };\n\n      return new Promise(function (resolve, reject) {\n        if (shouldQuery()) {\n          delete vis.reload;\n          searchSource.onResults().then(function (resp) {\n            searchSource.lastQuery = {\n              filter: _lodash2.default.cloneDeep(searchSource.get('filter')),\n              query: _lodash2.default.cloneDeep(searchSource.get('query')),\n              aggs: _lodash2.default.cloneDeep(searchSource.get('aggs')()),\n              time: _lodash2.default.cloneDeep(timefilter.time)\n            };\n\n            searchSource.rawResponse = resp;\n            resolve(resp);\n          }).catch(function (e) {\n            return reject(e);\n          });\n\n          courier.fetch();\n        } else {\n          resolve(searchSource.rawResponse);\n        }\n      });\n    }\n  };\n};\n\n_vis_request_handlers.VisRequestHandlersRegistryProvider.register(CourierRequestHandlerProvider);\n\nexports.CourierRequestHandlerProvider = CourierRequestHandlerProvider;",null]}