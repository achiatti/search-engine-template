{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/input_control_vis/public/components/editor/field_select.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/input_control_vis/public/components/editor/field_select.js","mtime":1515552027000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FieldSelect = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactSelect = require('react-select');\n\nvar _reactSelect2 = _interopRequireDefault(_reactSelect);\n\nvar _services = require('ui_framework/services');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FieldSelect = exports.FieldSelect = function (_Component) {\n  _inherits(FieldSelect, _Component);\n\n  function FieldSelect(props) {\n    _classCallCheck(this, FieldSelect);\n\n    // not storing activeIndexPatternId in react state\n    // 1) does not effect rendering\n    // 2) requires synchronous modification to avoid race condition\n    var _this = _possibleConstructorReturn(this, (FieldSelect.__proto__ || Object.getPrototypeOf(FieldSelect)).call(this, props));\n\n    _this.activeIndexPatternId = props.indexPatternId;\n\n    _this.state = {\n      fields: []\n    };\n    _this.filterField = _lodash2.default.get(props, 'filterField', function () {\n      return true;\n    });\n    _this.loadFields(props.indexPatternId);\n    return _this;\n  }\n\n  _createClass(FieldSelect, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.indexPatternId !== nextProps.indexPatternId) {\n        this.activeIndexPatternId = nextProps.indexPatternId;\n        this.setState({ fields: [] });\n        this.loadFields(nextProps.indexPatternId);\n      }\n    }\n  }, {\n    key: 'loadFields',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(indexPatternId) {\n        var indexPattern, fields;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(!indexPatternId || indexPatternId.length === 0)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt('return');\n\n              case 2:\n                _context.next = 4;\n                return this.props.getIndexPattern(indexPatternId);\n\n              case 4:\n                indexPattern = _context.sent;\n\n                if (!(indexPattern.id !== this.activeIndexPatternId)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt('return');\n\n              case 7:\n                fields = indexPattern.fields.filter(this.filterField).sort(function (a, b) {\n                  if (a.name < b.name) return -1;\n                  if (a.name > b.name) return 1;\n                  return 0;\n                }).map(function (field) {\n                  return { label: field.name, value: field.name };\n                });\n\n                this.setState({ fields: fields });\n\n              case 9:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadFields(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return loadFields;\n    }()\n  }, {\n    key: 'render',\n    value: function render() {\n      if (!this.props.indexPatternId || this.props.indexPatternId.trim().length === 0) {\n        return null;\n      }\n\n      var idGenerator = (0, _services.htmlIdGenerator)();\n      var selectId = idGenerator('indexPatternSelect');\n      return _react2.default.createElement(\n        'div',\n        { className: 'kuiSideBarFormRow' },\n        _react2.default.createElement(\n          'label',\n          { className: 'kuiSideBarFormRow__label', htmlFor: selectId },\n          'Field'\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'kuiSideBarFormRow__control kuiFieldGroupSection--wide' },\n          _react2.default.createElement(_reactSelect2.default, {\n            className: 'field-react-select',\n            placeholder: 'Select field...',\n            value: this.props.value,\n            options: this.state.fields,\n            onChange: this.props.onChange,\n            resetValue: '',\n            inputProps: { id: selectId }\n          })\n        )\n      );\n    }\n  }]);\n\n  return FieldSelect;\n}(_react.Component);\n\nFieldSelect.propTypes = {\n  getIndexPattern: _propTypes2.default.func.isRequired,\n  indexPatternId: _propTypes2.default.string,\n  onChange: _propTypes2.default.func.isRequired,\n  value: _propTypes2.default.string,\n  filterField: _propTypes2.default.func\n};",null]}