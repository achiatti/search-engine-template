{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/console/public/src/autocomplete/url_pattern_matcher.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/console/public/src/autocomplete/url_pattern_matcher.js","mtime":1515552026000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UrlPatternMatcher = UrlPatternMatcher;\nvar _ = require('lodash');\nvar engine = require('./engine');\n\nvar URL_PATH_END_MARKER = exports.URL_PATH_END_MARKER = \"__url_path_end__\";\n\nfunction AcceptEndpointComponent(endpoint, parent) {\n  engine.SharedComponent.call(this, endpoint.id, parent);\n  this.endpoint = endpoint;\n}\n\nAcceptEndpointComponent.prototype = _.create(engine.SharedComponent.prototype, { \"constructor\": AcceptEndpointComponent });\n\n(function (cls) {\n\n  cls.match = function (token, context, editor) {\n    if (token !== URL_PATH_END_MARKER) {\n      return null;\n    }\n    if (this.endpoint.methods && -1 === _.indexOf(this.endpoint.methods, context.method)) {\n      return null;\n    }\n    var r = Object.getPrototypeOf(cls).match.call(this, token, context, editor);\n    r.context_values = r.context_values || {};\n    r.context_values['endpoint'] = this.endpoint;\n    if (_.isNumber(this.endpoint.priority)) {\n      r.priority = this.endpoint.priority;\n    }\n    return r;\n  };\n})(AcceptEndpointComponent.prototype);\n\n/**\n * @param parametrizedComponentFactories a dict of the following structure\n * that will be used as a fall back for pattern parameters (i.e.: {indices})\n * {\n   *   indices: function (part, parent) {\n   *      return new SharedComponent(part, parent)\n   *   }\n   * }\n * @constructor\n */\nfunction UrlPatternMatcher(parametrizedComponentFactories) {\n  // This is not really a component, just a handy container to make iteration logic simpler\n  this.rootComponent = new engine.SharedComponent(\"ROOT\");\n  this.parametrizedComponentFactories = parametrizedComponentFactories || {};\n}\n\n(function (cls) {\n  cls.addEndpoint = function (pattern, endpoint) {\n    var c,\n        active_component = this.rootComponent,\n        endpointComponents = endpoint.url_components || {};\n    var partList = pattern.split(\"/\");\n    _.each(partList, function (part, partIndex) {\n      if (part.search(/^{.+}$/) >= 0) {\n        part = part.substr(1, part.length - 2);\n        if (active_component.getComponent(part)) {\n          // we already have something for this, reuse\n          active_component = active_component.getComponent(part);\n          return;\n        }\n        // a new path, resolve.\n\n        if (c = endpointComponents[part]) {\n          // endpoint specific. Support list\n          if (Array.isArray(c)) {\n            c = new engine.ListComponent(part, c, active_component);\n          } else if (_.isObject(c) && c.type === \"list\") {\n            c = new engine.ListComponent(part, c.list, active_component, c.multi_valued, c.allow_non_valid);\n          } else {\n            console.warn(\"incorrectly configured url component \", part, \" in endpoint\", endpoint);\n            c = new engine.SharedComponent(part);\n          }\n        } else if (c = this.parametrizedComponentFactories[part]) {\n          // c is a f\n          c = c(part, active_component);\n        } else {\n          // just accept whatever with not suggestions\n          c = new engine.SimpleParamComponent(part, active_component);\n        }\n\n        active_component = c;\n      } else {\n        // not pattern\n        var lookAhead = part,\n            s;\n\n        for (partIndex++; partIndex < partList.length; partIndex++) {\n          s = partList[partIndex];\n          if (s.indexOf(\"{\") >= 0) {\n            break;\n          }\n          lookAhead += \"/\" + s;\n        }\n\n        if (active_component.getComponent(part)) {\n          // we already have something for this, reuse\n          active_component = active_component.getComponent(part);\n          active_component.addOption(lookAhead);\n        } else {\n          c = new engine.ConstantComponent(part, active_component, lookAhead);\n          active_component = c;\n        }\n      }\n    }, this);\n    // mark end of endpoint path\n    new AcceptEndpointComponent(endpoint, active_component);\n  };\n\n  cls.getTopLevelComponents = function () {\n    return this.rootComponent.next;\n  };\n})(UrlPatternMatcher.prototype);",null]}