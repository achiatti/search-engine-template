{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/index_patterns/index_patterns_api_client.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/index_patterns/index_patterns_api_client.js","mtime":1515552036000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.createIndexPatternsApiClient = createIndexPatternsApiClient;\n\nvar _url = require('url');\n\nvar _lodash = require('lodash');\n\nvar _errors = require('ui/errors');\n\nvar _notify = require('ui/notify');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction createIndexPatternsApiClient($http, basePath) {\n  var apiBaseUrl = basePath + '/api/index_patterns/';\n  var notify = new _notify.Notifier({ location: 'Index Patterns API' });\n\n  function join() {\n    for (var _len = arguments.length, uriComponents = Array(_len), _key = 0; _key < _len; _key++) {\n      uriComponents[_key] = arguments[_key];\n    }\n\n    return uriComponents.filter(Boolean).map(encodeURIComponent).join('/');\n  }\n\n  function getUrl(path, query) {\n    var noNullsQuery = (0, _lodash.pick)(query, function (value) {\n      return value != null;\n    });\n    var noArraysQuery = (0, _lodash.mapValues)(noNullsQuery, function (value) {\n      return Array.isArray(value) ? JSON.stringify(value) : value;\n    });\n\n    return (0, _url.resolve)(apiBaseUrl, (0, _url.format)({\n      pathname: join.apply(undefined, _toConsumableArray(path)),\n      query: noArraysQuery\n    }));\n  }\n\n  function request(method, url, body) {\n    return $http({\n      method: method,\n      url: url,\n      data: body\n    }).then(function (resp) {\n      return resp.data;\n    }).catch(function (resp) {\n      // convert $http errors into actual error objects\n      var respBody = resp.data;\n\n      if (resp.status === 404 && respBody.code === 'no_matching_indices') {\n        throw new _errors.IndexPatternMissingIndices(respBody.message);\n      }\n\n      var err = new Error(respBody.message || respBody.error || resp.status + ' Response');\n      err.status = resp.status;\n      err.body = respBody;\n      throw err;\n    });\n  }\n\n  var IndexPatternsApiClient = function () {\n    function IndexPatternsApiClient() {\n      _classCallCheck(this, IndexPatternsApiClient);\n    }\n\n    _createClass(IndexPatternsApiClient, [{\n      key: 'getFieldsForTimePattern',\n      value: function getFieldsForTimePattern() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var pattern = options.pattern,\n            lookBack = options.lookBack,\n            metaFields = options.metaFields;\n\n\n        var url = getUrl(['_fields_for_time_pattern'], {\n          pattern: pattern,\n          look_back: lookBack,\n          meta_fields: metaFields\n        });\n\n        return notify.event('getFieldsForTimePattern(' + pattern + ')', function () {\n          return request('GET', url).then(function (resp) {\n            return resp.fields;\n          });\n        });\n      }\n    }, {\n      key: 'getFieldsForWildcard',\n      value: function getFieldsForWildcard() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var pattern = options.pattern,\n            metaFields = options.metaFields;\n\n\n        var url = getUrl(['_fields_for_wildcard'], {\n          pattern: pattern,\n          meta_fields: metaFields\n        });\n\n        return notify.event('getFieldsForWildcard(' + pattern + ')', function () {\n          return request('GET', url).then(function (resp) {\n            return resp.fields;\n          });\n        });\n      }\n    }]);\n\n    return IndexPatternsApiClient;\n  }();\n\n  return new IndexPatternsApiClient();\n}",null]}