{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/context/api/context.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/context/api/context.js","mtime":1515552028000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchContextProvider = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _search_source = require('ui/courier/data_source/search_source');\n\nvar _sorting = require('./utils/sorting');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction fetchContextProvider(courier, Private) {\n  var fetchSuccessors = function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(indexPatternId, anchorDocument, contextSort, size, filters) {\n      var successorsSearchSource, results;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return createSearchSource(indexPatternId, anchorDocument, contextSort, size, filters);\n\n            case 2:\n              successorsSearchSource = _context.sent;\n              _context.next = 5;\n              return performQuery(successorsSearchSource);\n\n            case 5:\n              results = _context.sent;\n              return _context.abrupt('return', results);\n\n            case 7:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function fetchSuccessors(_x, _x2, _x3, _x4, _x5) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fetchPredecessors = function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(indexPatternId, anchorDocument, contextSort, size, filters) {\n      var predecessorsSort, predecessorsSearchSource, reversedResults, results;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              predecessorsSort = contextSort.map(_sorting.reverseSortDirective);\n              _context2.next = 3;\n              return createSearchSource(indexPatternId, anchorDocument, predecessorsSort, size, filters);\n\n            case 3:\n              predecessorsSearchSource = _context2.sent;\n              _context2.next = 6;\n              return performQuery(predecessorsSearchSource);\n\n            case 6:\n              reversedResults = _context2.sent;\n              results = reversedResults.slice().reverse();\n              return _context2.abrupt('return', results);\n\n            case 9:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function fetchPredecessors(_x6, _x7, _x8, _x9, _x10) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var createSearchSource = function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(indexPatternId, anchorDocument, sort, size, filters) {\n      var indexPattern;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return courier.indexPatterns.get(indexPatternId);\n\n            case 2:\n              indexPattern = _context3.sent;\n              return _context3.abrupt('return', new SearchSource().inherits(false).set('index', indexPattern).set('version', true).set('size', size).set('filter', filters).set('query', {\n                query: {\n                  match_all: {}\n                },\n                language: 'lucene'\n              }).set('searchAfter', anchorDocument.sort).set('sort', sort));\n\n            case 4:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    return function createSearchSource(_x11, _x12, _x13, _x14, _x15) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var performQuery = function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(searchSource) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return searchSource.fetchAsRejectablePromise();\n\n            case 2:\n              response = _context4.sent;\n              return _context4.abrupt('return', _lodash2.default.get(response, ['hits', 'hits'], []));\n\n            case 4:\n            case 'end':\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    return function performQuery(_x16) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var SearchSource = Private(_search_source.SearchSourceProvider);\n\n  return {\n    fetchPredecessors: fetchPredecessors,\n    fetchSuccessors: fetchSuccessors\n  };\n}\n\nexports.fetchContextProvider = fetchContextProvider;",null]}