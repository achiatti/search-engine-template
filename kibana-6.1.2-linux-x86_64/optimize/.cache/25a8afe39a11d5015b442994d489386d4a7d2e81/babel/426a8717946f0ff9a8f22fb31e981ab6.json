{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_types/buckets/ip_range.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_types/buckets/ip_range.js","mtime":1515552034000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AggTypesBucketsIpRangeProvider = AggTypesBucketsIpRangeProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nrequire('ui/directives/validate_ip');\n\nrequire('ui/directives/validate_cidr_mask');\n\nvar _bucket_agg_type = require('ui/agg_types/buckets/_bucket_agg_type');\n\nvar _ip_range = require('ui/agg_types/buckets/create_filter/ip_range');\n\nvar _ip_ranges = require('ui/agg_types/controls/ip_ranges.html');\n\nvar _ip_ranges2 = _interopRequireDefault(_ip_ranges);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction AggTypesBucketsIpRangeProvider(Private) {\n  var BucketAggType = Private(_bucket_agg_type.AggTypesBucketsBucketAggTypeProvider);\n  var createFilter = Private(_ip_range.AggTypesBucketsCreateFilterIpRangeProvider);\n\n  return new BucketAggType({\n    name: 'ip_range',\n    title: 'IPv4 Range',\n    createFilter: createFilter,\n    getKey: function getKey(bucket, key) {\n      if (key) return key;\n      var from = _lodash2.default.get(bucket, 'from', '-Infinity');\n      var to = _lodash2.default.get(bucket, 'to', 'Infinity');\n      return from + ' to ' + to;\n    },\n    makeLabel: function makeLabel(aggConfig) {\n      return aggConfig.getFieldDisplayName() + ' IP ranges';\n    },\n    params: [{\n      name: 'field',\n      filterFieldTypes: 'ip'\n    }, {\n      name: 'ipRangeType',\n      default: 'fromTo',\n      write: _lodash2.default.noop\n    }, {\n      name: 'ranges',\n      default: {\n        fromTo: [{ from: '0.0.0.0', to: '127.255.255.255' }, { from: '128.0.0.0', to: '191.255.255.255' }],\n        mask: [{ mask: '0.0.0.0/1' }, { mask: '128.0.0.0/2' }]\n      },\n      editor: _ip_ranges2.default,\n      write: function write(aggConfig, output) {\n        var ipRangeType = aggConfig.params.ipRangeType;\n        var ranges = aggConfig.params.ranges[ipRangeType];\n\n        if (ipRangeType === 'fromTo') {\n          ranges = _lodash2.default.map(ranges, function (range) {\n            return _lodash2.default.omit(range, _lodash2.default.isNull);\n          });\n        }\n\n        output.params.ranges = ranges;\n      }\n    }]\n  });\n}",null]}