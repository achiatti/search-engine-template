{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/saved_objects/find_object_by_title.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/saved_objects/find_object_by_title.js","mtime":1515552037000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findObjectByTitle = findObjectByTitle;\n\nvar _lodash = require('lodash');\n\n/**\n * Returns an object matching a given title\n *\n * @param savedObjectsClient {SavedObjectsClient}\n * @param type {string}\n * @param title {string}\n * @returns {Promise<SavedObject|undefined>}\n */\nfunction findObjectByTitle(savedObjectsClient, type, title) {\n  if (!title) return Promise.resolve();\n\n  // Elastic search will return the most relevant results first, which means exact matches should come\n  // first, and so we shouldn't need to request everything. Using 10 just to be on the safe side.\n  return savedObjectsClient.find({\n    type: type,\n    perPage: 10,\n    search: '\"' + title + '\"',\n    searchFields: ['title'],\n    fields: ['title']\n  }).then(function (response) {\n    var match = (0, _lodash.find)(response.savedObjects, function (obj) {\n      return obj.get('title').toLowerCase() === title.toLowerCase();\n    });\n\n    return match;\n  });\n}",null]}