{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/utils/ipv4_address.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/utils/ipv4_address.js","mtime":1515552038000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Ipv4Address;\nvar NUM_BYTES = 4;\nvar BYTE_SIZE = 256;\n\nfunction throwError(ipAddress) {\n  throw Error('Invalid IPv4 address: ' + ipAddress);\n}\n\nfunction isIntegerInRange(integer, min, max) {\n  return !isNaN(integer) && integer >= min && integer < max && integer % 1 === 0;\n}\n\n// eslint-disable-next-line @elastic/kibana-custom/no-default-export\nfunction Ipv4Address(ipAddress) {\n  this.value = ipAddress;\n\n  if (typeof ipAddress === 'string') {\n    this.value = 0;\n\n    var bytes = ipAddress.split('.');\n    if (bytes.length !== NUM_BYTES) throwError(ipAddress);\n\n    for (var i = 0; i < bytes.length; i++) {\n      var byte = Number(bytes[i]);\n      if (!isIntegerInRange(byte, 0, BYTE_SIZE)) throwError(ipAddress);\n      this.value += Math.pow(BYTE_SIZE, NUM_BYTES - 1 - i) * byte;\n    }\n  }\n\n  if (!isIntegerInRange(this.value, 0, Math.pow(BYTE_SIZE, NUM_BYTES))) throwError(ipAddress);\n}\n\nIpv4Address.prototype.toString = function () {\n  var value = this.value;\n  var bytes = [];\n  for (var i = 0; i < NUM_BYTES; i++) {\n    bytes.unshift(value % 256);\n    value = Math.floor(value / 256);\n  }\n  return bytes.join('.');\n};\n\nIpv4Address.prototype.valueOf = function () {\n  return this.value;\n};\nmodule.exports = exports['default'];",null]}