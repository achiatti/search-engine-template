{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/utils/streams/concat_stream.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/utils/streams/concat_stream.js","mtime":1515552212815},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createConcatStream = createConcatStream;\n\nvar _reduce_stream = require('./reduce_stream');\n\n/**\n *  Creates a Transform stream that consumes all provided\n *  values and concatenates them using each values `concat`\n *  method.\n *\n *  Concatenate strings:\n *    createListStream(['f', 'o', 'o'])\n *      .pipe(createConcatStream())\n *      .on('data', console.log)\n *      // logs \"foo\"\n *\n *  Concatenate values into an array:\n *    createListStream([1,2,3])\n *      .pipe(createConcatStream([]))\n *      .pipe(createJsonStringifyStream())\n *      .on('data', console.log)\n *      // logs \"[1,2,3]\"\n *\n *\n *  @param {any} initial The initial value that subsequent\n *                       items will concat with\n *  @return {Transform}\n */\nfunction createConcatStream(initial) {\n  return (0, _reduce_stream.createReduceStream)(function (acc, chunk) {\n    return acc.concat(chunk);\n  }, initial);\n}",null]}