{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/dashboard/dashboard_container_api.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/dashboard/dashboard_container_api.js","mtime":1515552028000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DashboardContainerAPI = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _embeddable = require('ui/embeddable');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DashboardContainerAPI = exports.DashboardContainerAPI = function (_ContainerAPI) {\n  _inherits(DashboardContainerAPI, _ContainerAPI);\n\n  function DashboardContainerAPI(dashboardState, addFilter) {\n    _classCallCheck(this, DashboardContainerAPI);\n\n    var _this = _possibleConstructorReturn(this, (DashboardContainerAPI.__proto__ || Object.getPrototypeOf(DashboardContainerAPI)).call(this));\n\n    _this.dashboardState = dashboardState;\n    _this.addFilter = addFilter;\n    return _this;\n  }\n\n  _createClass(DashboardContainerAPI, [{\n    key: 'updatePanel',\n    value: function updatePanel(panelIndex, panelAttributes) {\n      return this.dashboardState.updatePanel(panelIndex, panelAttributes);\n    }\n  }, {\n    key: 'getAppState',\n    value: function getAppState() {\n      return this.dashboardState.appState;\n    }\n  }, {\n    key: 'createChildUistate',\n    value: function createChildUistate(path, initialState) {\n      return this.dashboardState.uiState.createChild(path, initialState, true);\n    }\n  }, {\n    key: 'registerPanelIndexPattern',\n    value: function registerPanelIndexPattern(panelIndex, pattern) {\n      this.dashboardState.registerPanelIndexPatternMap(panelIndex, pattern);\n      this.dashboardState.saveState();\n    }\n  }, {\n    key: 'getHidePanelTitles',\n    value: function getHidePanelTitles() {\n      return this.dashboardState.getHidePanelTitles();\n    }\n  }]);\n\n  return DashboardContainerAPI;\n}(_embeddable.ContainerAPI);",null]}