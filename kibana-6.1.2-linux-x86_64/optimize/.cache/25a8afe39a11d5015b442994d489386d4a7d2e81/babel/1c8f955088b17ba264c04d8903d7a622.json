{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/selectors/dashboard_selectors.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/selectors/dashboard_selectors.js","mtime":1515552029000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDescription = exports.getTitle = exports.getHidePanelTitles = exports.getUseMargins = exports.getMaximizedPanelId = exports.getFullScreenMode = exports.getViewMode = exports.getEmbeddableEditUrl = exports.getEmbeddableTitle = exports.getEmbeddableError = exports.getPanelType = exports.getPanel = exports.getPanels = exports.getDashboard = undefined;\n\nvar _selectors = require('../dashboard/selectors');\n\nvar DashboardSelectors = _interopRequireWildcard(_selectors);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * @typedef {Object} KibanaCoreAppState\n * @property {Object} DashboardState\n */\n\n/**\n * @param {KibanaCoreAppState} state\n * @return {DashboardState}\n */\nvar getDashboard = exports.getDashboard = function getDashboard(state) {\n  return state.dashboard;\n};\n\nvar getPanels = exports.getPanels = function getPanels(state) {\n  return DashboardSelectors.getPanels(getDashboard(state));\n};\nvar getPanel = exports.getPanel = function getPanel(state, panelId) {\n  return DashboardSelectors.getPanel(getDashboard(state), panelId);\n};\nvar getPanelType = exports.getPanelType = function getPanelType(state, panelId) {\n  return DashboardSelectors.getPanelType(getDashboard(state), panelId);\n};\n\nvar getEmbeddableError = exports.getEmbeddableError = function getEmbeddableError(state, panelId) {\n  return DashboardSelectors.getEmbeddableError(getDashboard(state), panelId);\n};\nvar getEmbeddableTitle = exports.getEmbeddableTitle = function getEmbeddableTitle(state, panelId) {\n  return DashboardSelectors.getEmbeddableTitle(getDashboard(state), panelId);\n};\nvar getEmbeddableEditUrl = exports.getEmbeddableEditUrl = function getEmbeddableEditUrl(state, panelId) {\n  return DashboardSelectors.getEmbeddableEditUrl(getDashboard(state), panelId);\n};\n\nvar getViewMode = exports.getViewMode = function getViewMode(state) {\n  return DashboardSelectors.getViewMode(getDashboard(state));\n};\nvar getFullScreenMode = exports.getFullScreenMode = function getFullScreenMode(state) {\n  return DashboardSelectors.getFullScreenMode(getDashboard(state));\n};\nvar getMaximizedPanelId = exports.getMaximizedPanelId = function getMaximizedPanelId(state) {\n  return DashboardSelectors.getMaximizedPanelId(getDashboard(state));\n};\nvar getUseMargins = exports.getUseMargins = function getUseMargins(state) {\n  return DashboardSelectors.getUseMargins(getDashboard(state));\n};\nvar getHidePanelTitles = exports.getHidePanelTitles = function getHidePanelTitles(state) {\n  return DashboardSelectors.getHidePanelTitles(getDashboard(state));\n};\n\nvar getTitle = exports.getTitle = function getTitle(state) {\n  return DashboardSelectors.getTitle(getDashboard(state));\n};\nvar getDescription = exports.getDescription = function getDescription(state) {\n  return DashboardSelectors.getDescription(getDashboard(state));\n};",null]}