{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/region_map/public/region_map_vis.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/region_map/public/region_map_vis.js","mtime":1515552030000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nrequire('./region_map.less');\n\nrequire('./region_map_vis_params');\n\nvar _iconVectorMap = require('./images/icon-vector-map.svg');\n\nvar _iconVectorMap2 = _interopRequireDefault(_iconVectorMap);\n\nvar _vis_factory = require('ui/vis/vis_factory');\n\nvar _vis_category = require('ui/vis/vis_category');\n\nvar _schemas = require('ui/vis/editors/default/schemas');\n\nvar _vis_types = require('ui/registry/vis_types');\n\nvar _truncated_colormaps = require('ui/vislib/components/color/truncated_colormaps');\n\nvar _util = require('./util');\n\nvar _region_map_visualization = require('./region_map_visualization');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_vis_types.VisTypesRegistryProvider.register(function RegionMapProvider(Private, regionmapsConfig, config) {\n  var VisFactory = Private(_vis_factory.VisFactoryProvider);\n  var Schemas = Private(_schemas.VisSchemasProvider);\n  var RegionMapsVisualization = Private(_region_map_visualization.RegionMapsVisualizationProvider);\n\n  var vectorLayers = regionmapsConfig.layers.map(_util.mapToLayerWithId.bind(null, 'self_hosted'));\n  var selectedLayer = vectorLayers[0];\n  var selectedJoinField = selectedLayer ? vectorLayers[0].fields[0] : null;\n\n  return VisFactory.createBaseVisualization({\n    name: 'region_map',\n    title: 'Region Map',\n    implementsRenderComplete: true,\n    description: 'Show metrics on a thematic map. Use one of the provide base maps, or add your own. ' + 'Darker colors represent higher values.',\n    category: _vis_category.CATEGORY.MAP,\n    image: _iconVectorMap2.default,\n    visConfig: {\n      defaults: {\n        legendPosition: 'bottomright',\n        addTooltip: true,\n        colorSchema: 'Yellow to Red',\n        selectedLayer: selectedLayer,\n        selectedJoinField: selectedJoinField,\n        isDisplayWarning: true,\n        wms: config.get('visualization:tileMap:WMSdefaults'),\n        mapZoom: 2,\n        mapCenter: [0, 0]\n      }\n    },\n    visualization: RegionMapsVisualization,\n    editorConfig: {\n      optionsTemplate: '<region_map-vis-params></region_map-vis-params>',\n      collections: {\n        legendPositions: [{\n          value: 'bottomleft',\n          text: 'bottom left'\n        }, {\n          value: 'bottomright',\n          text: 'bottom right'\n        }, {\n          value: 'topleft',\n          text: 'top left'\n        }, {\n          value: 'topright',\n          text: 'top right'\n        }],\n        colorSchemas: Object.keys(_truncated_colormaps.truncatedColorMaps),\n        vectorLayers: vectorLayers\n      },\n      schemas: new Schemas([{\n        group: 'metrics',\n        name: 'metric',\n        title: 'Value',\n        min: 1,\n        max: 1,\n        aggFilter: ['count', 'avg', 'sum', 'min', 'max', 'cardinality', 'top_hits', 'sum_bucket', 'min_bucket', 'max_bucket', 'avg_bucket'],\n        defaults: [{ schema: 'metric', type: 'count' }]\n      }, {\n        group: 'buckets',\n        name: 'segment',\n        icon: 'fa fa-globe',\n        title: 'shape field',\n        min: 1,\n        max: 1,\n        aggFilter: ['terms']\n      }])\n    },\n    responseHandler: 'tabify'\n\n  });\n});",null]}