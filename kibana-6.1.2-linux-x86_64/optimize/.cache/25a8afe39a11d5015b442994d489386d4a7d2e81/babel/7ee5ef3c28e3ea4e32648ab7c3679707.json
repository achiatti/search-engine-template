{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/vislib/lib/vis_config.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/vislib/lib/vis_config.js","mtime":1515552039000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nrovides vislib configuration, throws error if invalid property is accessed without providing defaults\nn\n\nexports.VislibVisConfigProvider = VislibVisConfigProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _types = require('./types');\n\nvar _data = require('./data');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction VislibVisConfigProvider(Private) {\n\n  var Data = Private(_data.VislibLibDataProvider);\n  var visTypes = Private(_types.VislibTypesProvider);\n  var DEFAULT_VIS_CONFIG = {\n    style: {\n      margin: { top: 10, right: 3, bottom: 5, left: 3 }\n    },\n    alerts: [],\n    categoryAxes: [],\n    valueAxes: [],\n    grid: {}\n  };\n\n  var VisConfig = function () {\n    function VisConfig(visConfigArgs, data, uiState, el) {\n      _classCallCheck(this, VisConfig);\n\n      this.data = new Data(data, uiState);\n\n      var visType = visTypes[visConfigArgs.type];\n      var typeDefaults = visType(visConfigArgs, this.data);\n      this._values = _lodash2.default.defaultsDeep({}, typeDefaults, DEFAULT_VIS_CONFIG);\n      this._values.el = el;\n    }\n\n    _createClass(VisConfig, [{\n      key: 'get',\n      value: function get(property, defaults) {\n        if (_lodash2.default.has(this._values, property) || typeof defaults !== 'undefined') {\n          return _lodash2.default.get(this._values, property, defaults);\n        } else {\n          throw new Error('Accessing invalid config property: ' + property);\n          return defaults;\n        }\n      }\n    }, {\n      key: 'set',\n      value: function set(property, value) {\n        return _lodash2.default.set(this._values, property, value);\n      }\n    }]);\n\n    return VisConfig;\n  }();\n\n  return VisConfig;\n}",null]}