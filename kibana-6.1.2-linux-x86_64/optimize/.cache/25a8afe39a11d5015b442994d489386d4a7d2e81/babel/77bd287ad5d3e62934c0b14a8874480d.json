{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/visualizations/components/gauge_vis.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/visualizations/components/gauge_vis.js","mtime":1515552030000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _reactcss = require('reactcss');\n\nvar _reactcss2 = _interopRequireDefault(_reactcss);\n\nvar _calculate_corrdinates = require('../lib/calculate_corrdinates');\n\nvar _calculate_corrdinates2 = _interopRequireDefault(_calculate_corrdinates);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar GaugeVis = function (_Component) {\n  _inherits(GaugeVis, _Component);\n\n  function GaugeVis(props) {\n    _classCallCheck(this, GaugeVis);\n\n    var _this = _possibleConstructorReturn(this, (GaugeVis.__proto__ || Object.getPrototypeOf(GaugeVis)).call(this, props));\n\n    _this.state = {\n      scale: 1,\n      top: 0,\n      left: 0,\n      translateX: 1,\n      translateY: 1\n    };\n    _this.handleResize = _this.handleResize.bind(_this);\n    return _this;\n  }\n\n  _createClass(GaugeVis, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var check = function check() {\n        _this2.timeout = setTimeout(function () {\n          var newState = (0, _calculate_corrdinates2.default)(_this2.inner, _this2.resize, _this2.state);\n          if (newState && _this2.state && !_lodash2.default.isEqual(newState, _this2.state)) {\n            _this2.handleResize();\n          }\n          check();\n        }, 500);\n      };\n      check();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeout);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.handleResize();\n    }\n  }, {\n    key: 'handleResize',\n    value: function handleResize() {\n      // Bingo!\n      var newState = (0, _calculate_corrdinates2.default)(this.inner, this.resize, this.state);\n      this.setState(newState);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          type = _props.type,\n          value = _props.value,\n          max = _props.max,\n          color = _props.color;\n      var _state = this.state,\n          scale = _state.scale,\n          translateX = _state.translateX,\n          translateY = _state.translateY;\n\n      var size = 2 * Math.PI * 50;\n      var sliceSize = type === 'half' ? 0.6 : 1;\n      var percent = value < max ? value / max : 1;\n      var styles = (0, _reactcss2.default)({\n        default: {\n          resize: {\n            position: 'relative',\n            display: 'flex',\n            rowDirection: 'column',\n            flex: '1 0 auto'\n          },\n          svg: {\n            position: 'absolute',\n            top: this.state.top,\n            left: this.state.left,\n            transform: 'matrix(' + scale + ', 0, 0, ' + scale + ', ' + translateX + ', ' + translateY + ')'\n          },\n          innerLine: {\n            strokeWidth: this.props.innerLine\n          },\n          gaugeLine: {\n            strokeWidth: this.props.gaugeLine\n          }\n        },\n        half: {\n          svg: {\n            transform: 'matrix(' + scale + ', 0, 0, ' + scale + ', ' + translateX + ', ' + translateY + ')'\n          }\n        }\n      }, { half: type === 'half' });\n\n      var props = {\n        circle: {\n          r: 50,\n          cx: 60,\n          cy: 60,\n          fill: 'rgba(0,0,0,0)',\n          stroke: color,\n          strokeWidth: this.props.gaugeLine,\n          strokeDasharray: percent * sliceSize * size + ' ' + size,\n          transform: 'rotate(-90 60 60)'\n        },\n        circleBackground: {\n          r: 50,\n          cx: 60,\n          cy: 60,\n          fill: 'rgba(0,0,0,0)',\n          stroke: this.props.reversed ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n          strokeDasharray: sliceSize * size + ' ' + size,\n          strokeWidth: this.props.innerLine\n        }\n      };\n\n      if (type === 'half') {\n        props.circle.transform = 'rotate(-197.8 60 60)';\n        props.circleBackground.transform = 'rotate(162 60 60)';\n      }\n\n      if (this.props.innerColor) {\n        props.circleBackground.stroke = this.props.innerColor;\n      }\n\n      var svg = void 0;\n      if (type === 'half') {\n        svg = _react2.default.createElement(\n          'svg',\n          { width: 120.72, height: 78.72 },\n          _react2.default.createElement('circle', _extends({}, props.circleBackground, { style: styles.innerLine })),\n          _react2.default.createElement('circle', _extends({}, props.circle, { style: styles.gaugeLine }))\n        );\n      } else {\n        svg = _react2.default.createElement(\n          'svg',\n          { width: 120.72, height: 120.72 },\n          _react2.default.createElement('circle', props.circleBackground),\n          _react2.default.createElement('circle', props.circle)\n        );\n      }\n      return _react2.default.createElement(\n        'div',\n        {\n          ref: function ref(el) {\n            return _this3.resize = el;\n          },\n          style: styles.resize\n        },\n        _react2.default.createElement(\n          'div',\n          { style: styles.svg, ref: function ref(el) {\n              return _this3.inner = el;\n            } },\n          svg\n        )\n      );\n    }\n  }]);\n\n  return GaugeVis;\n}(_react.Component);\n\nGaugeVis.defaultProps = {\n  innerLine: 2,\n  gaugeLine: 10\n};\n\nGaugeVis.propTypes = {\n  color: _propTypes2.default.string,\n  gaugeLine: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  innerColor: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  innerLine: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  max: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  metric: _propTypes2.default.object,\n  reversed: _propTypes2.default.bool,\n  value: _propTypes2.default.number,\n  type: _propTypes2.default.oneOf(['half', 'circle'])\n};\n\nexports.default = GaugeVis;\nmodule.exports = exports['default'];",null]}