{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/storage/storage.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/storage/storage.js","mtime":1515552038000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Storage = Storage;\n\nvar _modules = require('ui/modules');\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction Storage(store) {\n  var self = this;\n  self.store = store;\n\n  self.get = function (key) {\n    try {\n      return JSON.parse(self.store.getItem(key));\n    } catch (e) {\n      return null;\n    }\n  };\n\n  self.set = function (key, value) {\n    try {\n      return self.store.setItem(key, _angular2.default.toJson(value));\n    } catch (e) {\n      return false;\n    }\n  };\n\n  self.remove = function (key) {\n    return self.store.removeItem(key);\n  };\n\n  self.clear = function () {\n    return self.store.clear();\n  };\n}\n\nvar createService = function createService(type) {\n  return function ($window) {\n    return new Storage($window[type]);\n  };\n};\n\n_modules.uiModules.get('kibana/storage').service('localStorage', createService('localStorage')).service('sessionStorage', createService('sessionStorage'));",null]}