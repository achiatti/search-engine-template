{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/index_patterns/_field.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/index_patterns/_field.js","mtime":1515552036000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IndexPatternsFieldProvider = IndexPatternsFieldProvider;\n\nvar _obj_define = require('ui/utils/obj_define');\n\nvar _field_format = require('../../field_formats/field_format');\n\nvar _field_formats = require('ui/registry/field_formats');\n\nvar _utils = require('../../../utils');\n\nfunction IndexPatternsFieldProvider(Private, shortDotsFilter, $rootScope, Notifier) {\n  var notify = new Notifier({ location: 'IndexPattern Field' });\n  var fieldFormats = Private(_field_formats.RegistryFieldFormatsProvider);\n\n  function Field(indexPattern, spec) {\n    // unwrap old instances of Field\n    if (spec instanceof Field) spec = spec.$$spec;\n\n    // constuct this object using ObjDefine class, which\n    // extends the Field.prototype but gets it's properties\n    // defined using the logic below\n    var obj = new _obj_define.ObjDefine(spec, Field.prototype);\n\n    if (spec.name === '_source') {\n      spec.type = '_source';\n    }\n\n    // find the type for this field, fallback to unknown type\n    var type = (0, _utils.getKbnFieldType)(spec.type);\n    if (spec.type && !type) {\n      notify.error('Unknown field type \"' + spec.type + '\"' + ' for field \"' + spec.name + '\"' + ' in indexPattern \"' + indexPattern.title + '\"');\n    }\n\n    if (!type) type = (0, _utils.getKbnFieldType)('unknown');\n\n    var format = spec.format;\n    if (!format || !(format instanceof _field_format.FieldFormat)) {\n      format = indexPattern.fieldFormatMap[spec.name] || fieldFormats.getDefaultInstance(spec.type);\n    }\n\n    var indexed = !!spec.indexed;\n    var scripted = !!spec.scripted;\n    var searchable = !!spec.searchable || scripted;\n    var aggregatable = !!spec.aggregatable || scripted;\n    var readFromDocValues = !!spec.readFromDocValues && !scripted;\n    var sortable = spec.name === '_score' || (indexed || aggregatable) && type.sortable;\n    var filterable = spec.name === '_id' || scripted || (indexed || searchable) && type.filterable;\n    var visualizable = aggregatable;\n\n    obj.fact('name');\n    obj.fact('type');\n    obj.writ('count', spec.count || 0);\n\n    // scripted objs\n    obj.fact('scripted', scripted);\n    obj.writ('script', scripted ? spec.script : null);\n    obj.writ('lang', scripted ? spec.lang || 'painless' : null);\n\n    // stats\n    obj.fact('searchable', searchable);\n    obj.fact('aggregatable', aggregatable);\n    obj.fact('readFromDocValues', readFromDocValues);\n\n    // usage flags, read-only and won't be saved\n    obj.comp('format', format);\n    obj.comp('sortable', sortable);\n    obj.comp('filterable', filterable);\n    obj.comp('visualizable', visualizable);\n\n    // computed values\n    obj.comp('indexPattern', indexPattern);\n    obj.comp('displayName', shortDotsFilter(spec.name));\n    obj.comp('$$spec', spec);\n\n    // conflict info\n    obj.writ('conflictDescriptions');\n\n    return obj.create();\n  }\n\n  Object.defineProperties(Field.prototype, {\n    indexed: {\n      get: function get() {\n        throw new Error('field.indexed has been removed, see https://github.com/elastic/kibana/pull/11969');\n      }\n    },\n    analyzed: {\n      get: function get() {\n        throw new Error('field.analyzed has been removed, see https://github.com/elastic/kibana/pull/11969');\n      }\n    },\n    doc_values: {\n      get: function get() {\n        throw new Error('field.doc_values has been removed, see https://github.com/elastic/kibana/pull/11969');\n      }\n    }\n  });\n\n  Field.prototype.routes = {\n    edit: '/management/kibana/indices/{{indexPattern.id}}/field/{{name}}'\n  };\n\n  return Field;\n}",null]}