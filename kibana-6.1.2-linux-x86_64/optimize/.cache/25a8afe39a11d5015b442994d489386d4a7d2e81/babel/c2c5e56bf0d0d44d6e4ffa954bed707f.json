{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/utils/sort_prefix_first.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/utils/sort_prefix_first.js","mtime":1515552038000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortPrefixFirst = sortPrefixFirst;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction sortPrefixFirst(array, prefix, property) {\n  if (!prefix) return array;\n  var lowerCasePrefix = ('' + prefix).toLowerCase();\n  return [].concat(_toConsumableArray(array)).sort(sortPrefixFirstComparator);\n\n  function sortPrefixFirstComparator(a, b) {\n    var aValue = ('' + (property ? a[property] : a)).toLowerCase();\n    var bValue = ('' + (property ? b[property] : b)).toLowerCase();\n\n    var bothStartWith = aValue.startsWith(lowerCasePrefix) && bValue.startsWith(lowerCasePrefix);\n    var neitherStartWith = !aValue.startsWith(lowerCasePrefix) && !bValue.startsWith(lowerCasePrefix);\n\n    if (bothStartWith || neitherStartWith) {\n      return 0;\n    } else if (aValue.startsWith(lowerCasePrefix)) {\n      return -1;\n    }\n    return 1;\n  }\n}",null]}