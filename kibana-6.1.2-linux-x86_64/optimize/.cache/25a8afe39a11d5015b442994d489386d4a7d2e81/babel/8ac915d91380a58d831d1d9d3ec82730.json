{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/region_map/public/region_map_visualization.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/region_map/public/region_map_visualization.js","mtime":1515552030000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nexports.RegionMapsVisualizationProvider = RegionMapsVisualizationProvider;\n\nrequire('plugins/kbn_vislib_vis_types/controls/vislib_basic_options');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _agg_config_result = require('ui/vis/agg_config_result');\n\nvar _agg_config_result2 = _interopRequireDefault(_agg_config_result);\n\nvar _base_maps_visualization = require('../../tile_map/public/base_maps_visualization');\n\nvar _choropleth_layer = require('./choropleth_layer');\n\nvar _choropleth_layer2 = _interopRequireDefault(_choropleth_layer);\n\nvar _truncated_colormaps = require('ui/vislib/components/color/truncated_colormaps');\n\nvar _tooltip_formatter = require('./tooltip_formatter');\n\nvar _tooltip_formatter2 = _interopRequireDefault(_tooltip_formatter);\n\nrequire('ui/vis/map/service_settings');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction RegionMapsVisualizationProvider(Private, Notifier, config) {\n\n  var tooltipFormatter = Private(_tooltip_formatter2.default);\n  var BaseMapsVisualization = Private(_base_maps_visualization.BaseMapsVisualizationProvider);\n\n  return function (_BaseMapsVisualizatio) {\n    _inherits(RegionMapsVisualization, _BaseMapsVisualizatio);\n\n    function RegionMapsVisualization(container, vis) {\n      _classCallCheck(this, RegionMapsVisualization);\n\n      var _this = _possibleConstructorReturn(this, (RegionMapsVisualization.__proto__ || Object.getPrototypeOf(RegionMapsVisualization)).call(this, container, vis));\n\n      _this._vis = _this.vis;\n      _this._choroplethLayer = null;\n      _this._notify = new Notifier({ location: 'Region map' });\n      return _this;\n    }\n\n    _createClass(RegionMapsVisualization, [{\n      key: 'render',\n      value: function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(esReponse, status) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _get(RegionMapsVisualization.prototype.__proto__ || Object.getPrototypeOf(RegionMapsVisualization.prototype), 'render', this).call(this, esReponse, status);\n\n                case 2:\n                  if (!this._choroplethLayer) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  _context.next = 5;\n                  return this._choroplethLayer.whenDataLoaded();\n\n                case 5:\n                case 'end':\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function render(_x, _x2) {\n          return _ref.apply(this, arguments);\n        }\n\n        return render;\n      }()\n    }, {\n      key: '_updateData',\n      value: function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(tableGroup) {\n          var results, buckets, metricsAgg;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  results = void 0;\n\n                  if (!tableGroup || !tableGroup.tables || !tableGroup.tables.length || tableGroup.tables[0].columns.length !== 2) {\n                    results = [];\n                  } else {\n                    buckets = tableGroup.tables[0].rows;\n\n                    results = buckets.map(function (_ref3) {\n                      var _ref4 = _slicedToArray(_ref3, 2),\n                          term = _ref4[0],\n                          value = _ref4[1];\n\n                      return { term: term, value: value };\n                    });\n                  }\n\n                  if (!this._vis.params.selectedJoinField && this._vis.params.selectedLayer) {\n                    this._vis.params.selectedJoinField = this._vis.params.selectedLayer.fields[0];\n                  }\n\n                  if (this._vis.params.selectedLayer) {\n                    _context2.next = 5;\n                    break;\n                  }\n\n                  return _context2.abrupt('return');\n\n                case 5:\n\n                  this._updateChoroplethLayer(this._vis.params.selectedLayer.url, this._vis.params.selectedLayer.attribution);\n                  metricsAgg = _lodash2.default.first(this._vis.getAggConfig().bySchemaName.metric);\n\n                  this._choroplethLayer.setMetrics(results, metricsAgg);\n                  this._setTooltipFormatter();\n\n                  this._kibanaMap.useUiStateFromVisualization(this._vis);\n\n                case 10:\n                case 'end':\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        function _updateData(_x3) {\n          return _ref2.apply(this, arguments);\n        }\n\n        return _updateData;\n      }()\n    }, {\n      key: '_updateParams',\n      value: function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n          var visParams;\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return _get(RegionMapsVisualization.prototype.__proto__ || Object.getPrototypeOf(RegionMapsVisualization.prototype), '_updateParams', this).call(this);\n\n                case 2:\n                  visParams = this.vis.params;\n\n                  if (!visParams.selectedJoinField && visParams.selectedLayer) {\n                    visParams.selectedJoinField = visParams.selectedLayer.fields[0];\n                  }\n\n                  if (!(!visParams.selectedJoinField || !visParams.selectedLayer)) {\n                    _context3.next = 6;\n                    break;\n                  }\n\n                  return _context3.abrupt('return');\n\n                case 6:\n\n                  this._updateChoroplethLayer(visParams.selectedLayer.url, visParams.selectedLayer.attribution);\n                  this._choroplethLayer.setJoinField(visParams.selectedJoinField.name);\n                  this._choroplethLayer.setColorRamp(_truncated_colormaps.truncatedColorMaps[visParams.colorSchema]);\n                  this._setTooltipFormatter();\n\n                case 10:\n                case 'end':\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        function _updateParams() {\n          return _ref5.apply(this, arguments);\n        }\n\n        return _updateParams;\n      }()\n    }, {\n      key: '_updateChoroplethLayer',\n      value: function _updateChoroplethLayer(url, attribution) {\n        var _this2 = this;\n\n        if (this._choroplethLayer && this._choroplethLayer.equalsGeoJsonUrl(url)) {\n          //no need to recreate the layer\n          return;\n        }\n\n        this._kibanaMap.removeLayer(this._choroplethLayer);\n\n        var previousMetrics = this._choroplethLayer ? this._choroplethLayer.getMetrics() : null;\n        var previousMetricsAgg = this._choroplethLayer ? this._choroplethLayer.getMetricsAgg() : null;\n        this._choroplethLayer = new _choropleth_layer2.default(url, attribution);\n        if (previousMetrics && previousMetricsAgg) {\n          this._choroplethLayer.setMetrics(previousMetrics, previousMetricsAgg);\n        }\n        this._choroplethLayer.on('select', function (event) {\n          var aggs = _this2._vis.getAggConfig().getResponseAggs();\n          var aggConfigResult = new _agg_config_result2.default(aggs[0], false, event, event);\n          _this2._vis.API.events.filter({ point: { aggConfigResult: aggConfigResult } });\n        });\n        this._choroplethLayer.on('styleChanged', function (event) {\n          var shouldShowWarning = _this2._vis.params.isDisplayWarning && config.get('visualization:regionmap:showWarnings');\n          if (event.mismatches.length > 0 && shouldShowWarning) {\n            _this2._notify.warning('Could not show ' + event.mismatches.length + ' ' + (event.mismatches.length > 1 ? 'results' : 'result') + ' on the map.' + ' To avoid this, ensure that each term can be matched to a corresponding shape on that shape\\'s join field.' + (' Could not match following terms: ' + event.mismatches.join(',')));\n          }\n        });\n        this._kibanaMap.addLayer(this._choroplethLayer);\n      }\n    }, {\n      key: '_setTooltipFormatter',\n      value: function _setTooltipFormatter() {\n        var metricsAgg = _lodash2.default.first(this._vis.getAggConfig().bySchemaName.metric);\n        if (this._vis.getAggConfig().bySchemaName.segment && this._vis.getAggConfig().bySchemaName.segment[0]) {\n          var fieldName = this._vis.getAggConfig().bySchemaName.segment[0].makeLabel();\n          this._choroplethLayer.setTooltipFormatter(tooltipFormatter, metricsAgg, fieldName);\n        } else {\n          this._choroplethLayer.setTooltipFormatter(tooltipFormatter, metricsAgg, null);\n        }\n      }\n    }]);\n\n    return RegionMapsVisualization;\n  }(BaseMapsVisualization);\n}",null]}