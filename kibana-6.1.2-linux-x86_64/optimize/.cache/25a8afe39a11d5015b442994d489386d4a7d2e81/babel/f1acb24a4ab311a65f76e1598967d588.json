{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/components/lib/series_change_handler.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/components/lib/series_change_handler.js","mtime":1515552029000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _new_metric_agg_fn = require('./new_metric_agg_fn');\n\nvar _new_metric_agg_fn2 = _interopRequireDefault(_new_metric_agg_fn);\n\nvar _agg_lookup = require('../../../common/agg_lookup');\n\nvar _collection_actions = require('./collection_actions');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (props, items) {\n  return function (doc) {\n    // If we only have one sibling and the user changes to a pipeline\n    // agg we are going to add the pipeline instead of changing the\n    // current item.\n    if (items.length === 1 && !(0, _agg_lookup.isBasicAgg)(doc)) {\n      _collection_actions.handleAdd.call(null, props, function () {\n        var metric = (0, _new_metric_agg_fn2.default)();\n        metric.type = doc.type;\n        var incompatPipelines = ['calculation', 'series_agg'];\n        if (!_lodash2.default.contains(incompatPipelines, doc.type)) metric.field = doc.id;\n        return metric;\n      });\n    } else {\n      _collection_actions.handleChange.call(null, props, doc);\n    }\n  };\n};\n\nmodule.exports = exports['default'];",null]}