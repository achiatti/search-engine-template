{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/routes/work_queue.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/routes/work_queue.js","mtime":1515552037000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkQueue = WorkQueue;\nfunction WorkQueue() {\n  var q = this;\n\n  var work = [];\n  var fullDefers = [];\n\n  q.limit = 0;\n  Object.defineProperty(q, 'length', {\n    get: function get() {\n      return work.length;\n    }\n  });\n\n  var resolve = function resolve(defers) {\n    return defers.splice(0).map(function (defer) {\n      return defer.resolve();\n    });\n  };\n\n  var checkIfFull = function checkIfFull() {\n    if (work.length >= q.limit && fullDefers.length) {\n      resolve(fullDefers);\n    }\n  };\n\n  q.resolveWhenFull = function (defer) {\n    fullDefers.push(defer);\n    checkIfFull();\n  };\n\n  q.doWork = function () {\n    var resps = resolve(work);\n    checkIfFull();\n    return resps;\n  };\n\n  q.empty = function () {\n    work.splice(0);\n    checkIfFull();\n  };\n\n  q.push = function (defer) {\n    work.push(defer);\n    checkIfFull();\n  };\n}",null]}