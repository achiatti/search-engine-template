{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/ui_framework/src/services/accessibility/html_id_generator.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/ui_framework/src/services/accessibility/html_id_generator.js","mtime":1515552216725},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.htmlIdGenerator = htmlIdGenerator;\n\nvar _uuid = require('uuid');\n\nvar _uuid2 = _interopRequireDefault(_uuid);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n/**\n * This function returns a function to generate ids.\n * This can be used to generate unique, but predictable ids to pair labels\n * with their inputs. It takes an optional prefix as a parameter. If you don't\n * specify it, it generates a random id prefix.\n */\nfunction htmlIdGenerator(idPrefix) {\n  var prefix = idPrefix || _uuid2.default.v1();\n  return function (suffix) {\n    return prefix + '_' + (suffix || _uuid2.default.v1());\n  };\n}",null]}