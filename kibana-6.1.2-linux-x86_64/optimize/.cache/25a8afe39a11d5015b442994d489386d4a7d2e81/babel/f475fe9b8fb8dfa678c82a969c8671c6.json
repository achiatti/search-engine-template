{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/vislib/lib/axis/axis_title.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/vislib/lib/axis/axis_title.js","mtime":1515552039000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.VislibLibAxisTitleProvider = VislibLibAxisTitleProvider;\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction VislibLibAxisTitleProvider() {\n  var AxisTitle = function () {\n    function AxisTitle(axisConfig) {\n      _classCallCheck(this, AxisTitle);\n\n      this.axisConfig = axisConfig;\n      this.elSelector = this.axisConfig.get('title.elSelector').replace('{pos}', this.axisConfig.get('position'));\n    }\n\n    _createClass(AxisTitle, [{\n      key: 'render',\n      value: function render() {\n        _d2.default.select(this.axisConfig.get('rootEl')).selectAll(this.elSelector).call(this.draw());\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        (0, _jquery2.default)(this.axisConfig.get('rootEl')).find(this.elSelector).find('svg').remove();\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        var config = this.axisConfig;\n\n        return function (selection) {\n          selection.each(function () {\n            if (!config.get('show') && !config.get('title.show', false)) return;\n\n            var el = this;\n            var div = _d2.default.select(el);\n            var width = (0, _jquery2.default)(el).width();\n            var height = (0, _jquery2.default)(el).height();\n            var titlePadding = 15;\n            var axisPrefix = config.isHorizontal() ? 'x' : 'y';\n\n            var svg = div.append('svg').attr('width', width).attr('height', height).attr('class', 'axis-title ' + axisPrefix + '-axis-title');\n\n            var bbox = svg.append('text').attr('transform', function () {\n              if (config.isHorizontal()) {\n                return 'translate(' + width / 2 + ',' + titlePadding + ')';\n              }\n              return 'translate(' + titlePadding + ',' + height / 2 + ') rotate(270)';\n            }).attr('text-anchor', 'middle').text(config.get('title.text')).node().getBBox();\n\n            if (config.isHorizontal()) {\n              svg.attr('height', Math.ceil(bbox.height));\n            } else {\n              svg.attr('width', Math.ceil(bbox.height));\n            }\n          });\n        };\n      }\n    }]);\n\n    return AxisTitle;\n  }();\n\n  return AxisTitle;\n}",null]}