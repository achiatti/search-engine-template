{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_types/param_types/regex.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_types/param_types/regex.js","mtime":1515552034000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RegexParamTypeProvider = RegexParamTypeProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _regular_expression = require('../controls/regular_expression.html');\n\nvar _regular_expression2 = _interopRequireDefault(_regular_expression);\n\nvar _base = require('./base');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction RegexParamTypeProvider(Private) {\n\n  var BaseParamType = Private(_base.BaseParamTypeProvider);\n\n  _lodash2.default.class(RegexParamType).inherits(BaseParamType);\n  function RegexParamType(config) {\n    _lodash2.default.defaults(config, { pattern: '' });\n    RegexParamType.Super.call(this, config);\n  }\n\n  RegexParamType.prototype.editor = _regular_expression2.default;\n\n  /**\n   * Disabled state of the agg param\n   *\n   * @return {bool}\n   */\n  RegexParamType.prototype.disabled = function () {\n    return false;\n  };\n\n  /**\n   * Write the aggregation parameter.\n   *\n   * @param  {AggConfig} aggConfig - the entire configuration for this agg\n   * @param  {object} output - the result of calling write on all of the aggregations\n   *                         parameters.\n   * @param  {object} output.params - the final object that will be included as the params\n   *                               for the agg\n   * @return {undefined}\n   */\n  RegexParamType.prototype.write = function (aggConfig, output) {\n    var param = aggConfig.params[this.name];\n    var paramType = aggConfig.type.params.byName[this.name];\n\n    // clear aggParam if pattern is not set or is disabled\n    if (!param || !param.pattern || !param.pattern.length || paramType.disabled(aggConfig)) {\n      return;\n    }\n\n    var obj = {\n      pattern: param.pattern\n    };\n\n    output.params[this.name] = obj;\n  };\n\n  return RegexParamType;\n}",null]}