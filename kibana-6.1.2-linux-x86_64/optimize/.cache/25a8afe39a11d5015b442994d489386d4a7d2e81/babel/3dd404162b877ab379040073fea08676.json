{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/input_control_vis/public/components/vis/range_control.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/input_control_vis/public/components/vis/range_control.js","mtime":1515552027000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RangeControl = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactInputRange = require('react-input-range');\n\nvar _reactInputRange2 = _interopRequireDefault(_reactInputRange);\n\nvar _form_row = require('./form_row');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar toState = function toState(props) {\n  var state = {\n    sliderValue: props.control.value,\n    minValue: '',\n    maxValue: ''\n  };\n  if (props.control.hasValue()) {\n    state.minValue = props.control.value.min;\n    state.maxValue = props.control.value.max;\n  }\n  return state;\n};\n\nvar RangeControl = exports.RangeControl = function (_Component) {\n  _inherits(RangeControl, _Component);\n\n  function RangeControl(props) {\n    _classCallCheck(this, RangeControl);\n\n    var _this = _possibleConstructorReturn(this, (RangeControl.__proto__ || Object.getPrototypeOf(RangeControl)).call(this, props));\n\n    _this.componentWillReceiveProps = function (nextProps) {\n      _this.setState(toState(nextProps));\n    };\n\n    _this.handleOnChange = function (value) {\n      _this.setState({\n        sliderValue: value,\n        minValue: value.min,\n        maxValue: value.max\n      });\n    };\n\n    _this.handleOnChangeComplete = function (value) {\n      _this.props.stageFilter(_this.props.controlIndex, value);\n    };\n\n    _this.handleInputChange = function (evt) {\n      var inputValue = parseFloat(evt.target.value);\n      if (inputValue < _this.props.control.min) {\n        inputValue = _this.props.control.min;\n      } else if (inputValue > _this.props.control.max) {\n        inputValue = _this.props.control.max;\n      }\n\n      var otherValue = void 0;\n      if ('min' === evt.target.name) {\n        otherValue = _this.props.control.value.max;\n      } else {\n        otherValue = _this.props.control.value.min;\n      }\n\n      var min = void 0;\n      var max = void 0;\n      if (inputValue < otherValue) {\n        min = inputValue;\n        max = otherValue;\n      } else {\n        min = otherValue;\n        max = inputValue;\n      }\n      _this.handleOnChangeComplete({\n        min: min,\n        max: max\n      });\n    };\n\n    _this.formatLabel = function (value) {\n      var formatedValue = value;\n      var decimalPlaces = _lodash2.default.get(_this.props, 'control.options.decimalPlaces');\n      if (decimalPlaces !== null && decimalPlaces >= 0) {\n        formatedValue = value.toFixed(decimalPlaces);\n      }\n      return formatedValue;\n    };\n\n    _this.state = toState(props);\n    return _this;\n  }\n\n  _createClass(RangeControl, [{\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        _form_row.FormRow,\n        {\n          id: this.props.control.id,\n          label: this.props.control.label\n        },\n        _react2.default.createElement('input', {\n          id: this.props.control.id + '_min',\n          name: 'min',\n          type: 'number',\n          className: 'kuiTextInput',\n          value: this.state.minValue,\n          min: this.props.control.min,\n          max: this.props.control.max,\n          onChange: this.handleInputChange\n        }),\n        _react2.default.createElement(\n          'div',\n          { className: 'inputRangeContainer' },\n          _react2.default.createElement(_reactInputRange2.default, {\n            maxValue: this.props.control.max,\n            minValue: this.props.control.min,\n            step: this.props.control.options.step,\n            value: this.state.sliderValue,\n            onChange: this.handleOnChange,\n            onChangeComplete: this.handleOnChangeComplete,\n            draggableTrack: true,\n            ariaLabelledby: this.props.control.id,\n            formatLabel: this.formatLabel\n          })\n        ),\n        _react2.default.createElement('input', {\n          id: this.props.control.id + '_max',\n          name: 'max',\n          type: 'number',\n          className: 'kuiTextInput',\n          value: this.state.maxValue,\n          min: this.props.control.min,\n          max: this.props.control.max,\n          onChange: this.handleInputChange\n        })\n      );\n    }\n  }]);\n\n  return RangeControl;\n}(_react.Component);\n\nRangeControl.propTypes = {\n  control: _propTypes2.default.object.isRequired,\n  controlIndex: _propTypes2.default.number.isRequired,\n  stageFilter: _propTypes2.default.func.isRequired\n};",null]}