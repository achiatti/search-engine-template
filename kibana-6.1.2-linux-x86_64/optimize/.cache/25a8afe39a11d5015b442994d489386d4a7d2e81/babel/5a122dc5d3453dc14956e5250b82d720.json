{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/components/vis_with_splits.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/components/vis_with_splits.js","mtime":1515552029000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.visWithSplits = visWithSplits;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _get_display_name = require('./lib/get_display_name');\n\nvar _lodash = require('lodash');\n\nvar _calculate_label = require('../../common/calculate_label');\n\nvar _calculate_label2 = _interopRequireDefault(_calculate_label);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction visWithSplits(WrappedComponent) {\n  function SplitVisComponent(props) {\n    var model = props.model,\n        visData = props.visData;\n\n    if (!model || !visData || !visData[model.id]) return _react2.default.createElement(WrappedComponent, props);\n    if (visData[model.id].series.every(function (s) {\n      return s.id.split(':').length === 1;\n    })) {\n      return _react2.default.createElement(WrappedComponent, props);\n    }\n\n    var splitsVisData = visData[model.id].series.reduce(function (acc, series) {\n      var _series$id$split = series.id.split(':'),\n          _series$id$split2 = _slicedToArray(_series$id$split, 2),\n          seriesId = _series$id$split2[0],\n          splitId = _series$id$split2[1];\n\n      var seriesModel = model.series.find(function (s) {\n        return s.id === seriesId;\n      });\n      if (!seriesModel || !splitId) return acc;\n      var metric = (0, _lodash.last)(seriesModel.metrics);\n      var label = (0, _calculate_label2.default)(metric, seriesModel.metrics);\n      if (!acc[splitId]) acc[splitId] = { series: [], label: series.label };\n      acc[splitId].series.push(_extends({}, series, {\n        id: seriesId,\n        color: seriesModel.color,\n        label: seriesModel.label || label\n      }));\n      return acc;\n    }, {});\n\n    var nonSplitSeries = (0, _lodash.first)(visData[model.id].series.filter(function (series) {\n      var seriesModel = model.series.find(function (s) {\n        return s.id === series.id;\n      });\n      if (!seriesModel) return false;\n      return ['everything', 'filter'].includes(seriesModel.split_mode);\n    }));\n\n    var indexOfNonSplit = nonSplitSeries ? (0, _lodash.findIndex)(model.series, function (s) {\n      return s.id === nonSplitSeries.id;\n    }) : null;\n\n    var rows = Object.keys(splitsVisData).map(function (key) {\n      var splitData = splitsVisData[key];\n      var series = splitData.series,\n          label = splitData.label;\n\n      var newSeries = indexOfNonSplit != null && indexOfNonSplit > 0 ? [].concat(_toConsumableArray(series), [nonSplitSeries]) : [nonSplitSeries].concat(_toConsumableArray(series));\n      var newVisData = _defineProperty({}, model.id, {\n        id: model.id,\n        series: newSeries || series\n      });\n      return _react2.default.createElement(\n        'div',\n        { key: key, className: 'splitVis_split' },\n        _react2.default.createElement(\n          'div',\n          { className: 'splitVis_visualization' },\n          _react2.default.createElement(WrappedComponent, {\n            model: model,\n            visData: newVisData,\n            onBrush: props.onBrush,\n            additionalLabel: label,\n            backgroundColor: props.backgroundColor\n          })\n        )\n      );\n    });\n\n    return _react2.default.createElement(\n      'div',\n      { className: 'splitVis' },\n      rows\n    );\n  }\n  SplitVisComponent.displayName = 'SplitVisComponent(' + (0, _get_display_name.getDisplayName)(WrappedComponent) + ')';\n  return SplitVisComponent;\n}",null]}