{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/directives/field_name.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/directives/field_name.js","mtime":1515552035000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nrequire('ui/filters/short_dots');\n\nvar _boolean_field_name_icon = require('./field_name_icons/boolean_field_name_icon.html');\n\nvar _boolean_field_name_icon2 = _interopRequireDefault(_boolean_field_name_icon);\n\nvar _conflict_field_name_icon = require('./field_name_icons/conflict_field_name_icon.html');\n\nvar _conflict_field_name_icon2 = _interopRequireDefault(_conflict_field_name_icon);\n\nvar _date_field_name_icon = require('./field_name_icons/date_field_name_icon.html');\n\nvar _date_field_name_icon2 = _interopRequireDefault(_date_field_name_icon);\n\nvar _geo_point_field_name_icon = require('./field_name_icons/geo_point_field_name_icon.html');\n\nvar _geo_point_field_name_icon2 = _interopRequireDefault(_geo_point_field_name_icon);\n\nvar _ip_field_name_icon = require('./field_name_icons/ip_field_name_icon.html');\n\nvar _ip_field_name_icon2 = _interopRequireDefault(_ip_field_name_icon);\n\nvar _murmur3_field_name_icon = require('./field_name_icons/murmur3_field_name_icon.html');\n\nvar _murmur3_field_name_icon2 = _interopRequireDefault(_murmur3_field_name_icon);\n\nvar _number_field_name_icon = require('./field_name_icons/number_field_name_icon.html');\n\nvar _number_field_name_icon2 = _interopRequireDefault(_number_field_name_icon);\n\nvar _source_field_name_icon = require('./field_name_icons/source_field_name_icon.html');\n\nvar _source_field_name_icon2 = _interopRequireDefault(_source_field_name_icon);\n\nvar _string_field_name_icon = require('./field_name_icons/string_field_name_icon.html');\n\nvar _string_field_name_icon2 = _interopRequireDefault(_string_field_name_icon);\n\nvar _unknown_field_name_icon = require('./field_name_icons/unknown_field_name_icon.html');\n\nvar _unknown_field_name_icon2 = _interopRequireDefault(_unknown_field_name_icon);\n\nvar _modules = require('ui/modules');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = _modules.uiModules.get('kibana');\n\n_module.directive('fieldName', function ($compile, $rootScope, $filter) {\n  return {\n    restrict: 'AE',\n    scope: {\n      'field': '=',\n      'fieldName': '=',\n      'fieldType': '='\n    },\n    link: function link($scope, $el) {\n      var typeToIconMap = {\n        boolean: _boolean_field_name_icon2.default,\n        conflict: _conflict_field_name_icon2.default,\n        date: _date_field_name_icon2.default,\n        geo_point: _geo_point_field_name_icon2.default,\n        ip: _ip_field_name_icon2.default,\n        murmur3: _murmur3_field_name_icon2.default,\n        number: _number_field_name_icon2.default,\n        source: _source_field_name_icon2.default,\n        string: _string_field_name_icon2.default\n      };\n\n      function typeIcon(fieldType) {\n        if (typeToIconMap.hasOwnProperty(fieldType)) {\n          return typeToIconMap[fieldType];\n        }\n\n        return _unknown_field_name_icon2.default;\n      }\n\n      $rootScope.$watchMulti.call($scope, ['field', 'fieldName', 'fieldType', 'field.rowCount'], function () {\n\n        var type = $scope.field ? $scope.field.type : $scope.fieldType;\n        var name = $scope.field ? $scope.field.name : $scope.fieldName;\n        var results = $scope.field ? !$scope.field.rowCount && !$scope.field.scripted : false;\n        var scripted = $scope.field ? $scope.field.scripted : false;\n\n        var displayName = $filter('shortDots')(name);\n\n        $el.attr('title', name).toggleClass('no-results', results).toggleClass('scripted', scripted).prepend(typeIcon(type)).append((0, _jquery2.default)('<span>').text(displayName).addClass('discover-field-name'));\n      });\n    }\n  };\n});",null]}