{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/vis/components/color/color.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/vis/components/color/color.js","mtime":1515552038000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VislibComponentsColorColorProvider = VislibComponentsColorColorProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _mapped_colors = require('./mapped_colors');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction VislibComponentsColorColorProvider(Private) {\n  var mappedColors = Private(_mapped_colors.VisColorMappedColorsProvider);\n\n  /*\n   * Accepts an array of strings or numbers that are used to create a\n   * a lookup table that associates the values (key) with a hex color (value).\n   * Returns a function that accepts a value (i.e. a string or number)\n   * and returns a hex color associated with that value.\n   */\n\n  return function (arrayOfStringsOrNumbers, colorMapping) {\n    colorMapping = colorMapping || {};\n    if (!Array.isArray(arrayOfStringsOrNumbers)) {\n      throw new Error('ColorUtil expects an array');\n    }\n\n    arrayOfStringsOrNumbers.forEach(function (val) {\n      if (!_lodash2.default.isString(val) && !_lodash2.default.isNumber(val) && !_lodash2.default.isUndefined(val)) {\n        throw new TypeError('ColorUtil expects an array of strings, numbers, or undefined values');\n      }\n    });\n\n    mappedColors.mapKeys(arrayOfStringsOrNumbers);\n\n    return function (value) {\n      return colorMapping[value] || mappedColors.get(value);\n    };\n  };\n}",null]}