{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/visualize/visualization_editor.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/visualize/visualization_editor.js","mtime":1515552039000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nrequire('ui/visualize/spy');\n\nrequire('ui/visualize/visualize.less');\n\nrequire('ui/visualize/visualize_legend');\n\nvar _modules = require('ui/modules');\n\nrequire('angular-sanitize');\n\nvar _vis_editor_types = require('ui/registry/vis_editor_types');\n\nvar _update_status = require('ui/vis/update_status');\n\n_modules.uiModules.get('kibana/directive', ['ngSanitize']).directive('visualizationEditor', function (Private, $timeout) {\n  var editorTypes = Private(_vis_editor_types.VisEditorTypesRegistryProvider);\n\n  return {\n    restrict: 'E',\n    scope: {\n      showSpyPanel: '=',\n      vis: '=',\n      visData: '=',\n      uiState: '=?',\n      searchSource: '='\n    },\n    link: function link($scope, element) {\n      // Clone the _vis instance.\n      var vis = $scope.vis;\n      var Editor = typeof vis.type.editor === 'function' ? vis.type.editor : editorTypes.find(function (editor) {\n        return editor.key === vis.type.editor;\n      });\n      var editor = new Editor(element[0], vis, $scope.showSpyPanel);\n\n      $scope.renderFunction = function () {\n        if (!$scope.vis) return;\n        editor.render($scope.visData, $scope.searchSource, (0, _update_status.getUpdateStatus)($scope)).then(function () {\n          $scope.$emit('renderComplete');\n        });\n      };\n\n      $scope.$on('render', function (event) {\n        event.preventDefault();\n        $scope.renderFunction();\n      });\n\n      $scope.$on('$destroy', function () {\n        editor.destroy();\n      });\n\n      if (!vis.initialized) {\n        $timeout(function () {\n          $scope.renderFunction();\n        });\n      }\n    }\n  };\n});",null]}