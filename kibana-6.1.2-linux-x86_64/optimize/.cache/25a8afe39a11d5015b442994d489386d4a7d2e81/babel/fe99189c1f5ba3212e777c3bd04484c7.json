{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/vis/editors/default/vis_options.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/vis/editors/default/vis_options.js","mtime":1515552039000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _modules = require('ui/modules');\n\nvar _vis_options = require('./vis_options.html');\n\nvar _vis_options2 = _interopRequireDefault(_vis_options);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This directive sort of \"transcludes\" in whatever template you pass in via the `editor` attribute.\n * This lets you specify a full-screen UI for editing a vis type, instead of using the regular\n * sidebar.\n */\n\n_modules.uiModules.get('app/visualize').directive('visEditorVisOptions', function (Private, $compile) {\n  return {\n    restrict: 'E',\n    template: _vis_options2.default,\n    scope: {\n      vis: '=',\n      visData: '=',\n      uiState: '=',\n      editor: '=',\n      visualizeEditor: '='\n    },\n    link: function link($scope, $el) {\n      var $optionContainer = $el.find('[data-visualization-options]');\n\n      var reactOptionsComponent = typeof $scope.editor !== 'string';\n      var stageEditorParams = function stageEditorParams(params) {\n        $scope.vis.params = _lodash2.default.cloneDeep(params);\n        $scope.$apply();\n      };\n      var renderReactComponent = function renderReactComponent() {\n        var Component = $scope.editor;\n        (0, _reactDom.render)(_react2.default.createElement(Component, { scope: $scope, stageEditorParams: stageEditorParams }), $el[0]);\n      };\n      // Bind the `editor` template with the scope.\n      if (reactOptionsComponent) {\n        renderReactComponent();\n      } else {\n        var $editor = $compile($scope.editor)($scope);\n        $optionContainer.append($editor);\n      }\n\n      $scope.$watchGroup(['visData', 'visualizeEditor', 'vis.params'], function () {\n        if (reactOptionsComponent) {\n          renderReactComponent();\n        }\n      });\n\n      $scope.$watch('vis.type.schemas.all.length', function (len) {\n        $scope.alwaysShowOptions = len === 0;\n      });\n\n      $el.on('$destroy', function () {\n        if (reactOptionsComponent) {\n          (0, _reactDom.unmountComponentAtNode)($el[0]);\n        }\n      });\n    }\n  };\n});",null]}