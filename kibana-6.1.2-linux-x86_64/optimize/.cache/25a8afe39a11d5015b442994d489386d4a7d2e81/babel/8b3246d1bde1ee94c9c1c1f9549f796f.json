{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/timelion/public/vis/timelion_request_handler.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/timelion/public/vis/timelion_request_handler.js","mtime":1515552031000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TimelionRequestHandlerProvider = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _dashboard_context = require('plugins/kibana/dashboard/dashboard_context');\n\nvar _timezone = require('ui/vis/lib/timezone');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TimelionRequestHandlerProvider = function TimelionRequestHandlerProvider(Private, Notifier, $http, $rootScope, timefilter) {\n  var timezone = Private(_timezone.timezoneProvider)();\n  var dashboardContext = Private(_dashboard_context.dashboardContextProvider);\n\n  var notify = new Notifier({\n    location: 'Timelion'\n  });\n\n  return {\n    name: 'timelion',\n    handler: function handler(vis /*, appState, uiState, queryFilter*/) {\n\n      return new Promise(function (resolve, reject) {\n        var expression = vis.params.expression;\n        if (!expression) return;\n\n        var timeFilter = timefilter.time;\n        if (vis.params.timeRange) {\n          timeFilter = {\n            mode: 'absolute',\n            from: vis.params.timeRange.min.toJSON(),\n            to: vis.params.timeRange.max.toJSON()\n          };\n        }\n        var httpResult = $http.post('../api/timelion/run', {\n          sheet: [expression],\n          extended: {\n            es: {\n              filter: dashboardContext()\n            }\n          },\n          time: _lodash2.default.extend(timeFilter, {\n            interval: vis.params.interval,\n            timezone: timezone\n          })\n        }).then(function (resp) {\n          return resp.data;\n        }).catch(function (resp) {\n          throw resp.data;\n        });\n\n        httpResult.then(function (resp) {\n          resolve(resp);\n        }).catch(function (resp) {\n          var err = new Error(resp.message);\n          err.stack = resp.stack;\n          notify.error(err);\n          reject(err);\n        });\n      });\n    }\n  };\n};\n\nexports.TimelionRequestHandlerProvider = TimelionRequestHandlerProvider;",null]}