{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/visualizations/components/timeseries_chart.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/visualizations/components/timeseries_chart.js","mtime":1515552030000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.scaleUp = scaleUp;\nexports.scaleDown = scaleDown;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _reactcss = require('reactcss');\n\nvar _reactcss2 = _interopRequireDefault(_reactcss);\n\nvar _flot_chart = require('./flot_chart');\n\nvar _flot_chart2 = _interopRequireDefault(_flot_chart);\n\nvar _annotation = require('./annotation');\n\nvar _annotation2 = _interopRequireDefault(_annotation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction scaleUp(value) {\n  return window.devicePixelRatio * value;\n}\n\nfunction scaleDown(value) {\n  return value / window.devicePixelRatio;\n}\n\nvar TimeseriesChart = function (_Component) {\n  _inherits(TimeseriesChart, _Component);\n\n  function TimeseriesChart(props) {\n    _classCallCheck(this, TimeseriesChart);\n\n    var _this = _possibleConstructorReturn(this, (TimeseriesChart.__proto__ || Object.getPrototypeOf(TimeseriesChart)).call(this, props));\n\n    _this.state = {\n      annotations: [],\n      showTooltip: false,\n      mouseHoverTimer: false\n    };\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseOver = _this.handleMouseOver.bind(_this);\n    _this.renderAnnotations = _this.renderAnnotations.bind(_this);\n    _this.handleDraw = _this.handleDraw.bind(_this);\n    return _this;\n  }\n\n  _createClass(TimeseriesChart, [{\n    key: 'calculateLeftRight',\n    value: function calculateLeftRight(item, plot) {\n      var canvas = plot.getCanvas();\n      var point = plot.pointOffset({ x: item.datapoint[0], y: item.datapoint[1] });\n      var edge = (scaleUp(point.left) + 10) / canvas.width;\n      var right = void 0;\n      var left = void 0;\n      if (edge > 0.5) {\n        right = scaleDown(canvas.width) - point.left;\n        left = null;\n      } else {\n        right = null;\n        left = point.left;\n      }\n      return [left, right];\n    }\n  }, {\n    key: 'handleDraw',\n    value: function handleDraw(plot) {\n      if (!plot || !this.props.annotations) return;\n      var annotations = this.props.annotations.reduce(function (acc, anno) {\n        return acc.concat(anno.series.map(function (series) {\n          return {\n            series: series,\n            plot: plot,\n            key: anno.id + '-' + series[0],\n            icon: anno.icon,\n            color: anno.color\n          };\n        }));\n      }, []);\n      this.setState({ annotations: annotations });\n    }\n  }, {\n    key: 'handleMouseOver',\n    value: function handleMouseOver(e, pos, item, plot) {\n\n      if (typeof this.state.mouseHoverTimer === 'number') {\n        window.clearTimeout(this.state.mouseHoverTimer);\n      }\n\n      if (item) {\n        var plotOffset = plot.getPlotOffset();\n        var point = plot.pointOffset({ x: item.datapoint[0], y: item.datapoint[1] });\n\n        var _calculateLeftRight = this.calculateLeftRight(item, plot),\n            _calculateLeftRight2 = _slicedToArray(_calculateLeftRight, 2),\n            left = _calculateLeftRight2[0],\n            right = _calculateLeftRight2[1];\n\n        var top = point.top;\n        this.setState({\n          showTooltip: true,\n          item: item,\n          left: left,\n          right: right,\n          top: top + 10,\n          bottom: plotOffset.bottom\n        });\n      }\n    }\n  }, {\n    key: 'handleMouseLeave',\n    value: function handleMouseLeave() {\n      var _this2 = this;\n\n      this.state.mouseHoverTimer = window.setTimeout(function () {\n        _this2.setState({ showTooltip: false });\n      }, 250);\n    }\n  }, {\n    key: 'renderAnnotations',\n    value: function renderAnnotations(annotation) {\n      return _react2.default.createElement(_annotation2.default, {\n        series: annotation.series,\n        plot: annotation.plot,\n        key: annotation.key,\n        icon: annotation.icon,\n        reversed: this.props.reversed,\n        color: annotation.color\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _state = this.state,\n          item = _state.item,\n          right = _state.right,\n          top = _state.top,\n          left = _state.left;\n      var series = this.props.series;\n\n      var tooltip = void 0;\n\n      var styles = (0, _reactcss2.default)({\n        showTooltip: {\n          tooltipContainer: {\n            pointerEvents: 'none',\n            position: 'absolute',\n            top: top - 28,\n            left: left,\n            right: right,\n            zIndex: 100,\n            display: 'flex',\n            alignItems: 'center',\n            padding: '0 5px'\n          },\n          tooltip: {\n            backgroundColor: this.props.reversed ? 'rgba(255,255,255,0.7)' : 'rgba(0,0,0,0.7)',\n            color: this.props.reversed ? 'black' : 'white',\n            fontSize: '12px',\n            padding: '4px 8px',\n            borderRadius: '4px'\n          },\n          rightCaret: {\n            display: right ? 'block' : 'none',\n            color: this.props.reversed ? 'rgba(255,255,255,0.7)' : 'rgba(0,0,0,0.7)'\n          },\n          leftCaret: {\n            display: left ? 'block' : 'none',\n            color: this.props.reversed ? 'rgba(255,255,255,0.7)' : 'rgba(0,0,0,0.7)'\n          },\n          date: {\n            color: this.props.reversed ? 'rgba(0,0,0,0.7)' : 'rgba(255,255,255,0.7)',\n            fontSize: '12px',\n            lineHeight: '12px'\n          },\n          items: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          text: {\n            whiteSpace: 'nowrap',\n            fontSize: '12px',\n            lineHeight: '12px',\n            marginRight: 5\n          },\n          icon: {\n            marginRight: 5\n          },\n          value: {\n            fontSize: '12px',\n            flexShrink: 0,\n            lineHeight: '12px',\n            marginLeft: 5\n          }\n        },\n        hideTooltip: {\n          tooltipContainer: { display: 'none' }\n        }\n      }, {\n        showTooltip: this.state.showTooltip,\n        hideTooltip: !this.state.showTooltip\n      });\n\n      if (item) {\n        var metric = series.find(function (r) {\n          return r.id === item.series.id;\n        });\n        var formatter = metric && metric.tickFormatter || this.props.tickFormatter || function (v) {\n          return v;\n        };\n        var value = item.datapoint[2] ? item.datapoint[1] - item.datapoint[2] : item.datapoint[1];\n        tooltip = _react2.default.createElement(\n          'div',\n          { style: styles.tooltipContainer },\n          _react2.default.createElement('i', { className: 'fa fa-caret-left', style: styles.leftCaret }),\n          _react2.default.createElement(\n            'div',\n            { style: styles.tooltip },\n            _react2.default.createElement(\n              'div',\n              { style: styles.items },\n              _react2.default.createElement(\n                'div',\n                { style: styles.icon },\n                _react2.default.createElement('i', { className: 'fa fa-circle', style: { color: item.series.color } })\n              ),\n              _react2.default.createElement(\n                'div',\n                { style: styles.text },\n                item.series.label\n              ),\n              _react2.default.createElement(\n                'div',\n                { style: styles.value },\n                formatter(value)\n              )\n            ),\n            _react2.default.createElement(\n              'div',\n              { style: styles.date },\n              (0, _moment2.default)(item.datapoint[0]).format(this.props.dateFormat)\n            )\n          ),\n          _react2.default.createElement('i', { className: 'fa fa-caret-right', style: styles.rightCaret })\n        );\n      }\n\n      var params = {\n        crosshair: this.props.crosshair,\n        onPlotCreate: this.handlePlotCreate,\n        onBrush: this.props.onBrush,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseOver: this.handleMouseOver,\n        onDraw: this.handleDraw,\n        options: this.props.options,\n        plothover: this.props.plothover,\n        reversed: this.props.reversed,\n        series: this.props.series,\n        annotations: this.props.annotations,\n        showGrid: this.props.showGrid,\n        show: this.props.show,\n        tickFormatter: this.props.tickFormatter,\n        yaxes: this.props.yaxes\n      };\n\n      var annotations = this.state.annotations.map(this.renderAnnotations);\n      var axisLabelClass = 'rhythm_chart__axis-label';\n      if (this.props.reversed) {\n        axisLabelClass += ' reversed';\n      }\n\n      return _react2.default.createElement(\n        'div',\n        { ref: function ref(el) {\n            return _this3.container = el;\n          }, className: 'rhythm_chart__timeseries-container' },\n        tooltip,\n        annotations,\n        _react2.default.createElement(_flot_chart2.default, params),\n        _react2.default.createElement(\n          'div',\n          { className: axisLabelClass },\n          this.props.xaxisLabel\n        )\n      );\n    }\n  }]);\n\n  return TimeseriesChart;\n}(_react.Component);\n\nTimeseriesChart.defaultProps = {\n  showGrid: true,\n  dateFormat: 'll LTS'\n};\n\nTimeseriesChart.propTypes = {\n  crosshair: _propTypes2.default.bool,\n  onBrush: _propTypes2.default.func,\n  options: _propTypes2.default.object,\n  plothover: _propTypes2.default.func,\n  reversed: _propTypes2.default.bool,\n  series: _propTypes2.default.array,\n  annotations: _propTypes2.default.array,\n  show: _propTypes2.default.array,\n  tickFormatter: _propTypes2.default.func,\n  yaxes: _propTypes2.default.array,\n  showGrid: _propTypes2.default.bool,\n  xaxisLabel: _propTypes2.default.string,\n  dateFormat: _propTypes2.default.string\n};\n\nexports.default = TimeseriesChart;",null]}