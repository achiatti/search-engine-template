{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/filter_bar/filter_bar_click_handler.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/filter_bar/filter_bar_click_handler.js","mtime":1515552035000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FilterBarClickHandlerProvider = FilterBarClickHandlerProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _dedup_filters = require('./lib/dedup_filters');\n\nvar _uniq_filters = require('./lib/uniq_filters');\n\nvar _find_by_param = require('ui/utils/find_by_param');\n\nvar _add_filters_to_kuery = require('./lib/add_filters_to_kuery');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction FilterBarClickHandlerProvider(Notifier, Private) {\n  var addFiltersToKuery = Private(_add_filters_to_kuery.AddFiltersToKueryProvider);\n\n  return function ($state) {\n    return function (event, simulate) {\n      if (!$state) return;\n\n      var notify = new Notifier({\n        location: 'Filter bar'\n      });\n      var aggConfigResult = void 0;\n\n      // Hierarchical and tabular data set their aggConfigResult parameter\n      // differently because of how the point is rewritten between the two. So\n      // we need to check if the point.orig is set, if not use try the point.aggConfigResult\n      if (event.point.orig) {\n        aggConfigResult = event.point.orig.aggConfigResult;\n      } else if (event.point.values) {\n        aggConfigResult = (0, _find_by_param.findByParam)(event.point.values, 'aggConfigResult');\n      } else {\n        aggConfigResult = event.point.aggConfigResult;\n      }\n\n      if (aggConfigResult) {\n        var isLegendLabel = !!event.point.values;\n        var aggBuckets = _lodash2.default.filter(aggConfigResult.getPath(), { type: 'bucket' });\n\n        // For legend clicks, use the last bucket in the path\n        if (isLegendLabel) {\n          // series data has multiple values, use aggConfig on the first\n          // hierarchical data values is an object with the addConfig\n          var aggConfig = (0, _find_by_param.findByParam)(event.point.values, 'aggConfig');\n          aggBuckets = aggBuckets.filter(function (result) {\n            return result.aggConfig && result.aggConfig === aggConfig;\n          });\n        }\n\n        var filters = (0, _lodash2.default)(aggBuckets).map(function (result) {\n          try {\n            return result.createFilter();\n          } catch (e) {\n            if (!simulate) {\n              notify.warning(e.message);\n            }\n          }\n        }).filter(Boolean).value();\n\n        if (!filters.length) return;\n\n        if (event.negate) {\n          _lodash2.default.each(filters, function (filter) {\n            filter.meta = filter.meta || {};\n            filter.meta.negate = true;\n          });\n        }\n\n        filters = (0, _dedup_filters.dedupFilters)($state.filters, (0, _uniq_filters.uniqFilters)(filters), { negate: true });\n\n        if (!simulate) {\n          if ($state.query.language === 'lucene') {\n            $state.$newFilters = filters;\n          } else if ($state.query.language === 'kuery') {\n            addFiltersToKuery($state, filters).then(function () {\n              if (_lodash2.default.isFunction($state.save)) {\n                $state.save();\n              }\n            });\n          }\n        }\n        return filters;\n      }\n    };\n  };\n}",null]}