{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/input_control_vis/public/components/editor/control_editor.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/input_control_vis/public/components/editor/control_editor.js","mtime":1515552027000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ControlEditor = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _range_control_editor = require('./range_control_editor');\n\nvar _list_control_editor = require('./list_control_editor');\n\nvar _editor_utils = require('../../editor_utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ControlEditor = exports.ControlEditor = function (_Component) {\n  _inherits(ControlEditor, _Component);\n\n  function ControlEditor() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ControlEditor);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ControlEditor.__proto__ || Object.getPrototypeOf(ControlEditor)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      isEditorCollapsed: true\n    }, _this.handleToggleControlVisibility = function () {\n      _this.setState(function (prevState) {\n        return { isEditorCollapsed: !prevState.isEditorCollapsed };\n      });\n    }, _this.changeLabel = function (evt) {\n      _this.props.handleLabelChange(_this.props.controlIndex, evt);\n    }, _this.removeControl = function () {\n      _this.props.handleRemoveControl(_this.props.controlIndex);\n    }, _this.moveUpControl = function () {\n      _this.props.moveControl(_this.props.controlIndex, -1);\n    }, _this.moveDownControl = function () {\n      _this.props.moveControl(_this.props.controlIndex, 1);\n    }, _this.changeIndexPattern = function (evt) {\n      _this.props.handleIndexPatternChange(_this.props.controlIndex, evt);\n    }, _this.changeFieldName = function (evt) {\n      _this.props.handleFieldNameChange(_this.props.controlIndex, evt);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ControlEditor, [{\n    key: 'renderEditor',\n    value: function renderEditor() {\n      var controlEditor = null;\n      switch (this.props.controlParams.type) {\n        case 'list':\n          controlEditor = _react2.default.createElement(_list_control_editor.ListControlEditor, {\n            controlIndex: this.props.controlIndex,\n            controlParams: this.props.controlParams,\n            handleIndexPatternChange: this.changeIndexPattern,\n            handleFieldNameChange: this.changeFieldName,\n            getIndexPatterns: this.props.getIndexPatterns,\n            getIndexPattern: this.props.getIndexPattern,\n            handleNumberOptionChange: this.props.handleNumberOptionChange,\n            handleCheckboxOptionChange: this.props.handleCheckboxOptionChange\n          });\n          break;\n        case 'range':\n          controlEditor = _react2.default.createElement(_range_control_editor.RangeControlEditor, {\n            controlIndex: this.props.controlIndex,\n            controlParams: this.props.controlParams,\n            handleIndexPatternChange: this.changeIndexPattern,\n            handleFieldNameChange: this.changeFieldName,\n            getIndexPatterns: this.props.getIndexPatterns,\n            getIndexPattern: this.props.getIndexPattern,\n            handleNumberOptionChange: this.props.handleNumberOptionChange\n          });\n          break;\n        default:\n          throw new Error('Unhandled control editor type ' + this.props.controlParams.type);\n      }\n\n      var labelId = 'controlLabel' + this.props.controlIndex;\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          'div',\n          { className: 'kuiSideBarFormRow' },\n          _react2.default.createElement(\n            'label',\n            { className: 'kuiSideBarFormRow__label', htmlFor: labelId },\n            'Label'\n          ),\n          _react2.default.createElement(\n            'div',\n            { className: 'kuiSideBarFormRow__control kuiFieldGroupSection--wide' },\n            _react2.default.createElement('input', {\n              className: 'kuiTextInput',\n              id: labelId,\n              type: 'text',\n              value: this.props.controlParams.label,\n              onChange: this.changeLabel\n            })\n          )\n        ),\n        controlEditor\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var visibilityToggleClasses = (0, _classnames2.default)('fa', {\n        'fa-caret-right': !this.state.isEditorCollapsed,\n        'fa-caret-down': this.state.isEditorCollapsed\n      });\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'sidebar-item' },\n        _react2.default.createElement(\n          'div',\n          { className: 'vis-editor-agg-header' },\n          _react2.default.createElement(\n            'button',\n            {\n              'aria-label': this.state.isEditorCollapsed ? 'Close Editor' : 'Open Editor',\n              onClick: this.handleToggleControlVisibility,\n              type: 'button',\n              className: 'kuiButton kuiButton--primary kuiButton--small vis-editor-agg-header-toggle'\n            },\n            _react2.default.createElement('i', { 'aria-hidden': 'true', className: visibilityToggleClasses })\n          ),\n          _react2.default.createElement(\n            'span',\n            { className: 'vis-editor-agg-header-title ng-binding' },\n            (0, _editor_utils.getTitle)(this.props.controlParams, this.props.controlIndex)\n          ),\n          _react2.default.createElement(\n            'div',\n            { className: 'vis-editor-agg-header-controls kuiButtonGroup kuiButtonGroup--united' },\n            _react2.default.createElement(\n              'button',\n              {\n                'aria-label': 'Move control down',\n                type: 'button',\n                className: 'kuiButton kuiButton--small',\n                onClick: this.moveDownControl,\n                'data-test-subj': 'inputControlEditorMoveDownControl' + this.props.controlIndex\n              },\n              _react2.default.createElement('i', { 'aria-hidden': 'true', className: 'fa fa-chevron-down' })\n            ),\n            _react2.default.createElement(\n              'button',\n              {\n                'aria-label': 'Move control up',\n                type: 'button',\n                className: 'kuiButton kuiButton--small',\n                onClick: this.moveUpControl,\n                'data-test-subj': 'inputControlEditorMoveUpControl' + this.props.controlIndex\n              },\n              _react2.default.createElement('i', { 'aria-hidden': 'true', className: 'fa fa-chevron-up' })\n            ),\n            _react2.default.createElement(\n              'button',\n              {\n                'aria-label': 'Remove control',\n                className: 'kuiButton kuiButton--danger kuiButton--small',\n                type: 'button',\n                onClick: this.removeControl,\n                'data-test-subj': 'inputControlEditorRemoveControl' + this.props.controlIndex\n              },\n              _react2.default.createElement('i', { 'aria-hidden': 'true', className: 'fa fa-times' })\n            )\n          )\n        ),\n        this.state.isEditorCollapsed && this.renderEditor()\n      );\n    }\n  }]);\n\n  return ControlEditor;\n}(_react.Component);\n\nControlEditor.propTypes = {\n  controlIndex: _propTypes2.default.number.isRequired,\n  controlParams: _propTypes2.default.object.isRequired,\n  handleLabelChange: _propTypes2.default.func.isRequired,\n  moveControl: _propTypes2.default.func.isRequired,\n  handleRemoveControl: _propTypes2.default.func.isRequired,\n  handleIndexPatternChange: _propTypes2.default.func.isRequired,\n  handleFieldNameChange: _propTypes2.default.func.isRequired,\n  getIndexPatterns: _propTypes2.default.func.isRequired,\n  getIndexPattern: _propTypes2.default.func.isRequired,\n  handleCheckboxOptionChange: _propTypes2.default.func.isRequired,\n  handleNumberOptionChange: _propTypes2.default.func.isRequired\n};",null]}