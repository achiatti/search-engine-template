{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/components/vis_editor.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/components/vis_editor.js","mtime":1515552029000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _vis_editor_visualization = require('./vis_editor_visualization');\n\nvar _vis_editor_visualization2 = _interopRequireDefault(_vis_editor_visualization);\n\nvar _visualization = require('./visualization');\n\nvar _visualization2 = _interopRequireDefault(_visualization);\n\nvar _vis_picker = require('./vis_picker');\n\nvar _vis_picker2 = _interopRequireDefault(_vis_picker);\n\nvar _panel_config = require('./panel_config');\n\nvar _panel_config2 = _interopRequireDefault(_panel_config);\n\nvar _create_brush_handler = require('../lib/create_brush_handler');\n\nvar _create_brush_handler2 = _interopRequireDefault(_create_brush_handler);\n\nvar _lodash = require('lodash');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar VisEditor = function (_Component) {\n  _inherits(VisEditor, _Component);\n\n  function VisEditor(props) {\n    _classCallCheck(this, VisEditor);\n\n    var _this = _possibleConstructorReturn(this, (VisEditor.__proto__ || Object.getPrototypeOf(VisEditor)).call(this, props));\n\n    var appState = props.appState;\n\n    var reversed = (0, _lodash.get)(appState, 'options.darkTheme', false);\n    _this.state = { model: props.vis.params, dirty: false, autoApply: true, reversed: reversed };\n    _this.onBrush = (0, _create_brush_handler2.default)(props.vis.API.timeFilter);\n    _this.handleUiState = _this.handleUiState.bind(_this, props.vis);\n    _this.handleAppStateChange = _this.handleAppStateChange.bind(_this);\n    return _this;\n  }\n\n  _createClass(VisEditor, [{\n    key: 'handleUiState',\n    value: function handleUiState(vis) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      vis.uiStateVal.apply(vis, args);\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var appState = this.props.appState;\n\n      if (appState) {\n        this.appState = appState;\n        this.appState.on('save_with_changes', this.handleAppStateChange);\n      }\n    }\n  }, {\n    key: 'handleAppStateChange',\n    value: function handleAppStateChange() {\n      var reversed = (0, _lodash.get)(this.appState, 'options.darkTheme', false);\n      this.setState({ reversed: reversed });\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.appState) {\n        this.appState.off('save_with_changes', this.handleAppStateChange);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var handleChange = function handleChange(part) {\n        var nextModel = _extends({}, _this2.state.model, part);\n\n        _this2.props.vis.params = nextModel;\n        if (_this2.state.autoApply) {\n          _this2.props.vis.updateState();\n        }\n\n        _this2.setState({ model: nextModel, dirty: !_this2.state.autoApply });\n      };\n\n      var handleAutoApplyToggle = function handleAutoApplyToggle(part) {\n        _this2.setState({ autoApply: part.target.checked });\n      };\n\n      var handleCommit = function handleCommit() {\n        _this2.props.vis.updateState();\n        _this2.setState({ dirty: false });\n      };\n\n      if (!this.props.vis.isEditorMode()) {\n        if (!this.props.vis.params || !this.props.visData) return null;\n        var reversed = this.state.reversed;\n        return _react2.default.createElement(_visualization2.default, {\n          dateFormat: this.props.config.get('dateFormat'),\n          reversed: reversed,\n          onBrush: this.onBrush,\n          onUiState: this.handleUiState,\n          uiState: this.props.vis.getUiState(),\n          fields: this.props.vis.fields,\n          model: this.props.vis.params,\n          visData: this.props.visData\n        });\n      }\n\n      var model = this.state.model;\n\n\n      if (model && this.props.visData) {\n        return _react2.default.createElement(\n          'div',\n          { className: 'vis_editor' },\n          _react2.default.createElement(\n            'div',\n            { className: 'vis-editor-hide-for-reporting' },\n            _react2.default.createElement(_vis_picker2.default, { model: model, onChange: handleChange })\n          ),\n          _react2.default.createElement(_vis_editor_visualization2.default, {\n            dirty: this.state.dirty,\n            autoApply: this.state.autoApply,\n            model: model,\n            visData: this.props.visData,\n            onUiState: this.handleUiState,\n            uiState: this.props.vis.getUiState(),\n            onBrush: this.onBrush,\n            onCommit: handleCommit,\n            onToggleAutoApply: handleAutoApplyToggle,\n            onChange: handleChange,\n            title: this.props.vis.title,\n            description: this.props.vis.description,\n            dateFormat: this.props.config.get('dateFormat')\n          }),\n          _react2.default.createElement(\n            'div',\n            { className: 'vis-editor-hide-for-reporting' },\n            _react2.default.createElement(_panel_config2.default, {\n              fields: this.props.vis.fields,\n              model: model,\n              visData: this.props.visData,\n              dateFormat: this.props.config.get('dateFormat'),\n              onChange: handleChange\n            })\n          )\n        );\n      }\n\n      return null;\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.props.renderComplete();\n    }\n  }]);\n\n  return VisEditor;\n}(_react.Component);\n\nVisEditor.defaultProps = {\n  visData: {}\n};\n\nVisEditor.propTypes = {\n  vis: _propTypes2.default.object,\n  visData: _propTypes2.default.object,\n  appState: _propTypes2.default.object,\n  renderComplete: _propTypes2.default.func,\n  config: _propTypes2.default.object\n};\n\nexports.default = VisEditor;\nmodule.exports = exports['default'];",null]}