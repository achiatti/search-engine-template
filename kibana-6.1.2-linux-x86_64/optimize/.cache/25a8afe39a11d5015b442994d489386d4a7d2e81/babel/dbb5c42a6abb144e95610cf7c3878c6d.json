{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/saved_objects/saved_object.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/saved_objects/saved_object.js","mtime":1515552037000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SavedObject = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SavedObject = exports.SavedObject = function () {\n  function SavedObject(client) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        id = _ref.id,\n        type = _ref.type,\n        version = _ref.version,\n        attributes = _ref.attributes;\n\n    _classCallCheck(this, SavedObject);\n\n    this._client = client;\n    this.id = id;\n    this.type = type;\n    this.attributes = attributes || {};\n    this._version = version;\n  }\n\n  _createClass(SavedObject, [{\n    key: 'get',\n    value: function get(key) {\n      return _lodash2.default.get(this.attributes, key);\n    }\n  }, {\n    key: 'set',\n    value: function set(key, value) {\n      return _lodash2.default.set(this.attributes, key, value);\n    }\n  }, {\n    key: 'has',\n    value: function has(key) {\n      return _lodash2.default.has(this.attributes, key);\n    }\n  }, {\n    key: 'save',\n    value: function save() {\n      if (this.id) {\n        return this._client.update(this.type, this.id, this.attributes);\n      } else {\n        return this._client.create(this.type, this.attributes);\n      }\n    }\n  }, {\n    key: 'delete',\n    value: function _delete() {\n      return this._client.delete(this.type, this.id);\n    }\n  }]);\n\n  return SavedObject;\n}();",null]}