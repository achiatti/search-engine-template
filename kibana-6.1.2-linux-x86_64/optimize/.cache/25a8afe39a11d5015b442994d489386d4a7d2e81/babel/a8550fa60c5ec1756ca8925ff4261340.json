{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/directives/inequality.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/directives/inequality.js","mtime":1515552035000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nvar _modules = require('ui/modules');\n\nfunction makeDirectiveDef(id, compare) {\n  return function ($parse) {\n    return {\n      require: 'ngModel',\n      link: function link($scope, $el, $attr, ngModel) {\n        var getBound = function getBound() {\n          return $parse($attr[id])();\n        };\n        var defaultVal = {\n          'greaterThan': -Infinity,\n          'greaterOrEqualThan': -Infinity,\n          'lessThan': Infinity\n        }[id];\n\n        ngModel.$parsers.push(validate);\n        ngModel.$formatters.push(validate);\n\n        $scope.$watch(getBound, function () {\n          validate(ngModel.$viewValue);\n        });\n\n        function validate(val) {\n          var bound = !isNaN(getBound()) ? +getBound() : defaultVal;\n          var valid = !isNaN(bound) && !isNaN(val) && compare(val, bound);\n          ngModel.$setValidity(id, valid);\n          return val;\n        }\n      }\n    };\n  };\n}\n\n_modules.uiModules.get('kibana').directive('greaterThan', makeDirectiveDef('greaterThan', function (a, b) {\n  return a > b;\n})).directive('lessThan', makeDirectiveDef('lessThan', function (a, b) {\n  return a < b;\n})).directive('greaterOrEqualThan', makeDirectiveDef('greaterOrEqualThan', function (a, b) {\n  return a >= b;\n}));",null]}