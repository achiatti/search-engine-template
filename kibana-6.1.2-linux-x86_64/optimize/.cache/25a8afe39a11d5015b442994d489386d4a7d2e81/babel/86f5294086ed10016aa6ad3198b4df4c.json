{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/time_buckets/calc_es_interval.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/time_buckets/calc_es_interval.js","mtime":1515552038000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TimeBucketsCalcEsIntervalProvider = TimeBucketsCalcEsIntervalProvider;\n\nvar _datemath = require('@elastic/datemath');\n\nvar _datemath2 = _interopRequireDefault(_datemath);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction TimeBucketsCalcEsIntervalProvider() {\n\n  var unitsDesc = _datemath2.default.unitsDesc;\n  var largeMax = unitsDesc.indexOf('M');\n\n  /**\n   * Convert a moment.duration into an es\n   * compatible expression, and provide\n   * associated metadata\n   *\n   * @param  {moment.duration} duration\n   * @return {object}\n   */\n  function esDuration(duration) {\n    for (var i = 0; i < unitsDesc.length; i++) {\n      var unit = unitsDesc[i];\n      var val = duration.as(unit);\n      // find a unit that rounds neatly\n      if (val >= 1 && Math.floor(val) === val) {\n\n        // if the unit is \"large\", like years, but\n        // isn't set to 1 ES will puke. So keep going until\n        // we get out of the \"large\" units\n        if (i <= largeMax && val !== 1) {\n          continue;\n        }\n\n        return {\n          value: val,\n          unit: unit,\n          expression: val + unit\n        };\n      }\n    }\n\n    var ms = duration.as('ms');\n    return {\n      value: ms,\n      unit: 'ms',\n      expression: ms + 'ms'\n    };\n  }\n\n  return esDuration;\n}",null]}