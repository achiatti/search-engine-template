{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/dashboard/panel/panel_header/panel_header_container.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/dashboard/panel/panel_header/panel_header_container.js","mtime":1515552028000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PanelHeaderContainer = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = require('react-redux');\n\nvar _panel_header = require('./panel_header');\n\nvar _panel_options_menu_container = require('./panel_options_menu_container');\n\nvar _panel_maximize_icon = require('./panel_maximize_icon');\n\nvar _panel_minimize_icon = require('./panel_minimize_icon');\n\nvar _dashboard_view_mode = require('../../dashboard_view_mode');\n\nvar _actions = require('../../actions');\n\nvar _selectors = require('../../selectors');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar mapStateToProps = function mapStateToProps(_ref, _ref2) {\n  var dashboard = _ref.dashboard;\n  var panelId = _ref2.panelId;\n\n  var embeddable = (0, _selectors.getEmbeddable)(dashboard, panelId);\n  var panel = (0, _selectors.getPanel)(dashboard, panelId);\n  var embeddableTitle = embeddable ? embeddable.title : '';\n  return {\n    title: panel.title === undefined ? embeddableTitle : panel.title,\n    isExpanded: (0, _selectors.getMaximizedPanelId)(dashboard) === panelId,\n    isViewOnlyMode: (0, _selectors.getFullScreenMode)(dashboard) || (0, _selectors.getViewMode)(dashboard) === _dashboard_view_mode.DashboardViewMode.VIEW,\n    hidePanelTitles: (0, _selectors.getHidePanelTitles)(dashboard)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, _ref3) {\n  var panelId = _ref3.panelId;\n  return {\n    onMaximizePanel: function onMaximizePanel() {\n      return dispatch((0, _actions.maximizePanel)(panelId));\n    },\n    onMinimizePanel: function onMinimizePanel() {\n      return dispatch((0, _actions.minimizePanel)());\n    }\n  };\n};\n\nvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n  var isExpanded = stateProps.isExpanded,\n      isViewOnlyMode = stateProps.isViewOnlyMode,\n      title = stateProps.title,\n      hidePanelTitles = stateProps.hidePanelTitles;\n  var onMaximizePanel = dispatchProps.onMaximizePanel,\n      onMinimizePanel = dispatchProps.onMinimizePanel;\n  var panelId = ownProps.panelId,\n      embeddableFactory = ownProps.embeddableFactory;\n\n  var actions = void 0;\n\n  if (isViewOnlyMode) {\n    actions = isExpanded ? _react2.default.createElement(_panel_minimize_icon.PanelMinimizeIcon, { onMinimize: onMinimizePanel }) : _react2.default.createElement(_panel_maximize_icon.PanelMaximizeIcon, { onMaximize: onMaximizePanel });\n  } else {\n    actions = _react2.default.createElement(_panel_options_menu_container.PanelOptionsMenuContainer, {\n      panelId: panelId,\n      embeddableFactory: embeddableFactory\n    });\n  }\n\n  return {\n    title: title,\n    actions: actions,\n    isViewOnlyMode: isViewOnlyMode,\n    hidePanelTitles: hidePanelTitles\n  };\n};\n\nvar PanelHeaderContainer = exports.PanelHeaderContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(_panel_header.PanelHeader);\n\nPanelHeaderContainer.propTypes = {\n  panelId: _propTypes2.default.string.isRequired,\n  /**\n   * @type {EmbeddableFactory}\n   */\n  embeddableFactory: _propTypes2.default.shape({\n    destroy: _propTypes2.default.func.isRequired,\n    render: _propTypes2.default.func.isRequired,\n    addDestroyEmeddable: _propTypes2.default.func.isRequired\n  }).isRequired\n};",null]}