{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/vislib/components/zero_injection/inject_zeros.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/vislib/components/zero_injection/inject_zeros.js","mtime":1515552039000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VislibComponentsZeroInjectionInjectZerosProvider = VislibComponentsZeroInjectionInjectZerosProvider;\n\nvar _ordered_x_keys = require('./ordered_x_keys');\n\nvar _zero_filled_array = require('./zero_filled_array');\n\nvar _zero_fill_data_array = require('./zero_fill_data_array');\n\nfunction VislibComponentsZeroInjectionInjectZerosProvider(Private) {\n\n  var orderXValues = Private(_ordered_x_keys.VislibComponentsZeroInjectionOrderedXKeysProvider);\n  var createZeroFilledArray = Private(_zero_filled_array.VislibComponentsZeroInjectionZeroFilledArrayProvider);\n  var zeroFillDataArray = Private(_zero_fill_data_array.VislibComponentsZeroInjectionZeroFillDataArrayProvider);\n\n  /*\n   * A Kibana data object may have multiple series with different array lengths.\n   * This proves an impediment to stacking in the visualization library.\n   * Therefore, zero values must be injected wherever these arrays do not line up.\n   * That is, each array must have the same x values with zeros filled in where the\n   * x values were added.\n   *\n   * This function and its helper functions accepts a Kibana data object\n   * and injects zeros where needed.\n   */\n\n  return function (obj, data) {\n    var orderBucketsBySum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var keys = orderXValues(data, orderBucketsBySum);\n\n    obj.forEach(function (series) {\n      var zeroArray = createZeroFilledArray(keys, series.label);\n      series.values = zeroFillDataArray(zeroArray, series.values);\n    });\n\n    return obj;\n  };\n}",null]}