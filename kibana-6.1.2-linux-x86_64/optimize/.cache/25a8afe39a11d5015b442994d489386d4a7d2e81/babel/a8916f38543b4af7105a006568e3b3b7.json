{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/utils/diff_object.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/utils/diff_object.js","mtime":1515552038000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.applyDiff = applyDiff;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction applyDiff(target, source) {\n\n  var diff = {};\n\n  /**\n   * Filter the private vars\n   * @param {string} key The keys\n   * @returns {boolean}\n   */\n  var filterPrivateAndMethods = function filterPrivateAndMethods(obj) {\n    return function (key) {\n      if (_lodash2.default.isFunction(obj[key])) return false;\n      if (key.charAt(0) === '$') return false;\n      return key.charAt(0) !== '_';\n    };\n  };\n\n  var targetKeys = _lodash2.default.keys(target).filter(filterPrivateAndMethods(target));\n  var sourceKeys = _lodash2.default.keys(source).filter(filterPrivateAndMethods(source));\n\n  // Find the keys to be removed\n  diff.removed = _lodash2.default.difference(targetKeys, sourceKeys);\n\n  // Find the keys to be added\n  diff.added = _lodash2.default.difference(sourceKeys, targetKeys);\n\n  // Find the keys that will be changed\n  diff.changed = _lodash2.default.filter(sourceKeys, function (key) {\n    return !_angular2.default.equals(target[key], source[key]);\n  });\n\n  // Make a list of all the keys that are changing\n  diff.keys = _lodash2.default.union(diff.changed, diff.removed, diff.added);\n\n  // Remove all the keys\n  _lodash2.default.each(diff.removed, function (key) {\n    delete target[key];\n  });\n\n  // Assign the changed to the source to the target\n  _lodash2.default.assign(target, _lodash2.default.pick(source, diff.changed));\n  // Assign the added to the source to the target\n  _lodash2.default.assign(target, _lodash2.default.pick(source, diff.added));\n\n  return diff;\n}",null]}