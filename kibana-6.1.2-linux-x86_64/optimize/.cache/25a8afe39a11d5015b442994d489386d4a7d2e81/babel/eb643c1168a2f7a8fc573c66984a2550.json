{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/directives/validate_agg.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/directives/validate_agg.js","mtime":1515552035000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nvar _modules = require('ui/modules');\n\n_modules.uiModules.get('kibana').directive('validateAgg', function () {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    scope: {\n      'ngModel': '=',\n      'agg': '='\n    },\n    link: function link($scope, elem, attr, ngModel) {\n      function validateAgg(aggValue) {\n        if (aggValue == null || aggValue === 'custom') {\n          ngModel.$setValidity('aggInput', true);\n          return aggValue;\n        }\n\n        try {\n          $scope.agg.params.customMetric = null;\n          $scope.agg.params.metricAgg = aggValue;\n          $scope.agg.makeLabel();\n          ngModel.$setValidity('aggInput', true);\n        } catch (e) {\n          ngModel.$setValidity('aggInput', false);\n        }\n\n        return aggValue;\n      }\n\n      // From User\n      ngModel.$parsers.unshift(validateAgg);\n\n      // To user\n      ngModel.$formatters.unshift(validateAgg);\n    }\n  };\n});",null]}