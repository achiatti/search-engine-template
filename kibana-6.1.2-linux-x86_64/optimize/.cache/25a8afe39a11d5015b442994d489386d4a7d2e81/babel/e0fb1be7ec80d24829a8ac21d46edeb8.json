{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/components/vis_editor_visualization.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/components/vis_editor_visualization.js","mtime":1515552029000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _services = require('ui_framework/services');\n\nvar _visualization = require('./visualization');\n\nvar _visualization2 = _interopRequireDefault(_visualization);\n\nvar _reactToggle = require('react-toggle');\n\nvar _reactToggle2 = _interopRequireDefault(_reactToggle);\n\nrequire('react-toggle/style.css');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MIN_CHART_HEIGHT = 250;\n\nvar VisEditorVisualization = function (_Component) {\n  _inherits(VisEditorVisualization, _Component);\n\n  function VisEditorVisualization(props) {\n    _classCallCheck(this, VisEditorVisualization);\n\n    var _this = _possibleConstructorReturn(this, (VisEditorVisualization.__proto__ || Object.getPrototypeOf(VisEditorVisualization)).call(this, props));\n\n    _this.state = {\n      height: MIN_CHART_HEIGHT,\n      dragging: false\n    };\n\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.onSizeHandleKeyDown = _this.onSizeHandleKeyDown.bind(_this);\n    return _this;\n  }\n\n  _createClass(VisEditorVisualization, [{\n    key: 'handleMouseDown',\n    value: function handleMouseDown() {\n      this.setState({ dragging: true });\n    }\n  }, {\n    key: 'handleMouseUp',\n    value: function handleMouseUp() {\n      this.setState({ dragging: false });\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.handleMouseMove = function (event) {\n        if (_this2.state.dragging) {\n          _this2.setState(function (prevState) {\n            return {\n              height: Math.max(MIN_CHART_HEIGHT, prevState.height + event.movementY)\n            };\n          });\n        }\n      };\n      window.addEventListener('mousemove', this.handleMouseMove);\n      window.addEventListener('mouseup', this.handleMouseUp);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('mousemove', this.handleMouseMove);\n      window.removeEventListener('mouseup', this.handleMouseUp);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var el = (0, _reactDom.findDOMNode)(this.visDiv);\n      el.setAttribute('render-counter', 'disabled');\n    }\n\n    /**\n     * Resize the chart height when pressing up/down while the drag handle\n     * for resizing has the focus.\n     * We use 15px steps to do the scaling and make sure the chart has at least its\n     * defined minimum width (MIN_CHART_HEIGHT).\n     */\n\n  }, {\n    key: 'onSizeHandleKeyDown',\n    value: function onSizeHandleKeyDown(ev) {\n      var keyCode = ev.keyCode;\n\n      if (keyCode === _services.keyCodes.UP || keyCode === _services.keyCodes.DOWN) {\n        ev.preventDefault();\n        this.setState(function (prevState) {\n          var newHeight = prevState.height + (keyCode === _services.keyCodes.UP ? -15 : 15);\n          return {\n            height: Math.max(MIN_CHART_HEIGHT, newHeight)\n          };\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          dirty = _props.dirty,\n          autoApply = _props.autoApply;\n\n      var style = { height: this.state.height };\n      if (this.state.dragging) {\n        style.userSelect = 'none';\n      }\n\n      var applyButtonClassName = dirty ? 'thor__button-solid-default' : 'thor__button-outlined-grayLight';\n      var applyMessage = 'The latest changes have been applied.';\n      if (dirty) applyMessage = 'The changes to this visualization have not been applied.';\n      if (autoApply) applyMessage = 'The changes will be automatically applied.';\n      var applyButton = _react2.default.createElement(\n        'div',\n        { className: 'vis_editor__dirty_controls' },\n        _react2.default.createElement(\n          'label',\n          {\n            className: 'vis_editor__dirty_controls-toggle-label',\n            id: 'tsvbAutoApply',\n            htmlFor: 'tsvbAutoApplyInput'\n          },\n          'Auto Apply'\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'vis_editor__dirty_controls-toggle' },\n          _react2.default.createElement(_reactToggle2.default, {\n            id: 'tsvbAutoApplyInput',\n            defaultChecked: autoApply,\n            icons: false,\n            onChange: this.props.onToggleAutoApply\n          })\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'vis_editor__dirty_controls-button' },\n          _react2.default.createElement(\n            'button',\n            {\n              disabled: !dirty,\n              onClick: this.props.onCommit,\n              className: applyButtonClassName + ' md'\n            },\n            _react2.default.createElement('i', { className: 'fa fa-play' }),\n            ' Apply Changes'\n          )\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'vis_editor__dirty_controls-message' + (dirty ? '-dirty' : '') },\n          applyMessage\n        )\n      );\n\n      var visBackgroundColor = '#FFF';\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          'div',\n          {\n            style: style,\n            ref: function ref(el) {\n              return _this3.visDiv = el;\n            },\n            className: 'vis_editor__visualization',\n            'data-shared-items-container': true,\n            'data-shared-item': true,\n            'data-title': this.props.title,\n            'data-description': this.props.description\n          },\n          _react2.default.createElement(_visualization2.default, {\n            backgroundColor: visBackgroundColor,\n            className: 'dashboard__visualization',\n            dateFormat: this.props.dateFormat,\n            model: this.props.model,\n            onBrush: this.props.onBrush,\n            onChange: this.handleChange,\n            onUiState: this.props.onUiState,\n            uiState: this.props.uiState,\n            visData: this.props.visData\n          })\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'vis-editor-hide-for-reporting' },\n          applyButton,\n          _react2.default.createElement(\n            'button',\n            {\n              className: 'vis_editor__visualization-draghandle',\n              onMouseDown: this.handleMouseDown,\n              onMouseUp: this.handleMouseUp,\n              onKeyDown: this.onSizeHandleKeyDown,\n              'aria-label': 'Press up/down to adjust the chart size'\n            },\n            _react2.default.createElement('i', { className: 'fa fa-ellipsis-h' })\n          )\n        )\n      );\n    }\n  }]);\n\n  return VisEditorVisualization;\n}(_react.Component);\n\nVisEditorVisualization.propTypes = {\n  model: _propTypes2.default.object,\n  onBrush: _propTypes2.default.func,\n  onChange: _propTypes2.default.func,\n  onCommit: _propTypes2.default.func,\n  onUiState: _propTypes2.default.func,\n  uiState: _propTypes2.default.object,\n  onToggleAutoApply: _propTypes2.default.func,\n  visData: _propTypes2.default.object,\n  dirty: _propTypes2.default.bool,\n  autoApply: _propTypes2.default.bool,\n  dateFormat: _propTypes2.default.string\n};\n\nexports.default = VisEditorVisualization;\nmodule.exports = exports['default'];",null]}