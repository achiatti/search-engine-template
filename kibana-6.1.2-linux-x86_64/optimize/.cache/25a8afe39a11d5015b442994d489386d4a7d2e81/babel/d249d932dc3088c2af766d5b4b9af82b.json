{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_types/metrics/lib/sibling_pipeline_agg_helper.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/agg_types/metrics/lib/sibling_pipeline_agg_helper.js","mtime":1515552034000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SiblingPipelineAggHelperProvider = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _agg_config = require('ui/vis/agg_config');\n\nvar _schemas = require('ui/vis/editors/default/schemas');\n\nvar _sibling_pipeline_agg_controller = require('./sibling_pipeline_agg_controller');\n\nvar _sibling_pipeline_agg_writter = require('./sibling_pipeline_agg_writter');\n\nvar _sub_metric = require('ui/agg_types/controls/sub_metric.html');\n\nvar _sub_metric2 = _interopRequireDefault(_sub_metric);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SiblingPipelineAggHelperProvider = exports.SiblingPipelineAggHelperProvider = function SiblingPipelineAggHelperProvider(Private) {\n\n  var AggConfig = Private(_agg_config.VisAggConfigProvider);\n  var Schemas = Private(_schemas.VisSchemasProvider);\n\n  var metricAggFilter = ['!top_hits', '!percentiles', '!percentile_ranks', '!median', '!std_dev', '!sum_bucket', '!avg_bucket', '!min_bucket', '!max_bucket', '!derivative', '!moving_avg', '!serial_diff', '!cumulative_sum'];\n\n  var metricAggSchema = new Schemas([{\n    group: 'none',\n    name: 'metricAgg',\n    title: 'Metric Agg',\n    aggFilter: metricAggFilter\n  }]).all[0];\n\n  var bucketAggFilter = [];\n  var bucketAggSchema = new Schemas([{\n    group: 'none',\n    title: 'Bucket Agg',\n    name: 'bucketAgg',\n    aggFilter: bucketAggFilter\n  }]).all[0];\n\n  return {\n    subtype: 'Sibling Pipeline Aggregations',\n    params: function params() {\n      return [{\n        name: 'customBucket',\n        type: AggConfig,\n        default: null,\n        serialize: function serialize(customMetric) {\n          return customMetric.toJSON();\n        },\n        deserialize: function deserialize(state, agg) {\n          return this.makeAgg(agg, state);\n        },\n        makeAgg: function makeAgg(agg, state) {\n          state = state || { type: 'date_histogram' };\n          state.schema = bucketAggSchema;\n          var orderAgg = new AggConfig(agg.vis, state);\n          orderAgg.id = agg.id + '-bucket';\n          return orderAgg;\n        },\n        editor: _sub_metric2.default,\n        controller: (0, _sibling_pipeline_agg_controller.siblingPipelineAggController)('customBucket'),\n        write: _lodash2.default.noop\n      }, {\n        name: 'customMetric',\n        type: AggConfig,\n        default: null,\n        serialize: function serialize(customMetric) {\n          return customMetric.toJSON();\n        },\n        deserialize: function deserialize(state, agg) {\n          return this.makeAgg(agg, state);\n        },\n        makeAgg: function makeAgg(agg, state) {\n          state = state || { type: 'count' };\n          state.schema = metricAggSchema;\n          var orderAgg = new AggConfig(agg.vis, state);\n          orderAgg.id = agg.id + '-metric';\n          return orderAgg;\n        },\n        editor: _sub_metric2.default,\n        controller: (0, _sibling_pipeline_agg_controller.siblingPipelineAggController)('customMetric'),\n        write: _sibling_pipeline_agg_writter.siblingPipelineAggWritter\n      }];\n    },\n    getFormat: function getFormat(agg) {\n      return agg.params.customMetric.type.getFormat(agg.params.customMetric);\n    }\n  };\n};",null]}