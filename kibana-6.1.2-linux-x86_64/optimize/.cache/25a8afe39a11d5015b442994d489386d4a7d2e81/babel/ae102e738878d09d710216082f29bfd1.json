{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/console/public/src/settings.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/console/public/src/settings.js","mtime":1515552026000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAutocomplete = getAutocomplete;\nexports.applyCurrentSettings = applyCurrentSettings;\nexports.getCurrentSettings = getCurrentSettings;\nexports.updateSettings = updateSettings;\n\nvar _input = require('./input');\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _output = require('./output');\n\nvar _output2 = _interopRequireDefault(_output);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar storage = require('./storage');\n\nfunction getFontSize() {\n  return storage.get('font_size', 14);\n}\n\nfunction setFontSize(size) {\n  storage.set('font_size', size);\n  applyCurrentSettings();\n  return true;\n}\n\nfunction getWrapMode() {\n  return storage.get('wrap_mode', true);\n}\n\nfunction setWrapMode(mode) {\n  storage.set('wrap_mode', mode);\n  applyCurrentSettings();\n  return true;\n}\n\nfunction getAutocomplete() {\n  return storage.get('autocomplete_settings', { fields: true, indices: true });\n}\n\nfunction setAutocomplete(settings) {\n  storage.set('autocomplete_settings', settings);\n  return true;\n}\n\nfunction applyCurrentSettings(editor) {\n  if (typeof editor === 'undefined') {\n    applyCurrentSettings((0, _input2.default)());\n    applyCurrentSettings((0, _output2.default)());\n  }\n  if (editor) {\n    editor.getSession().setUseWrapMode(getWrapMode());\n    editor.$el.css('font-size', getFontSize() + 'px');\n  }\n}\n\nfunction getCurrentSettings() {\n  return {\n    autocomplete: getAutocomplete(),\n    wrapMode: getWrapMode(),\n    fontSize: parseFloat(getFontSize())\n  };\n}\n\nfunction updateSettings(_ref) {\n  var fontSize = _ref.fontSize,\n      wrapMode = _ref.wrapMode,\n      autocomplete = _ref.autocomplete;\n\n  setFontSize(fontSize);\n  setWrapMode(wrapMode);\n  setAutocomplete(autocomplete);\n  (0, _input2.default)().focus();\n  return getCurrentSettings();\n}",null]}