{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/console/public/src/sense_editor/mode/script.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/console/public/src/sense_editor/mode/script.js","mtime":1515552026000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScriptMode = ScriptMode;\nvar acequire = require('acequire');\nrequire('ace');\nrequire('ace/mode-json');\n\nvar oop = acequire(\"ace/lib/oop\");\nvar TextMode = acequire(\"ace/mode/text\").Mode;\nvar MatchingBraceOutdent = acequire(\"ace/mode/matching_brace_outdent\").MatchingBraceOutdent;\nvar CstyleBehaviour = acequire(\"ace/mode/behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = acequire(\"ace/mode/folding/cstyle\").FoldMode;\nacequire(\"ace/tokenizer\");\n\nvar ScriptHighlightRules = require(\"./script_highlight_rules\").ScriptHighlightRules;\n\nfunction ScriptMode() {\n  this.$outdent = new MatchingBraceOutdent();\n  this.$behaviour = new CstyleBehaviour();\n  this.foldingRules = new CStyleFoldMode();\n}\n\noop.inherits(ScriptMode, TextMode);\n\n(function () {\n\n  this.HighlightRules = ScriptHighlightRules;\n\n  this.getNextLineIndent = function (state, line, tab) {\n    var indent = this.$getIndent(line);\n    var match = line.match(/^.*[\\{\\[]\\s*$/);\n    if (match) {\n      indent += tab;\n    }\n\n    return indent;\n  };\n\n  this.checkOutdent = function (state, line, input) {\n    return this.$outdent.checkOutdent(line, input);\n  };\n\n  this.autoOutdent = function (state, doc, row) {\n    this.$outdent.autoOutdent(doc, row);\n  };\n\n  // this.createWorker = function (session) {\n  //   var worker = new WorkerClient([\"ace\", \"sense_editor\"], \"sense_editor/mode/worker\", \"SenseWorker\");\n  //   worker.attachToDocument(session.getDocument());\n\n\n  //   worker.on(\"error\", function (e) {\n  //     session.setAnnotations([e.data]);\n  //   });\n\n  //   worker.on(\"ok\", function (anno) {\n  //     session.setAnnotations(anno.data);\n  //   });\n\n  //   return worker;\n  // };\n\n}).call(ScriptMode.prototype);",null]}