{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/courier/fetch/call_response_handlers.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/courier/fetch/call_response_handlers.js","mtime":1515552035000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CallResponseHandlersProvider = CallResponseHandlersProvider;\n\nvar _errors = require('ui/errors');\n\nvar _req_status = require('./req_status');\n\nvar _notifier = require('./notifier');\n\nfunction CallResponseHandlersProvider(Private, Promise) {\n  var ABORTED = _req_status.RequestStatus.ABORTED;\n  var INCOMPLETE = _req_status.RequestStatus.INCOMPLETE;\n\n  function callResponseHandlers(requests, responses) {\n    return Promise.map(requests, function (req, i) {\n      if (req === ABORTED || req.aborted) {\n        return ABORTED;\n      }\n\n      var resp = responses[i];\n\n      if (resp.timed_out) {\n        _notifier.courierNotifier.warning(new _errors.SearchTimeout());\n      }\n\n      if (resp._shards && resp._shards.failed) {\n        _notifier.courierNotifier.warning(new _errors.ShardFailure(resp));\n      }\n\n      function progress() {\n        if (req.isIncomplete()) {\n          return INCOMPLETE;\n        }\n\n        req.complete();\n        return resp;\n      }\n\n      if (resp.error) {\n        if (req.filterError(resp)) {\n          return progress();\n        } else {\n          return req.handleFailure(new _errors.RequestFailure(null, resp));\n        }\n      }\n\n      return Promise.try(function () {\n        return req.handleResponse(resp);\n      }).then(progress);\n    });\n  }\n\n  return callResponseHandlers;\n}",null]}