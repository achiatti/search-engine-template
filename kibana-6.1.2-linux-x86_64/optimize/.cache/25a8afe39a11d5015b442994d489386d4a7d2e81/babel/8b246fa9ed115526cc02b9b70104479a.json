{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/common/field_formats/types/color.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/common/field_formats/types/color.js","mtime":1515552206432},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];var _n = true;var _d = false;var _e = undefined;try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;_e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }return _arr;\n  }return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexports.createColorFormat = createColorFormat;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _as_pretty_string = require('../../utils/as_pretty_string');\n\nvar _color_default = require('./color_default');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nvar convertTemplate = _lodash2.default.template('<span style=\"<%- style %>\"><%- val %></span>');\n\nfunction createColorFormat(FieldFormat) {\n  var ColorFormat = function (_FieldFormat) {\n    _inherits(ColorFormat, _FieldFormat);\n\n    function ColorFormat() {\n      _classCallCheck(this, ColorFormat);\n\n      return _possibleConstructorReturn(this, (ColorFormat.__proto__ || Object.getPrototypeOf(ColorFormat)).apply(this, arguments));\n    }\n\n    _createClass(ColorFormat, [{\n      key: \"getParamDefaults\",\n      value: function getParamDefaults() {\n        return {\n          fieldType: null, // populated by editor, see controller below\n          colors: [_lodash2.default.cloneDeep(_color_default.DEFAULT_COLOR)]\n        };\n      }\n    }, {\n      key: \"findColorRuleForVal\",\n      value: function findColorRuleForVal(val) {\n        switch (this.param('fieldType')) {\n          case 'string':\n            return _lodash2.default.findLast(this.param('colors'), function (colorParam) {\n              return new RegExp(colorParam.regex).test(val);\n            });\n\n          case 'number':\n            return _lodash2.default.findLast(this.param('colors'), function (_ref) {\n              var range = _ref.range;\n\n              if (!range) return;\n\n              var _range$split = range.split(':'),\n                  _range$split2 = _slicedToArray(_range$split, 2);\n\n              var start = _range$split2[0],\n                  end = _range$split2[1];\n\n              return val >= Number(start) && val <= Number(end);\n            });\n\n          default:\n            return null;\n        }\n      }\n    }]);\n\n    return ColorFormat;\n  }(FieldFormat);\n\n  ColorFormat.id = 'color';\n  ColorFormat.title = 'Color';\n  ColorFormat.fieldType = ['number', 'string'];\n  ColorFormat.prototype._convert = {\n    html: function html(val) {\n      var color = this.findColorRuleForVal(val);\n      if (!color) return _lodash2.default.escape((0, _as_pretty_string.asPrettyString)(val));\n\n      var style = '';\n      if (color.text) style += \"color: \" + color.text + \";\";\n      if (color.background) style += \"background-color: \" + color.background + \";\";\n      return convertTemplate({ val: val, style: style });\n    }\n  };\n\n  return ColorFormat;\n}",null]}