{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/components/lib/tick_formatter.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/metrics/public/components/lib/tick_formatter.js","mtime":1515552029000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _numeral = require('@elastic/numeral');\n\nvar _numeral2 = _interopRequireDefault(_numeral);\n\nvar _handlebars = require('handlebars/dist/handlebars');\n\nvar _handlebars2 = _interopRequireDefault(_handlebars);\n\nvar _durations = require('./durations');\n\nvar _lodash = require('lodash');\n\nvar _duration = require('../../../../kibana/common/field_formats/types/duration');\n\nvar _field_format = require('../../../../../ui/field_formats/field_format');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DurationFormat = (0, _duration.createDurationFormat)(_field_format.FieldFormat);\n\nvar formatLookup = {\n  'bytes': '0.0b',\n  'number': '0,0.[00]',\n  'percent': '0.[00]%'\n};\n\nvar durationsLookup = _durations.durationInputOptions.reduce(function (acc, row) {\n  acc[row.value] = row.label;\n  return acc;\n}, {});\n\nexports.default = function () {\n  var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '0,0.[00]';\n  var template = arguments[1];\n\n  if (!template) template = '{{value}}';\n  var render = _handlebars2.default.compile(template);\n  var durationFormatTest = /[pnumshdwMY]+,[pnumshdwMY]+,\\d+/;\n  return function (val) {\n    var formatString = formatLookup[format] || format;\n    var value = void 0;\n    if (!(0, _lodash.isNumber)(val)) {\n      value = 0;\n    } else {\n      if (durationFormatTest.test(format)) {\n        var _format$split = format.split(','),\n            _format$split2 = _slicedToArray(_format$split, 3),\n            from = _format$split2[0],\n            to = _format$split2[1],\n            decimals = _format$split2[2];\n\n        var inputFormat = durationsLookup[from];\n        var outputFormat = 'as' + (0, _lodash.capitalize)(durationsLookup[to]);\n        var formatter = new DurationFormat({\n          inputFormat: inputFormat,\n          outputFormat: outputFormat,\n          outputPrecision: decimals\n        });\n        value = formatter.convert(val, 'text');\n      } else {\n        try {\n          value = (0, _numeral2.default)(val).format(formatString);\n        } catch (e) {\n          value = val;\n        }\n      }\n    }\n    try {\n      return render({ value: value });\n    } catch (e) {\n      return String(value);\n    }\n  };\n};\n\nmodule.exports = exports['default'];",null]}