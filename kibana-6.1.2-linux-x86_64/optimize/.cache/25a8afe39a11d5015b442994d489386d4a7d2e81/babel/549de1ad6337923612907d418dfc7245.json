{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/context/api/anchor.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/context/api/anchor.js","mtime":1515552028000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchAnchorProvider = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _search_source = require('ui/courier/data_source/search_source');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction fetchAnchorProvider(courier, Private) {\n  var SearchSource = Private(_search_source.SearchSourceProvider);\n\n  return function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(indexPatternId, uid, sort) {\n      var indexPattern, searchSource, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return courier.indexPatterns.get(indexPatternId);\n\n            case 2:\n              indexPattern = _context.sent;\n              searchSource = new SearchSource().inherits(false).set('index', indexPattern).set('version', true).set('size', 1).set('query', {\n                query: {\n                  terms: {\n                    _uid: [uid]\n                  }\n                },\n                language: 'lucene'\n              }).set('sort', sort);\n              _context.next = 6;\n              return searchSource.fetchAsRejectablePromise();\n\n            case 6:\n              response = _context.sent;\n\n              if (!(_lodash2.default.get(response, ['hits', 'total'], 0) < 1)) {\n                _context.next = 9;\n                break;\n              }\n\n              throw new Error('Failed to load anchor document.');\n\n            case 9:\n              return _context.abrupt('return', _extends({}, _lodash2.default.get(response, ['hits', 'hits', 0]), {\n                $$_isAnchor: true\n              }));\n\n            case 10:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function fetchAnchor(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    }\n\n    return fetchAnchor;\n  }();\n}\n\nexports.fetchAnchorProvider = fetchAnchorProvider;",null]}