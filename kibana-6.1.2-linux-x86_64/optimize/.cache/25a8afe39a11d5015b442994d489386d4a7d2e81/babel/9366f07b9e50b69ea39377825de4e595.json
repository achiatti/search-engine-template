{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/vislib/visualizations/time_marker.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/vislib/visualizations/time_marker.js","mtime":1515552039000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.VislibVisualizationsTimeMarkerProvider = VislibVisualizationsTimeMarkerProvider;\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _datemath = require('@elastic/datemath');\n\nvar _datemath2 = _interopRequireDefault(_datemath);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction VislibVisualizationsTimeMarkerProvider() {\n  var TimeMarker = function () {\n    function TimeMarker(times, xScale, height) {\n      _classCallCheck(this, TimeMarker);\n\n      var currentTimeArr = [{\n        'time': new Date().getTime(),\n        'class': 'time-marker',\n        'color': '#c80000',\n        'opacity': 0.3,\n        'width': 2\n      }];\n\n      this.xScale = xScale;\n      this.height = height;\n      this.times = times.length ? times.map(function (d) {\n        return {\n          'time': _datemath2.default.parse(d.time),\n          'class': d.class || 'time-marker',\n          'color': d.color || '#c80000',\n          'opacity': d.opacity || 0.3,\n          'width': d.width || 2\n        };\n      }) : currentTimeArr;\n    }\n\n    _createClass(TimeMarker, [{\n      key: '_isTimeBasedChart',\n      value: function _isTimeBasedChart(selection) {\n        var data = selection.data();\n        return data.every(function (datum) {\n          return datum.ordered && datum.ordered.date;\n        });\n      }\n    }, {\n      key: 'render',\n      value: function render(selection) {\n        var self = this;\n\n        // return if not time based chart\n        if (!self._isTimeBasedChart(selection)) return;\n\n        selection.each(function () {\n          _d2.default.select(this).selectAll('time-marker').data(self.times).enter().append('line').attr('class', function (d) {\n            return d.class;\n          }).attr('pointer-events', 'none').attr('stroke', function (d) {\n            return d.color;\n          }).attr('stroke-width', function (d) {\n            return d.width;\n          }).attr('stroke-opacity', function (d) {\n            return d.opacity;\n          }).attr('x1', function (d) {\n            return self.xScale(d.time);\n          }).attr('x2', function (d) {\n            return self.xScale(d.time);\n          }).attr('y1', self.height).attr('y2', self.xScale.range()[0]);\n        });\n      }\n    }]);\n\n    return TimeMarker;\n  }();\n\n  return TimeMarker;\n}",null]}