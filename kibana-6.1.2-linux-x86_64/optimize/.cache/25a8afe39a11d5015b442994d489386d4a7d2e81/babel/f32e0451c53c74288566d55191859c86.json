{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/dashboard/panel/dashboard_panel.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/dashboard/panel/dashboard_panel.js","mtime":1515552028000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DashboardPanel = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _panel_header = require('./panel_header');\n\nvar _panel_error = require('./panel_error');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DashboardPanel = exports.DashboardPanel = function (_React$Component) {\n  _inherits(DashboardPanel, _React$Component);\n\n  function DashboardPanel() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, DashboardPanel);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DashboardPanel.__proto__ || Object.getPrototypeOf(DashboardPanel)).call.apply(_ref, [this].concat(args))), _this), _this.onFocus = function () {\n      var _this$props = _this.props,\n          onPanelFocused = _this$props.onPanelFocused,\n          panel = _this$props.panel;\n\n      if (onPanelFocused) {\n        onPanelFocused(panel.panelIndex);\n      }\n    }, _this.onBlur = function () {\n      var _this$props2 = _this.props,\n          onPanelBlurred = _this$props2.onPanelBlurred,\n          panel = _this$props2.panel;\n\n      if (onPanelBlurred) {\n        onPanelBlurred(panel.panelIndex);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(DashboardPanel, [{\n    key: 'componentDidMount',\n    value: function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.props.renderEmbeddable(this.panelElement, this.props.panel);\n\n              case 1:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _ref2.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.props.onDestroy();\n    }\n  }, {\n    key: 'renderEmbeddedContent',\n    value: function renderEmbeddedContent() {\n      var _this2 = this;\n\n      return _react2.default.createElement('div', {\n        id: 'embeddedPanel',\n        className: 'panel-content',\n        ref: function ref(panelElement) {\n          return _this2.panelElement = panelElement;\n        }\n      });\n    }\n  }, {\n    key: 'renderEmbeddedError',\n    value: function renderEmbeddedError() {\n      var error = this.props.error;\n\n      var errorMessage = error.message || JSON.stringify(error);\n      return _react2.default.createElement(_panel_error.PanelError, { error: errorMessage });\n    }\n  }, {\n    key: 'renderEmbeddedContent',\n    value: function renderEmbeddedContent() {\n      var _this3 = this;\n\n      return _react2.default.createElement('div', {\n        id: 'embeddedPanel',\n        className: 'panel-content',\n        ref: function ref(panelElement) {\n          return _this3.panelElement = panelElement;\n        }\n      });\n    }\n  }, {\n    key: 'renderEmbeddedError',\n    value: function renderEmbeddedError() {\n      return _react2.default.createElement(_panel_error.PanelError, { error: this.props.error });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          viewOnlyMode = _props.viewOnlyMode,\n          error = _props.error,\n          panel = _props.panel,\n          embeddableFactory = _props.embeddableFactory;\n\n      var classes = (0, _classnames2.default)('panel panel-default', this.props.className, {\n        'panel--edit-mode': !viewOnlyMode\n      });\n      return _react2.default.createElement(\n        'div',\n        {\n          className: 'dashboard-panel',\n          onFocus: this.onFocus,\n          onBlur: this.onBlur\n        },\n        _react2.default.createElement(\n          'div',\n          {\n            className: classes,\n            'data-test-subj': 'dashboardPanel'\n          },\n          _react2.default.createElement(_panel_header.PanelHeader, {\n            embeddableFactory: embeddableFactory,\n            panelId: panel.panelIndex\n          }),\n          error ? this.renderEmbeddedError() : this.renderEmbeddedContent()\n        )\n      );\n    }\n  }]);\n\n  return DashboardPanel;\n}(_react2.default.Component);\n\nDashboardPanel.propTypes = {\n  panel: _propTypes2.default.shape({\n    panelIndex: _propTypes2.default.string\n  }),\n  renderEmbeddable: _propTypes2.default.func.isRequired,\n  viewOnlyMode: _propTypes2.default.bool.isRequired,\n  onDestroy: _propTypes2.default.func.isRequired,\n  onPanelFocused: _propTypes2.default.func,\n  onPanelBlurred: _propTypes2.default.func,\n  error: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  embeddableFactory: _propTypes2.default.object.isRequired\n};",null]}