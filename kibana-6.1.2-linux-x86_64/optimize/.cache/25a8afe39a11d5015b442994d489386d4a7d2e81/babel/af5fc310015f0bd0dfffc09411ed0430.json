{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/modals/modal_overlay.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/modals/modal_overlay.js","mtime":1515552036000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ModalOverlay = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _modal_overlay = require('./modal_overlay.html');\n\nvar _modal_overlay2 = _interopRequireDefault(_modal_overlay);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Appends the modal to the dom on instantiation, and removes it when destroy is called.\n */\nvar ModalOverlay = exports.ModalOverlay = function () {\n  function ModalOverlay(modalElement) {\n    _classCallCheck(this, ModalOverlay);\n\n    this.overlayElement = _angular2.default.element(_modal_overlay2.default);\n    this.overlayElement.append(modalElement);\n\n    _angular2.default.element(document.body).append(this.overlayElement);\n  }\n\n  /**\n   * Removes the overlay and modal from the dom.\n   */\n\n\n  _createClass(ModalOverlay, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.overlayElement.remove();\n    }\n  }]);\n\n  return ModalOverlay;\n}();",null]}