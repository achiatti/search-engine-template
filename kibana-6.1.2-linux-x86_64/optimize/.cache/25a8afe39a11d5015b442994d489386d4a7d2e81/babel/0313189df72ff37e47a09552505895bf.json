{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/input_control_vis/public/control/list_control_factory.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/input_control_vis/public/control/list_control_factory.js","mtime":1515552027000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.listControlFactory = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar listControlFactory = exports.listControlFactory = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(controlParams, kbnApi) {\n    var indexPattern, searchSource, resp;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return kbnApi.indexPatterns.get(controlParams.indexPattern);\n\n          case 2:\n            indexPattern = _context.sent;\n\n            // TODO replace SearchSource with call to suggestions API\n            searchSource = new kbnApi.SearchSource({\n              timeout: '1s',\n              terminate_after: 100000\n            });\n\n            searchSource.inherits(false); //Do not filter by time so can not inherit from rootSearchSource\n            searchSource.size(0);\n            searchSource.index(indexPattern);\n            searchSource.aggs(termsAgg(indexPattern.fields.byName[controlParams.fieldName], _lodash2.default.get(controlParams, 'options.size', 5), 'desc'));\n\n            _context.next = 10;\n            return searchSource.fetch();\n\n          case 10:\n            resp = _context.sent;\n            return _context.abrupt('return', new ListControl(controlParams, new _phrase_filter_manager.PhraseFilterManager(controlParams.id, controlParams.fieldName, indexPattern, kbnApi.queryFilter, listControlDelimiter), _lodash2.default.get(resp, 'aggregations.termsAgg.buckets', []).map(function (bucket) {\n              return { label: bucket.key.toString(), value: bucket.key.toString() };\n            })));\n\n          case 12:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function listControlFactory(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _control = require('./control');\n\nvar _phrase_filter_manager = require('./filter_manager/phrase_filter_manager');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar termsAgg = function termsAgg(field, size, direction) {\n  if (size < 1) {\n    size = 1;\n  }\n  var terms = {\n    size: size,\n    order: {\n      _count: direction\n    }\n  };\n  if (field.scripted) {\n    terms.script = {\n      inline: field.script,\n      lang: field.lang\n    };\n    terms.valueType = field.type === 'number' ? 'float' : field.type;\n  } else {\n    terms.field = field.name;\n  }\n  return {\n    'termsAgg': {\n      'terms': terms\n    }\n  };\n};\n\nvar listControlDelimiter = '$$kbn_delimiter$$';\n\nvar ListControl = function (_Control) {\n  _inherits(ListControl, _Control);\n\n  function ListControl(controlParams, filterManager, selectOptions) {\n    _classCallCheck(this, ListControl);\n\n    var _this = _possibleConstructorReturn(this, (ListControl.__proto__ || Object.getPrototypeOf(ListControl)).call(this, controlParams, filterManager));\n\n    _this.selectOptions = selectOptions;\n    return _this;\n  }\n\n  _createClass(ListControl, [{\n    key: 'getMultiSelectDelimiter',\n    value: function getMultiSelectDelimiter() {\n      return this.filterManager.delimiter;\n    }\n  }]);\n\n  return ListControl;\n}(_control.Control);",null]}