{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/discover/_hit_sort_fn.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/discover/_hit_sort_fn.js","mtime":1515552028000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HitSortFnFactory;\n// eslint-disable-next-line @elastic/kibana-custom/no-default-export\nfunction HitSortFnFactory() {\n  /**\n   * Creates a sort function that will resort hits based on the value\n   * es used to sort them.\n   *\n   * background:\n   * When a hit is sorted by elasticsearch, es will write the values that it used\n   * to sort them into an array at the top level of the hit like so\n   *\n   * ```\n   * hits: {\n   *   total: x,\n   *   hits: [\n   *     {\n   *       _id: i,\n   *       _source: {},\n   *       sort: [\n   *         // all values used to sort, in the order of precidance\n   *       ]\n   *     }\n   *   ]\n   * };\n   * ```\n   *\n   * @param  {[type]} field     [description]\n   * @param  {[type]} direction [description]\n   * @return {[type]}           [description]\n   */\n  return function createHitSortFn(direction) {\n    var descending = direction === 'desc';\n\n    return function sortHits(hitA, hitB) {\n      var bBelowa = null;\n\n      var aSorts = hitA.sort || [];\n      var bSorts = hitB.sort || [];\n\n      // walk each sort value, and compair until one is different\n      for (var i = 0; i < bSorts.length; i++) {\n        var a = aSorts[i];\n        var b = bSorts[i];\n\n        if (a == null || b > a) {\n          bBelowa = !descending;\n          break;\n        }\n\n        if (b < a) {\n          bBelowa = descending;\n          break;\n        }\n      }\n\n      if (bBelowa !== null) {\n        return bBelowa ? -1 : 1;\n      } else {\n        return 0;\n      }\n    };\n  };\n}\nmodule.exports = exports['default'];",null]}