{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/input_control_vis/public/components/vis/vis.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/input_control_vis/public/components/vis/vis.js","mtime":1515552027000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InputControlVis = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _range_control = require('./range_control');\n\nvar _list_control = require('./list_control');\n\nvar _components = require('ui_framework/components');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar InputControlVis = exports.InputControlVis = function (_Component) {\n  _inherits(InputControlVis, _Component);\n\n  function InputControlVis(props) {\n    _classCallCheck(this, InputControlVis);\n\n    var _this = _possibleConstructorReturn(this, (InputControlVis.__proto__ || Object.getPrototypeOf(InputControlVis)).call(this, props));\n\n    _this.handleSubmit = _this.handleSubmit.bind(_this);\n    _this.handleReset = _this.handleReset.bind(_this);\n    _this.handleClearAll = _this.handleClearAll.bind(_this);\n    return _this;\n  }\n\n  _createClass(InputControlVis, [{\n    key: 'handleSubmit',\n    value: function handleSubmit() {\n      this.props.submitFilters();\n    }\n  }, {\n    key: 'handleReset',\n    value: function handleReset() {\n      this.props.resetControls();\n    }\n  }, {\n    key: 'handleClearAll',\n    value: function handleClearAll() {\n      this.props.clearControls();\n    }\n  }, {\n    key: 'renderControls',\n    value: function renderControls() {\n      var _this2 = this;\n\n      return this.props.controls.map(function (control, index) {\n        var controlComponent = null;\n        switch (control.type) {\n          case 'list':\n            controlComponent = _react2.default.createElement(_list_control.ListControl, {\n              control: control,\n              controlIndex: index,\n              stageFilter: _this2.props.stageFilter\n            });\n            break;\n          case 'range':\n            controlComponent = _react2.default.createElement(_range_control.RangeControl, {\n              control: control,\n              controlIndex: index,\n              stageFilter: _this2.props.stageFilter\n            });\n            break;\n          default:\n            throw new Error('Unhandled control type ' + control.type);\n        }\n        return _react2.default.createElement(\n          'div',\n          {\n            key: control.id,\n            'data-test-subj': 'inputControl' + index\n          },\n          controlComponent\n        );\n      });\n    }\n  }, {\n    key: 'renderStagingButtons',\n    value: function renderStagingButtons() {\n      return _react2.default.createElement(\n        _components.KuiFieldGroup,\n        { className: 'actions' },\n        _react2.default.createElement(\n          _components.KuiFieldGroupSection,\n          null,\n          _react2.default.createElement(\n            _components.KuiButton,\n            {\n              buttonType: 'primary',\n              type: 'button',\n              onClick: this.handleSubmit,\n              disabled: !this.props.hasChanges(),\n              'data-test-subj': 'inputControlSubmitBtn'\n            },\n            'Apply changes'\n          )\n        ),\n        _react2.default.createElement(\n          _components.KuiFieldGroupSection,\n          null,\n          _react2.default.createElement(\n            _components.KuiButton,\n            {\n              buttonType: 'basic',\n              type: 'button',\n              onClick: this.handleReset,\n              disabled: !this.props.hasChanges(),\n              'data-test-subj': 'inputControlCancelBtn'\n            },\n            'Cancel changes'\n          )\n        ),\n        _react2.default.createElement(\n          _components.KuiFieldGroupSection,\n          null,\n          _react2.default.createElement(\n            _components.KuiButton,\n            {\n              buttonType: 'basic',\n              type: 'button',\n              onClick: this.handleClearAll,\n              disabled: !this.props.hasValues(),\n              'data-test-subj': 'inputControlClearBtn'\n            },\n            'Clear form'\n          )\n        )\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var stagingButtons = void 0;\n      if (this.props.controls.length > 0 && !this.props.updateFiltersOnChange) {\n        stagingButtons = this.renderStagingButtons();\n      }\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'inputControlVis' },\n        this.renderControls(),\n        stagingButtons\n      );\n    }\n  }]);\n\n  return InputControlVis;\n}(_react.Component);\n\nInputControlVis.propTypes = {\n  stageFilter: _propTypes2.default.func.isRequired,\n  submitFilters: _propTypes2.default.func.isRequired,\n  resetControls: _propTypes2.default.func.isRequired,\n  clearControls: _propTypes2.default.func.isRequired,\n  controls: _propTypes2.default.array.isRequired,\n  updateFiltersOnChange: _propTypes2.default.bool,\n  hasChanges: _propTypes2.default.func.isRequired,\n  hasValues: _propTypes2.default.func.isRequired\n};",null]}