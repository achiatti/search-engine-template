{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/visualize/embeddable/visualize_embeddable_factory.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/visualize/embeddable/visualize_embeddable_factory.js","mtime":1515552029000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VisualizeEmbeddableFactory = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nrequire('ui/visualize');\n\nvar _visualize_template = require('./visualize_template.html');\n\nvar _visualize_template2 = _interopRequireDefault(_visualize_template);\n\nvar _panel_state = require('plugins/kibana/dashboard/panel/panel_state');\n\nvar _brush_event = require('ui/utils/brush_event');\n\nvar _filter_bar_click_handler = require('ui/filter_bar/filter_bar_click_handler');\n\nvar _embeddable = require('ui/embeddable');\n\nvar _chrome = require('ui/chrome');\n\nvar _chrome2 = _interopRequireDefault(_chrome);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar VisualizeEmbeddableFactory = exports.VisualizeEmbeddableFactory = function (_EmbeddableFactory) {\n  _inherits(VisualizeEmbeddableFactory, _EmbeddableFactory);\n\n  function VisualizeEmbeddableFactory($compile, $rootScope, visualizeLoader, timefilter, Notifier, Promise, Private, config) {\n    _classCallCheck(this, VisualizeEmbeddableFactory);\n\n    var _this = _possibleConstructorReturn(this, (VisualizeEmbeddableFactory.__proto__ || Object.getPrototypeOf(VisualizeEmbeddableFactory)).call(this));\n\n    _this._config = config;\n    _this.$compile = $compile;\n    _this.visualizeLoader = visualizeLoader;\n    _this.$rootScope = $rootScope;\n    _this.name = 'visualization';\n    _this.Promise = Promise;\n    _this.brushEvent = (0, _brush_event.UtilsBrushEventProvider)(timefilter);\n    _this.filterBarClickHandler = (0, _filter_bar_click_handler.FilterBarClickHandlerProvider)(Notifier, Private);\n    return _this;\n  }\n\n  _createClass(VisualizeEmbeddableFactory, [{\n    key: 'getEditPath',\n    value: function getEditPath(panelId) {\n      return this.visualizeLoader.urlFor(panelId);\n    }\n  }, {\n    key: 'render',\n    value: function render(domNode, panel, container) {\n      var _this2 = this;\n\n      var visualizeScope = this.$rootScope.$new();\n      visualizeScope.editUrl = this.getEditPath(panel.id);\n      return this.visualizeLoader.get(panel.id).then(function (savedObject) {\n        var isLabsEnabled = _this2._config.get('visualize:enableLabs');\n\n        if (!isLabsEnabled && savedObject.vis.type.stage === 'lab') {\n          domNode.innerHTML = '\\n<div class=\"disabledLabVisualization\">\\n  <div class=\"kuiVerticalRhythm disabledLabVisualization__icon kuiIcon fa-flask\" aria-hidden=\"true\"></div>\\n  <div class=\"kuiVerticalRhythm\"><em>' + savedObject.title + '</em> is a lab visualization.</div>\\n  <div class=\"kuiVerticalRhythm\">Please turn on lab-mode in the advanced settings to see lab visualizations.</div>\\n</div>\\n';\n          return new _embeddable.Embeddable({\n            title: savedObject.title\n          });\n        }\n\n        if (!container.getHidePanelTitles()) {\n          visualizeScope.sharedItemTitle = panel.title !== undefined ? panel.title : savedObject.title;\n        }\n        visualizeScope.savedObj = savedObject;\n        visualizeScope.panel = panel;\n\n        var uiState = savedObject.uiStateJSON ? JSON.parse(savedObject.uiStateJSON) : {};\n        visualizeScope.uiState = container.createChildUistate((0, _panel_state.getPersistedStateId)(panel), uiState);\n\n        visualizeScope.savedObj.vis.setUiState(visualizeScope.uiState);\n\n        visualizeScope.savedObj.vis.listeners.click = _this2.filterBarClickHandler(container.getAppState());\n        visualizeScope.savedObj.vis.listeners.brush = _this2.brushEvent(container.getAppState());\n\n        // The chrome is permanently hidden in \"embed mode\" in which case we don't want to show the spy pane, since\n        // we deem that situation to be more public facing and want to hide more detailed information.\n        visualizeScope.getShouldShowSpyPane = function () {\n          return !_chrome2.default.getIsChromePermanentlyHidden();\n        };\n\n        container.registerPanelIndexPattern(panel.panelIndex, visualizeScope.savedObj.vis.indexPattern);\n\n        var visualizationInstance = _this2.$compile(_visualize_template2.default)(visualizeScope);\n        var rootNode = _angular2.default.element(domNode);\n        rootNode.append(visualizationInstance);\n\n        _this2.addDestroyEmeddable(panel.panelIndex, function () {\n          visualizationInstance.remove();\n          visualizeScope.savedObj.destroy();\n          visualizeScope.$destroy();\n        });\n\n        return new _embeddable.Embeddable({\n          title: savedObject.title,\n          editUrl: visualizeScope.editUrl\n        });\n      });\n    }\n  }]);\n\n  return VisualizeEmbeddableFactory;\n}(_embeddable.EmbeddableFactory);",null]}