{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/kuery/node_types/function.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/kuery/node_types/function.js","mtime":1515552036000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.buildNode = buildNode;\nexports.buildNodeWithArgumentNodes = buildNodeWithArgumentNodes;\nexports.toElasticsearchQuery = toElasticsearchQuery;\nexports.toKueryExpression = toKueryExpression;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _functions = require('../functions');\n\nvar _node_types = require('../node_types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildNode(functionName) {\n  var kueryFunction = _functions.functions[functionName];\n\n  if (_lodash2.default.isUndefined(kueryFunction)) {\n    throw new Error('Unknown function \"' + functionName + '\"');\n  }\n\n  for (var _len = arguments.length, functionArgs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    functionArgs[_key - 1] = arguments[_key];\n  }\n\n  return _extends({\n    type: 'function',\n    function: functionName\n  }, kueryFunction.buildNodeParams.apply(kueryFunction, functionArgs));\n}\n\n// Mainly only useful in the grammar where we'll already have real argument nodes in hand\nfunction buildNodeWithArgumentNodes(functionName, argumentNodes) {\n  var serializeStyle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'function';\n\n  if (_lodash2.default.isUndefined(_functions.functions[functionName])) {\n    throw new Error('Unknown function \"' + functionName + '\"');\n  }\n\n  return {\n    type: 'function',\n    function: functionName,\n    arguments: argumentNodes,\n    serializeStyle: serializeStyle\n  };\n}\n\nfunction toElasticsearchQuery(node, indexPattern) {\n  var kueryFunction = _functions.functions[node.function];\n  return kueryFunction.toElasticsearchQuery(node, indexPattern);\n}\n\nfunction toKueryExpression(node) {\n  var kueryFunction = _functions.functions[node.function];\n\n  if (!_lodash2.default.isUndefined(node.text)) {\n    return node.text;\n  }\n\n  if (node.serializeStyle && node.serializeStyle !== 'function') {\n    return kueryFunction.toKueryExpression(node);\n  }\n\n  var functionArguments = (node.arguments || []).map(function (argument) {\n    return _node_types.nodeTypes[argument.type].toKueryExpression(argument);\n  });\n\n  return node.function + '(' + functionArguments.join(', ') + ')';\n}",null]}