{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/kbn_top_nav/bread_crumbs/bread_crumbs.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/kbn_top_nav/bread_crumbs/bread_crumbs.js","mtime":1515552036000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nvar _bread_crumbs = require('./bread_crumbs.html');\n\nvar _bread_crumbs2 = _interopRequireDefault(_bread_crumbs);\n\nvar _modules = require('ui/modules');\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = _modules.uiModules.get('kibana');\n\n_module.directive('breadCrumbs', function () {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      omitCurrentPage: '=',\n      /**\n       * Pages to omit from the breadcrumbs. Should be lower-case.\n       * @type {Array}\n       */\n      omitPages: '=',\n      /**\n       * Optional title to append at the end of the breadcrumbs. Note that this can't just be\n       * 'title', because that will be interpreted by browsers as an actual 'title' HTML attribute.\n       * @type {String}\n       */\n      pageTitle: '=',\n      /**\n       * If true, makes each breadcrumb a clickable link.\n       * @type {String}\n       */\n      useLinks: '='\n    },\n    template: _bread_crumbs2.default,\n    controller: function controller($scope) {\n\n      function omitPagesFilter(crumb) {\n        return !$scope.omitPages || !$scope.omitPages.includes(crumb.id);\n      }\n\n      function omitCurrentPageFilter(crumb) {\n        return !($scope.omitCurrentPage && crumb.current);\n      }\n\n      $scope.$watchMulti(['[]omitPages', 'omitCurrentPage'], function getBreadcrumbs() {\n        $scope.breadcrumbs = _routes2.default.getBreadcrumbs().filter(omitPagesFilter).filter(omitCurrentPageFilter);\n      });\n    }\n  };\n});",null]}