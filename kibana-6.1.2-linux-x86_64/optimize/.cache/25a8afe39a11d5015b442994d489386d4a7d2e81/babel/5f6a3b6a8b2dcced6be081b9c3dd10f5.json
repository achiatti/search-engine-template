{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/dashboard/panel/panel_header/panel_options_menu.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/dashboard/panel/panel_header/panel_options_menu.js","mtime":1515552028000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PanelOptionsMenu = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _components = require('ui_framework/components');\n\nvar _panel_options_menu_form = require('./panel_options_menu_form');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar PanelOptionsMenu = exports.PanelOptionsMenu = function (_React$Component) {\n  _inherits(PanelOptionsMenu, _React$Component);\n\n  function PanelOptionsMenu() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, PanelOptionsMenu);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PanelOptionsMenu.__proto__ || Object.getPrototypeOf(PanelOptionsMenu)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      isPopoverOpen: false\n    }, _this.toggleMenu = function () {\n      _this.setState({ isPopoverOpen: !_this.state.isPopoverOpen });\n    }, _this.closePopover = function () {\n      return _this.setState({ isPopoverOpen: false });\n    }, _this.onEditPanel = function () {\n      window.location = _this.props.editUrl;\n    }, _this.onDeletePanel = function () {\n      if (_this.props.onDeletePanel) {\n        _this.props.onDeletePanel();\n      }\n    }, _this.onToggleExpandPanel = function () {\n      _this.closePopover();\n      _this.props.toggleExpandedPanel();\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(PanelOptionsMenu, [{\n    key: 'buildMainMenuPanel',\n    value: function buildMainMenuPanel() {\n      var isExpanded = this.props.isExpanded;\n\n      var mainPanelMenuItems = [{\n        name: 'Edit visualization',\n        'data-test-subj': 'dashboardPanelEditLink',\n        icon: _react2.default.createElement('span', {\n          'aria-hidden': 'true',\n          className: 'kuiButton__icon kuiIcon fa-edit'\n        }),\n        onClick: this.props.editUrl ? this.onEditPanel : undefined\n      }, {\n        name: 'Customize panel',\n        'data-test-subj': 'dashboardPanelOptionsSubMenuLink',\n        icon: _react2.default.createElement('span', {\n          'aria-hidden': 'true',\n          className: 'kuiButton__icon kuiIcon fa-edit'\n        }),\n        panel: 'panelSubOptionsMenu'\n      }, {\n        name: isExpanded ? 'Minimize' : 'Full screen',\n        'data-test-subj': 'dashboardPanelExpandIcon',\n        icon: _react2.default.createElement('span', {\n          'aria-hidden': 'true',\n          className: 'kuiButton__icon kuiIcon ' + (isExpanded ? 'fa-compress' : 'fa-expand')\n        }),\n        onClick: this.onToggleExpandPanel\n      }];\n      if (!this.props.isExpanded) {\n        mainPanelMenuItems.push({\n          name: 'Delete from dashboard',\n          'data-test-subj': 'dashboardPanelRemoveIcon',\n          icon: _react2.default.createElement('span', {\n            'aria-hidden': 'true',\n            className: 'kuiButton__icon kuiIcon fa-trash'\n          }),\n          onClick: this.onDeletePanel\n        });\n      }\n\n      return {\n        title: 'Options',\n        id: 'mainMenu',\n        items: mainPanelMenuItems\n      };\n    }\n  }, {\n    key: 'buildPanelOptionsSubMenu',\n    value: function buildPanelOptionsSubMenu() {\n      return {\n        title: 'Customize panel',\n        id: 'panelSubOptionsMenu',\n        content: _react2.default.createElement(_panel_options_menu_form.PanelOptionsMenuForm, {\n          onReset: this.props.onResetPanelTitle,\n          onUpdatePanelTitle: this.props.onUpdatePanelTitle,\n          title: this.props.panelTitle,\n          onClose: this.closePopover\n        })\n      };\n    }\n  }, {\n    key: 'renderPanels',\n    value: function renderPanels() {\n      return [this.buildMainMenuPanel(), this.buildPanelOptionsSubMenu()];\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var button = _react2.default.createElement(\n        _components.KuiKeyboardAccessible,\n        null,\n        _react2.default.createElement('span', {\n          'aria-label': 'Panel options',\n          className: 'kuiButton__icon kuiIcon panel-dropdown fa fa-gear',\n          'data-test-subj': 'dashboardPanelToggleMenuIcon',\n          onClick: this.toggleMenu\n        })\n      );\n\n      return _react2.default.createElement(\n        _components.KuiPopover,\n        {\n          className: 'dashboardPanelPopOver',\n          button: button,\n          isOpen: this.state.isPopoverOpen,\n          closePopover: this.closePopover,\n          panelPaddingSize: 'none',\n          anchorPosition: 'right',\n          withTitle: true\n        },\n        _react2.default.createElement(_components.KuiContextMenu, {\n          initialPanelId: 'mainMenu',\n          panels: this.renderPanels()\n        })\n      );\n    }\n  }]);\n\n  return PanelOptionsMenu;\n}(_react2.default.Component);\n\nPanelOptionsMenu.propTypes = {\n  panelTitle: _propTypes2.default.string,\n  onUpdatePanelTitle: _propTypes2.default.func.isRequired,\n  onResetPanelTitle: _propTypes2.default.func.isRequired,\n  editUrl: _propTypes2.default.string, // May be empty if the embeddable is still loading\n  toggleExpandedPanel: _propTypes2.default.func.isRequired,\n  isExpanded: _propTypes2.default.bool.isRequired,\n  onDeletePanel: _propTypes2.default.func // Not available when the panel is expanded.\n};",null]}