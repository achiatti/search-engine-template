{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/vis/vis_types/vislib_vis_type.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/vis/vis_types/vislib_vis_type.js","mtime":1515552039000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.VislibVisTypeProvider = VislibVisTypeProvider;\n\nrequire('plugins/kbn_vislib_vis_types/controls/vislib_basic_options');\n\nrequire('plugins/kbn_vislib_vis_types/controls/point_series_options');\n\nrequire('plugins/kbn_vislib_vis_types/controls/line_interpolation_option');\n\nrequire('plugins/kbn_vislib_vis_types/controls/heatmap_options');\n\nrequire('plugins/kbn_vislib_vis_types/controls/gauge_options');\n\nrequire('plugins/kbn_vislib_vis_types/controls/point_series');\n\nvar _base_vis_type = require('./base_vis_type');\n\nvar _point_series = require('ui/agg_response/point_series/point_series');\n\nvar _vislib = require('ui/vislib');\n\nvar _vislib2 = _interopRequireDefault(_vislib);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction VislibVisTypeProvider(Private) {\n  var VisType = Private(_base_vis_type.VisTypeProvider);\n  var pointSeries = Private(_point_series.AggResponsePointSeriesProvider);\n  var vislib = Private(_vislib2.default);\n\n  var VislibVisController = function () {\n    function VislibVisController(el, vis) {\n      _classCallCheck(this, VislibVisController);\n\n      this.el = el;\n      this.vis = vis;\n    }\n\n    _createClass(VislibVisController, [{\n      key: 'render',\n      value: function render(esResponse) {\n        var _this = this;\n\n        this._response = esResponse;\n        if (this.vis.vislibVis) {\n          this.destroy();\n        } else {\n          this.vis.refreshLegend = 0;\n        }\n\n        return new Promise(function (resolve, reject) {\n          if (!_this._response) return reject();\n          _this.vis.vislibVis = new vislib.Vis(_this.el, _this.vis.params);\n          _this.vis.vislibVis.on('brush', _this.vis.API.events.brush);\n          _this.vis.vislibVis.on('click', _this.vis.API.events.filter);\n          _this.vis.vislibVis.on('renderComplete', resolve);\n          _this.vis.vislibVis.render(esResponse, _this.vis.getUiState());\n        });\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        if (this.vis.vislibVis) {\n          this.vis.vislibVis.off('brush', this.vis.API.events.brush);\n          this.vis.vislibVis.off('click', this.vis.API.events.filter);\n          this.vis.vislibVis.destroy();\n          delete this.vis.vislibVis;\n        }\n      }\n    }]);\n\n    return VislibVisController;\n  }();\n\n  var VislibVisType = function (_VisType) {\n    _inherits(VislibVisType, _VisType);\n\n    function VislibVisType(opts) {\n      _classCallCheck(this, VislibVisType);\n\n      if (!opts.responseHandler) {\n        opts.responseHandler = 'basic';\n      }\n      if (!opts.responseConverter) {\n        opts.responseConverter = pointSeries;\n      }\n      opts.visualization = VislibVisController;\n\n      var _this2 = _possibleConstructorReturn(this, (VislibVisType.__proto__ || Object.getPrototypeOf(VislibVisType)).call(this, opts));\n\n      _this2.refreshLegend = 0;\n      return _this2;\n    }\n\n    return VislibVisType;\n  }(VisType);\n\n  return VislibVisType;\n}",null]}