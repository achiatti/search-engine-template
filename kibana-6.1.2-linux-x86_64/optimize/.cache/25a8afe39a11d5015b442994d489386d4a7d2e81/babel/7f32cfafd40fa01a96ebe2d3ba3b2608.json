{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/parse_query/lib/from_user.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/parse_query/lib/from_user.js","mtime":1515552036000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParseQueryLibFromUserProvider = ParseQueryLibFromUserProvider;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ParseQueryLibFromUserProvider() {\n\n  /**\n   * Take userInput from the user and make it into a query object\n   * @param {userInput} user's query input\n   * @returns {object}\n   */\n  return function (userInput) {\n    var matchAll = '';\n\n    if (_lodash2.default.isObject(userInput)) {\n      // If we get an empty object, treat it as a *\n      if (!Object.keys(userInput).length) {\n        return matchAll;\n      }\n      return userInput;\n    }\n\n    // Nope, not an object.\n    userInput = (userInput || '').trim();\n    if (userInput.length === 0) return matchAll;\n\n    if (userInput[0] === '{') {\n      try {\n        return JSON.parse(userInput);\n      } catch (e) {\n        return userInput;\n      }\n    } else {\n      return userInput;\n    }\n  };\n}",null]}