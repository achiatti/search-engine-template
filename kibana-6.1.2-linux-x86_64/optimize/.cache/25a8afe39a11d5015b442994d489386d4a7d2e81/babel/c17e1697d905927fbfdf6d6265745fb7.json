{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/console/public/src/es.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/console/public/src/es.js","mtime":1515552026000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getVersion = getVersion;\nexports.getContentType = getContentType;\nexports.send = send;\nexports.constructESUrl = constructESUrl;\n\nvar _querystring = require('querystring');\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar esVersion = [];\n\nfunction getVersion() {\n  return esVersion;\n}\n\nfunction getContentType(body) {\n  if (!body) return;\n  return 'application/json';\n}\n\nfunction send(method, path, data) {\n  var wrappedDfd = _jquery2.default.Deferred();\n\n  console.log(\"Calling \" + path);\n  var isGetRequest = /^get$/i.test(method);\n  if (data && isGetRequest) {\n    method = \"POST\";\n  }\n\n  var options = {\n    url: '../api/console/proxy?' + (0, _querystring.stringify)({ path: path, method: method }),\n    data: data,\n    contentType: getContentType(data),\n    cache: false,\n    crossDomain: true,\n    type: 'POST',\n    dataType: 'text' // disable automatic guessing\n  };\n\n  _jquery2.default.ajax(options).then(function (data, textStatus, jqXHR) {\n    wrappedDfd.resolveWith(this, [data, textStatus, jqXHR]);\n  }, function (jqXHR, textStatus, errorThrown) {\n    if (jqXHR.status == 0) {\n      jqXHR.responseText = \"\\n\\nFailed to connect to Console's backend.\\nPlease check the Kibana server is up and running\";\n    }\n    wrappedDfd.rejectWith(this, [jqXHR, textStatus, errorThrown]);\n  });\n  return wrappedDfd;\n}\n\nfunction constructESUrl(baseUri, path) {\n  baseUri = baseUri.replace(/\\/+$/, '');\n  path = path.replace(/^\\/+/, '');\n  return baseUri + '/' + path;\n}",null]}