{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/dashboard/index.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/core_plugins/kibana/public/dashboard/index.js","mtime":1515552028000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nrequire('plugins/kibana/dashboard/dashboard_app');\n\nrequire('plugins/kibana/dashboard/saved_dashboard/saved_dashboards');\n\nrequire('plugins/kibana/dashboard/styles/index.less');\n\nrequire('plugins/kibana/dashboard/dashboard_config');\n\nvar _routes = require('ui/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _notify = require('ui/notify');\n\nvar _dashboard_app = require('plugins/kibana/dashboard/dashboard_app.html');\n\nvar _dashboard_app2 = _interopRequireDefault(_dashboard_app);\n\nvar _dashboard_listing = require('./listing/dashboard_listing.html');\n\nvar _dashboard_listing2 = _interopRequireDefault(_dashboard_listing);\n\nvar _dashboard_listing3 = require('./listing/dashboard_listing');\n\nvar _dashboard_constants = require('./dashboard_constants');\n\nvar _errors = require('ui/errors');\n\nvar _feature_catalogue = require('ui/registry/feature_catalogue');\n\nvar _saved_objects = require('ui/saved_objects');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_routes2.default.defaults(/dashboard/, {\n  requireDefaultIndex: true\n}).when(_dashboard_constants.DashboardConstants.LANDING_PAGE_PATH, {\n  template: _dashboard_listing2.default,\n  controller: _dashboard_listing3.DashboardListingController,\n  controllerAs: 'listingController',\n  resolve: {\n    dash: function dash($route, Private, courier, kbnUrl) {\n      var savedObjectsClient = Private(_saved_objects.SavedObjectsClientProvider);\n      var title = $route.current.params.title;\n      if (title) {\n        return savedObjectsClient.find({\n          search: '\"' + title + '\"',\n          search_fields: 'title',\n          type: 'dashboard'\n        }).then(function (results) {\n          // The search isn't an exact match, lets see if we can find a single exact match to use\n          var matchingDashboards = results.savedObjects.filter(function (dashboard) {\n            return dashboard.attributes.title.toLowerCase() === title.toLowerCase();\n          });\n          if (matchingDashboards.length === 1) {\n            kbnUrl.redirect((0, _dashboard_constants.createDashboardEditUrl)(matchingDashboards[0].id));\n          } else {\n            kbnUrl.redirect(_dashboard_constants.DashboardConstants.LANDING_PAGE_PATH + '?filter=\"' + title + '\"');\n          }\n          throw _routes2.default.WAIT_FOR_URL_CHANGE_TOKEN;\n        }).catch(courier.redirectWhenMissing({\n          'dashboard': _dashboard_constants.DashboardConstants.LANDING_PAGE_PATH\n        }));\n      }\n    }\n  }\n}).when(_dashboard_constants.DashboardConstants.CREATE_NEW_DASHBOARD_URL, {\n  template: _dashboard_app2.default,\n  resolve: {\n    dash: function dash(savedDashboards, courier) {\n      return savedDashboards.get().catch(courier.redirectWhenMissing({\n        'dashboard': _dashboard_constants.DashboardConstants.LANDING_PAGE_PATH\n      }));\n    }\n  }\n}).when((0, _dashboard_constants.createDashboardEditUrl)(':id'), {\n  template: _dashboard_app2.default,\n  resolve: {\n    dash: function dash(savedDashboards, Notifier, $route, $location, courier, kbnUrl, AppState) {\n      var id = $route.current.params.id;\n      return savedDashboards.get(id).catch(function (error) {\n        // Preserve BWC of v5.3.0 links for new, unsaved dashboards.\n        // See https://github.com/elastic/kibana/issues/10951 for more context.\n        if (error instanceof _errors.SavedObjectNotFound && id === 'create') {\n          // Note \"new AppState\" is neccessary so the state in the url is preserved through the redirect.\n          kbnUrl.redirect(_dashboard_constants.DashboardConstants.CREATE_NEW_DASHBOARD_URL, {}, new AppState());\n          _notify.notify.error('The url \"dashboard/create\" is deprecated and will be removed in 6.0. Please update your bookmarks.');\n        } else {\n          throw error;\n        }\n      }).catch(courier.redirectWhenMissing({\n        'dashboard': _dashboard_constants.DashboardConstants.LANDING_PAGE_PATH\n      }));\n    }\n  }\n});\n\n_feature_catalogue.FeatureCatalogueRegistryProvider.register(function () {\n  return {\n    id: 'dashboard',\n    title: 'Dashboard',\n    description: 'Display and share a collection of visualizations and saved searches.',\n    icon: '/plugins/kibana/assets/app_dashboard.svg',\n    path: '/app/kibana#' + _dashboard_constants.DashboardConstants.LANDING_PAGE_PATH,\n    showOnHomePage: true,\n    category: _feature_catalogue.FeatureCatalogueCategory.DATA\n  };\n});",null]}