{"remainingRequest":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js??ref--6-1!/home/vagrant/projects/kibana/build/kibana/src/ui/public/filter_manager/lib/phrases.js","dependencies":[{"path":"/home/vagrant/projects/kibana/build/kibana/src/ui/public/filter_manager/lib/phrases.js","mtime":1515552036000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/vagrant/projects/kibana/build/kibana/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildPhrasesFilter = buildPhrasesFilter;\n\nvar _phrase = require('./phrase');\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction buildPhrasesFilter(field, params, indexPattern) {\n  var index = indexPattern.id;\n  var type = 'phrases';\n  var key = field.name;\n  var value = params.map(function (value) {\n    return field.format.convert(value);\n  }).join(', ');\n\n  var filter = {\n    meta: { index: index, type: type, key: key, value: value, params: params }\n  };\n\n  var should = void 0;\n  if (field.scripted) {\n    should = params.map(function (value) {\n      return {\n        script: (0, _phrase.getPhraseScript)(field, value)\n      };\n    });\n  } else {\n    should = params.map(function (value) {\n      return {\n        match_phrase: _defineProperty({}, field.name, value)\n      };\n    });\n  }\n\n  filter.query = {\n    bool: {\n      should: should,\n      minimum_should_match: 1\n    }\n  };\n\n  return filter;\n}",null]}